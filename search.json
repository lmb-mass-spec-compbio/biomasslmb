[{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 Tom Smith Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/articles/TMT_PSM_QC_Summarisation.html","id":"load-required-packages","dir":"Articles","previous_headings":"","what":"Load required packages","title":"TMT QC PSM-level quantification and summarisation to protein-level abundance","text":"clarify functionality provided package, use package::function. code, need specify package unless want maintain clarity.","code":"library(QFeatures) library(biomasslmb) library(ggplot2) library(tidyr) library(dplyr)"},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/articles/TMT_PSM_QC_Summarisation.html","id":"defining-the-contaminant-proteins","dir":"Articles","previous_headings":"","what":"Defining the contaminant proteins","title":"TMT QC PSM-level quantification and summarisation to protein-level abundance","text":"need remove contaminant proteins. defined using cRAP database. , parse contaminants fasta extract IDs proteins ‘cRAP’ format Uniprot IDs.","code":"crap_fasta_inf <- system.file(   \"extdata\", \"cRAP_20190401.fasta.gz\",    package = \"biomasslmb\" )  # Extract the protein IDs associated with each cRAP protein crap_accessions <- biomasslmb::get_crap_fasta_accessions(crap_fasta_inf)  print(head(crap_accessions)) #> [1] \"cRAP001\" \"P00330\"  \"cRAP002\" \"P02768\"  \"cRAP003\" \"P00883\""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/articles/TMT_PSM_QC_Summarisation.html","id":"read-in-input-data","dir":"Articles","previous_headings":"","what":"Read in input data","title":"TMT QC PSM-level quantification and summarisation to protein-level abundance","text":"start reading quantitative proteomics data QFeatures object, standard Bioconductor object holding quantitative proteomics data. See documentation QFeatures object.case, adding experimental details QFeatures object, ColData empty. psm_tmt_total data set available biomasslmb package containing PSM-level output Proteome Discoverer (PD) experiment 10 samples (one separate TMT tags). truncated file containing first 5,000 PSMs . , include details experimental design. Usually, included providing data.frame colData argument. See ?readQFeatures full details read quantification data QFeatures object. 2 quantification values exactly zero. replaced NA, since mass spectrometry capable asserting protein zero abundance sample. first perform routine filtering remove PSMs : originate contaminants. See ?filter_features_pd_dda details, including removal ‘associated cRAP’. Don’t unique master protein.","code":"tmt_qf <- QFeatures::readQFeatures(assayData = psm_tmt_total,                                    quantCols = 36:45,                                     name = \"psms_raw\") #> Checking arguments. #> Loading data as a 'SummarizedExperiment' object. #> Formatting sample annotations (colData). #> Formatting data as a 'QFeatures' object.  # Add a more accurate average S:N ratio value. # The one calculated by PD doesn't treat NA values appropriately! tmt_qf[['psms_raw']] <- update_average_sn(tmt_qf[['psms_raw']]) tmt_qf[['psms_raw']] <- QFeatures::zeroIsNA(tmt_qf[['psms_raw']]) # Perform routine raw data filtering. # - Remove PSMs from contaminant proteins # - Remove PSMs where protein ID is empty or not unique tmt_qf[['psms_filtered']] <- filter_features_pd_dda(tmt_qf[['psms_raw']],                                              crap_proteins=crap_accessions,                                              level='PSM',                                              TMT=TRUE,                                              filter_crap=TRUE,                                              filter_associated_crap=TRUE,                                              unique_master=TRUE, ) #> Filtering data... #> 5000 features found from 2364 master proteins => Input #> 242 cRAP proteins supplied #> 60 proteins identified as 'cRAP associated' #> 4933 features found from 2346 master proteins => cRAP features removed #> 4924 features found from 2340 master proteins => associated cRAP features removed #> 4922 features found from 2339 master proteins => features without a master protein removed #> 4748 features found from 2242 master proteins => features with non-unique master proteins removed #> 4747 features found from 2242 master proteins => features without quantification removed"},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/articles/TMT_PSM_QC_Summarisation.html","id":"normalise","dir":"Articles","previous_headings":"","what":"Normalise","title":"TMT QC PSM-level quantification and summarisation to protein-level abundance","text":"Next, plot peptide intensities check approximately using biomasslmb::plot_quant.  Since amount sample labelled case, ’s reasonable use ‘diff.median’ normalisation QFeatures::normalize. First though, need log-transform abundances normalisation works expected. exponentiate quantification values back original scale (reverse log-transformation) afterwards, since downstream steps including summarisation protein require non-transformed values","code":"# Plot the peptide-level quantification distributions per sample biomasslmb::plot_quant(tmt_qf[['psms_filtered']],                        log2transform=TRUE,                        method='density') +   theme_biomasslmb() +   xlab('PSM abundance (log2)') # Normalise the log2-transformed abundances using diff.median tmt_qf[['psms_filtered_norm']] <- QFeatures::normalize(   logTransform(tmt_qf[['psms_filtered']], base=2), method='diff.median')   # Exponentiate the quantification values back to the initial scale. assay(tmt_qf[['psms_filtered_norm']]) <- 2^assay(tmt_qf[['psms_filtered_norm']])  # Plot the peptide-level quantification distributions per sample biomasslmb::plot_quant(tmt_qf[['psms_filtered_norm']],                        log2transform=TRUE,                        method='density') +   theme_biomasslmb() +   xlab('PSM abundance (log2)')"},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/articles/TMT_PSM_QC_Summarisation.html","id":"removing-low-quality-psms","dir":"Articles","previous_headings":"","what":"Removing low quality PSMs","title":"TMT QC PSM-level quantification and summarisation to protein-level abundance","text":"want remove low Signal:Noise (S:N) PSMs, since quantification values less accurate missing values. can inspect relationship S:N missing values using plot_missing_SN function. Note signal:noise > 10, far fewer missing values. Missing values per PSM, relation signal:noise ratio can also look relationship tag level using plot_missing_SN_per_sample inspect whether labeling issue particular tag. case, tag appears high proportion missing values signal:noise > 10. Missing values per tag, relation signal:noise ratio Based , filter PSMs retain S:N > 10 using filter_TMT_PSMs since PSMs clearly much closer limit detection MS therefore likely contain less accurate quantification data. Note necessitates removing ~ 1/20 PSMs case. Using function, also remove PSMs interference/co-isolation >50% since also likely contain less accurate quantification data.","code":"plot_missing_SN(tmt_qf[['psms_filtered_norm']], bins = 30) plot_missing_SN_per_sample(tmt_qf[['psms_filtered_norm']], bins = 30) # Then filter PSMs to remove low S:N and/or high interference tmt_qf[['psms_filtered_norm']] <- filter_TMT_PSMs(tmt_qf[['psms_filtered_norm']],                                                   inter_thresh=50, sn_thresh=10) #> Filtering PSMs... #> 4747 features found from 2242 master proteins => Initial PSMs #> 4747 features found from 2242 master proteins => Removing PSMs without quantification values #> 4628 features found from 2206 master proteins => Removing PSMs with high Co-isolation/interference #> 4470 features found from 2178 master proteins => Removing PSMs with low average S:N ratio"},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/articles/TMT_PSM_QC_Summarisation.html","id":"summarising-to-protein-level-abundances","dir":"Articles","previous_headings":"","what":"Summarising to protein-level abundances","title":"TMT QC PSM-level quantification and summarisation to protein-level abundance","text":"Now inspected PSM-level quantification filtered PSMs, can summarise PSMs protein-level abundances. PSM protein summarisation TMT quantification, simply summing together PSM-level abundances provides accurate estimates, long missing values. many missing values present, MsCoreUtils::robustSummary method may preferred, since able summarise accurately, even presence missing values (Sticker et al. 2020). see approaches , since later approach requires additional steps ensure performed appropriately comparison informative considering means summarise PSMs protein level abundances.","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/articles/TMT_PSM_QC_Summarisation.html","id":"summarisation-with-sum","dir":"Articles","previous_headings":"Summarising to protein-level abundances","what":"Summarisation with sum","title":"TMT QC PSM-level quantification and summarisation to protein-level abundance","text":"start aggregating PSMs using simple sum. First, need deal missing values. leave missing values , either need allow protein quantifications NA, else ignore missing values summarisation, potentially mean different PSMs summed given protein across samples. , therefore remove PSMs missing values. Next, remove PSMs proteins fewer 2 PSMs. common filter proteomics ensure protein-level quantifications derived least two independent observations. cases, example phosphoproteomics, filter appears stringent, may appropriate skip . Finally, perform summarisation.","code":"tmt_qf[['psms_filtered_forSum']] <- QFeatures::filterNA(   tmt_qf[['psms_filtered_norm']], 0) min_psms <- 2 tmt_qf[['psms_filtered_forSum']] <- biomasslmb::filter_features_per_protein(   tmt_qf[['psms_filtered_forSum']], min_features = min_psms) # Aggregate to protein-level abundances (using QFeatures function) tmt_qf <- QFeatures::aggregateFeatures(tmt_qf,                                         i = \"psms_filtered_forSum\",                                         fcol = \"Master.Protein.Accessions\",                                        name = \"protein_sum\",                                        fun = base::colSums) #> Your row data contain missing values. Please read the relevant #> section(s) in the aggregateFeatures manual page regarding the effects #> of missing values on data aggregation. tmt_qf[['protein_sum']] <- QFeatures::logTransform(   tmt_qf[['protein_sum']], base=2)"},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/articles/TMT_PSM_QC_Summarisation.html","id":"summarisation-with-robustsummary","dir":"Articles","previous_headings":"Summarising to protein-level abundances","what":"Summarisation with robustSummary","title":"TMT QC PSM-level quantification and summarisation to protein-level abundance","text":"instances, TMT proteomics, summarisation sum sufficient. However, may cases need remove missing values sum summarisation removes many PSMs. case, alternative summarisation approach using robustSummary (Sticker et al. 2020) may appropriate. robustSummary, need remove PSMs missing values since summarisation algorithm deals appropriately. However, still don’t want retain PSMs many missing values, since informative estimating protein-level quantification. , retain PSMs 2/10 missing values Next, remove PSMs proteins fewer 2 PSMs. robustSummary summarisation, need quantification values approximately Gaussian distributed. Hence, log transform . Now can summarise robustSummary Prior summaristaion, removed PSMs proteins fewer 2 PSMs. However, since left PSMs missing values, ’s possible protein-level abundances derived just single PSM. can use get_protein_no_quant_mask biomasslmb identify protein abundances derived fewer n features (PSMs). can give mask mask_protein_level_quant replace quantification values NA.","code":"tmt_qf[['psms_filtered_forRobust']] <- QFeatures::filterNA(   tmt_qf[['psms_filtered_norm']], 0.2) tmt_qf[['psms_filtered_forRobust']] <- biomasslmb::filter_features_per_protein(   tmt_qf[['psms_filtered_forRobust']], min_features = min_psms) tmt_qf[['psms_filtered_forRobust']] <- QFeatures::logTransform(   tmt_qf[['psms_filtered_forRobust']], base=2) # Aggregate to protein-level abundances (using QFeatures function) tmt_qf <- QFeatures::aggregateFeatures(tmt_qf,                                         i = \"psms_filtered_forRobust\",                                         fcol = \"Master.Protein.Accessions\",                                        name = \"protein_robust\",                                        fun = MsCoreUtils::robustSummary,                                        maxit=1000) #> Your quantitative and row data contain missing values. Please read the #> relevant section(s) in the aggregateFeatures manual page regarding the #> effects of missing values on data aggregation. # plot = TRUE means we will also get a plot of the number of proteins quantified in each sample protein_retain_mask <- biomasslmb::get_protein_no_quant_mask(   tmt_qf[['psms_filtered_forRobust']], min_features=2, plot=TRUE) tmt_qf[['protein_robust']] <- biomasslmb::mask_protein_level_quant(   tmt_qf[['protein_robust']], protein_retain_mask)"},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/articles/TMT_PSM_QC_Summarisation.html","id":"comparing-the-summarisation-approaches","dir":"Articles","previous_headings":"Summarising to protein-level abundances","what":"Comparing the summarisation approaches","title":"TMT QC PSM-level quantification and summarisation to protein-level abundance","text":"can see performing robust summarisation allows us retain proteins, since can still use PSMs low number missing values. However, sum summarisation, complete quantification data (missing values), whereas robustSummary, proteins missing values samples. case, protein-level data 99.68 % complete, impact missing values downstream analysis minimal. can inspect missing values using QFeatures::nNA function, just .na quantitative data matrix. better understand difference two summarisation methods use available data, can inspect single protein missing values robustSummary, summarised sum. inspect PSM level abundances protein, see 3 PSMs, first two contain missing values single sample. Thus, one complete PSM, insufficient confident summarisation using sum. However, 3 PSMs sufficiently missing values used robustSummary method samples least two non missing values across 3 PSMs, protein quantified samples robustSummary. can directly compare protein-level abundance estimates explore two summarisation methods differ estimates. want identify proteins lowest correlation abundances across samples two methods. , define function plot peptide protein level abundances single protein. plots , PSM level quantifications grey summarised protein-level abundances colours. can disregard y-axis scale comparing methods, protein peptide level abundances. important thing focus abundance profile tags one summarisation method PSM.  first 4 cases, protein-level quantification values relatively similar, exception final tag, see clear disagreement PSMs abundant tag relative tags. Since sum simply adds together abundance values across PSMs given tag abundance values may across multiple orders magnitude, protein-level abundance pattern across tags weighted towards abundant PSMs. likely positive attribute, since abundant PSMs accurately quantified. However, summarisation also sensitive high abundance outliers. hand, robustSummary less sensitive outliers, treats PSMs equally. final example (P29692) can see can lead potential inaccuracies 2 PSMs one low intensity. example, tag 129C mid-range intensity compared tags abundant PSM, low less abundant PSM. almost impact sum summarise protein abundance, large impact use robustSummary","code":"nrow(tmt_qf[['protein_sum']]) #> [1] 891 nrow(tmt_qf[['protein_robust']]) #> [1] 917 QFeatures::nNA(tmt_qf[['protein_sum']])$nNAcols #> DataFrame with 10 rows and 3 columns #>             name       nNA       pNA #>      <character> <integer> <numeric> #> 1  Abundance....         0         0 #> 2  Abundance....         0         0 #> 3  Abundance....         0         0 #> 4  Abundance....         0         0 #> 5  Abundance....         0         0 #> 6  Abundance....         0         0 #> 7  Abundance....         0         0 #> 8  Abundance....         0         0 #> 9  Abundance....         0         0 #> 10 Abundance....         0         0 QFeatures::nNA(tmt_qf[['protein_robust']])$nNAcols #> DataFrame with 10 rows and 3 columns #>             name       nNA        pNA #>      <character> <integer>  <numeric> #> 1  Abundance....         0 0.00000000 #> 2  Abundance....         0 0.00000000 #> 3  Abundance....         1 0.00109051 #> 4  Abundance....         4 0.00436205 #> 5  Abundance....         1 0.00109051 #> 6  Abundance....         3 0.00327154 #> 7  Abundance....         0 0.00000000 #> 8  Abundance....         2 0.00218103 #> 9  Abundance....         7 0.00763359 #> 10 Abundance....        11 0.01199564   message(sprintf('%.2f %% missing values', 100*mean(   is.na(assay(tmt_qf[['protein_robust']]))))) #> 0.32 % missing values # Identify the proteins with no missing values present only following robustSummary protein_robust_proteins <- rownames(filterNA(tmt_qf[['protein_robust']])) protein_sum_proteins <- rownames(filterNA(tmt_qf[['protein_sum']]))  no_missing_robustSummary_only <- setdiff(protein_robust_proteins, protein_sum_proteins) print(no_missing_robustSummary_only) #> [1] \"P22695\" retain_psms <- rowData(   tmt_qf[['psms_filtered_norm']])$Master.Protein.Accessions==no_missing_robustSummary_only  assay(tmt_qf[['psms_filtered_norm']][retain_psms,]) #>      Abundance.126 Abundance.127N Abundance.127C Abundance.128N Abundance.128C #> 517      114.68442       158.2849       286.0687       438.4889       173.5508 #> 1686     587.11851       412.1598       322.1113       232.8183      1419.0267 #> 3597      89.15436       134.5185       212.4164       336.5223       139.6542 #>      Abundance.129N Abundance.129C Abundance.130N Abundance.130C Abundance.131 #> 517        41.27858       15.23801       10.07546             NA            NA #> 1686      494.28845             NA       23.85513      33.861821     58.181084 #> 3597       31.63687       24.65788       17.03938       4.108757      8.366749 # Define a function to extract the protein abundances in long form and # add a column annotating the method get_long_form_prot_exp <- function(obj, method_name) {   assay(obj) %>%     data.frame() %>%     tibble::rownames_to_column('protein') %>%     pivot_longer(cols=-protein) %>%     mutate(method = method_name) }  # Single object with protein inference from both methods  compare_protein_abundances <- rbind(   mutate(longFormat(tmt_qf[['protein_sum']]), method='Sum'),   mutate(longFormat(tmt_qf[['protein_robust']]), method='Robust') )   print(head(compare_protein_abundances)) #>   rowname       colname     value method #> 1  A1L0T0 Abundance.126  8.340996    Sum #> 2  A4D1E9 Abundance.126  9.674770    Sum #> 3  A6NHR9 Abundance.126 10.319013    Sum #> 4  O00116 Abundance.126  6.884527    Sum #> 5  O00154 Abundance.126  5.597842    Sum #> 6  O00159 Abundance.126 10.410898    Sum proteins_of_interest <- compare_protein_abundances %>%   pivot_wider(names_from = method, values_from = value) %>%   group_by(rowname) %>%   summarise(cor=cor(Sum, Robust)) %>%   slice_min(cor, n=5) %>%   pull(rowname) plot_pep_and_protein <- function(protein_of_interest) {      to_plot_compare <- compare_protein_abundances %>%      filter(rowname == protein_of_interest)      QFeatures::filterFeatures(     tmt_qf,     VariableFilter(\"Master.Protein.Accessions\",                    protein_of_interest,                    condition = \"==\"))[['psms_filtered_norm']] %>%     longFormat() %>%     ggplot(aes(x = colname, y = log2(value))) +     geom_line(aes(group = rowname), colour = 'grey') +     geom_point(colour = 'grey') +     geom_line(data = to_plot_compare,               aes(x = colname, y = value, colour = method, group = method)) +     geom_point(data = to_plot_compare,                aes(x = colname, y = value, colour = method)) +     scale_colour_manual(values = get_cat_palette(2),                         name = 'LFQ summarisation method') +     theme_biomasslmb(base_size = 15, border = FALSE, base_family = 'sans') +     theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1)) +     labs(       title = protein_of_interest,       x = '',       y = 'Protein abundance (log2)'     ) } for(poi in proteins_of_interest) print(plot_pep_and_protein(poi))"},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/articles/TMT_PSM_QC_Summarisation.html","id":"summary","dir":"Articles","previous_headings":"Summarising to protein-level abundances","what":"Summary","title":"TMT QC PSM-level quantification and summarisation to protein-level abundance","text":", QCed PSMs filtered following steps: Remove PSMs likely contaminants Remove PSMs without unique ‘master protein’ Remove PSMs without quantification values Normalise abundance values median value samples Remove PSMs low signal:noise Remove PSMs high interference summarised PSM level abundances two approaches, sum robustSummary, comparing protein-level abundances obtained . robustSummary handles missing values therefore enables proteins quantified. sum sensitive outliers high abundance, robust sensitive outliers low abundance.","code":"sessionInfo() #> R version 4.4.2 (2024-10-31) #> Platform: x86_64-pc-linux-gnu #> Running under: Ubuntu 22.04.5 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats4    stats     graphics  grDevices utils     datasets  methods   #> [8] base      #>  #> other attached packages: #>  [1] dplyr_1.1.4                 tidyr_1.3.1                 #>  [3] ggplot2_3.5.1               biomasslmb_0.0.1            #>  [5] QFeatures_1.16.0            MultiAssayExperiment_1.32.0 #>  [7] SummarizedExperiment_1.36.0 Biobase_2.66.0              #>  [9] GenomicRanges_1.58.0        GenomeInfoDb_1.42.0         #> [11] IRanges_2.40.0              S4Vectors_0.44.0            #> [13] BiocGenerics_0.52.0         MatrixGenerics_1.18.0       #> [15] matrixStats_1.4.1           #>  #> loaded via a namespace (and not attached): #>  [1] tidyselect_1.2.1        farver_2.1.2            blob_1.2.4              #>  [4] Biostrings_2.74.0       fastmap_1.2.0           lazyeval_0.2.2          #>  [7] XML_3.99-0.17           digest_0.6.37           lifecycle_1.0.4         #> [10] cluster_2.1.6           ProtGenerics_1.38.0     survival_3.7-0          #> [13] KEGGREST_1.46.0         RSQLite_2.3.8           magrittr_2.0.3          #> [16] genefilter_1.88.0       compiler_4.4.2          rlang_1.1.4             #> [19] sass_0.4.9              tools_4.4.2             igraph_2.1.1            #> [22] utf8_1.2.4              yaml_2.3.10             corrplot_0.95           #> [25] knitr_1.49              labeling_0.4.3          S4Arrays_1.6.0          #> [28] htmlwidgets_1.6.4       bit_4.5.0               DelayedArray_0.32.0     #> [31] plyr_1.8.9              abind_1.4-8             withr_3.0.2             #> [34] purrr_1.0.2             desc_1.4.3              grid_4.4.2              #> [37] fansi_1.0.6             xtable_1.8-4            colorspace_2.1-1        #> [40] scales_1.3.0            MASS_7.3-61             cli_3.6.3               #> [43] rmarkdown_2.29          crayon_1.5.3            ragg_1.3.3              #> [46] generics_0.1.3          httr_1.4.7              reshape2_1.4.4          #> [49] BiocBaseUtils_1.8.0     DBI_1.2.3               cachem_1.1.0            #> [52] stringr_1.5.1           splines_4.4.2           zlibbioc_1.52.0         #> [55] AnnotationDbi_1.68.0    AnnotationFilter_1.30.0 XVector_0.46.0          #> [58] vctrs_0.6.5             Matrix_1.7-1            jsonlite_1.8.9          #> [61] naniar_1.1.0            visdat_0.6.0            bit64_4.5.2             #> [64] clue_0.3-66             cutr_0.0.0.9000         systemfonts_1.1.0       #> [67] jquerylib_0.1.4         annotate_1.84.0         glue_1.8.0              #> [70] pkgdown_2.1.1           stringi_1.8.4           gtable_0.3.6            #> [73] UCSC.utils_1.2.0        munsell_0.5.1           tibble_3.2.1            #> [76] pillar_1.9.0            htmltools_0.5.8.1       GenomeInfoDbData_1.2.13 #> [79] R6_2.5.1                textshaping_0.4.0       evaluate_1.0.1          #> [82] lattice_0.22-6          png_0.1-8               memoise_2.0.1           #> [85] bslib_0.8.0             Rcpp_1.0.13-1           SparseArray_1.6.0       #> [88] xfun_0.49               MsCoreUtils_1.18.0      fs_1.6.5                #> [91] pkgconfig_2.0.3"},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Tom Smith. Author, maintainer.","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Smith T (2024). biomasslmb: BioMass LMB Proteomics Data Analysis Utility Functions. R package version 0.0.1, https://lmb-mass-spec-compbio.github.io/biomasslmb/.","code":"@Manual{,   title = {biomasslmb: BioMass LMB Proteomics Data Analysis Utility Functions},   author = {Tom Smith},   year = {2024},   note = {R package version 0.0.1},   url = {https://lmb-mass-spec-compbio.github.io/biomasslmb/}, }"},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/index.html","id":"biomasslmb","dir":"","previous_headings":"","what":"BioMass LMB Proteomics Data Analysis Utility Functions","title":"BioMass LMB Proteomics Data Analysis Utility Functions","text":"biomasslmb R package provide functions pipe together proteomics data analysis pipelines using QFeatures data generated Biological Mass Spectrometry Proteomics Facility MRC Laboratory Molecular Biology. Alongside general purpose functions routine proteomics data analyses, package also provides esoteric /opinionated functionality bespoke proteomics data analysis. Much initial code re-working camprotR co-developed Charlotte Dawson (https://github.com/csdaw) (https://github.com/tomsmithCGAT) designed work MSnbase. Hence ’ve reworked code separate package work QFeatures simplify issues backward compatibility. Thank Charlotte code lifted camprotR part writing!","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"BioMass LMB Proteomics Data Analysis Utility Functions","text":"can install development version biomasslmb like :","code":"remotes::install_github(\"lmb-mass-spec-compbio/biomasslmb\", dependencies = TRUE)"},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/index.html","id":"examples","dir":"","previous_headings":"","what":"Examples","title":"BioMass LMB Proteomics Data Analysis Utility Functions","text":"See vignettes examples use package. vignettes also available via ‘articles’ tab .","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/add_gene_long_protein_name_pd.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract the gene name and long-form protein name from the master protein descriptions column — add_gene_long_protein_name_pd","title":"Extract the gene name and long-form protein name from the master protein descriptions column — add_gene_long_protein_name_pd","text":"function extracts gene name long-form protein name master protein descriptions column output Proteome Discoverer DDA. assumes master protein description column format (.) . GN=(.) PE., first group long format protein name second group gene name. gene name included, empty string returned example expected input column : Serum albumin OS=Bos taurus GN=ALB PE=1 SV=4","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/add_gene_long_protein_name_pd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract the gene name and long-form protein name from the master protein descriptions column — add_gene_long_protein_name_pd","text":"","code":"add_gene_long_protein_name_pd(   obj,   master_protein_desc_col = \"Master.Protein.Descriptions\",   gene_name_out_col = \"Master.Protein.gene.name\",   long_protein_name_out_col = \"Master.Protein.long.name\" )"},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/add_gene_long_protein_name_pd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract the gene name and long-form protein name from the master protein descriptions column — add_gene_long_protein_name_pd","text":"obj SummarisedExperiment containing output Proteome Discoverer master_protein_desc_col string. Name column containing master proteins descriptions. gene_name_out_col string. Name output column containing gene names long_protein_name_out_col string. Name output column containing long format protein names","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/add_gene_long_protein_name_pd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract the gene name and long-form protein name from the master protein descriptions column — add_gene_long_protein_name_pd","text":"Returns QFeatures filtered Proteome Discoverer output.","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/add_independent_filtering_padj.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform independent filtering to threshold the over-representation testing on the number of features in each category to limit the multiple testing burden — add_independent_filtering_padj","title":"Perform independent filtering to threshold the over-representation testing on the number of features in each category to limit the multiple testing burden — add_independent_filtering_padj","text":"testing enrichment feature annotations, frequently test thousands annotations simultaneously, increases multiple testing burden considerably. Given many annotations annotated features, little power detect -representation. Inspired DESeq2, turn inspired Bourgon, Gentleman, Huber (2010), function applies principle 'independent filtering' threshold minimum number features per annotation (background) optimally limit multiple testing burden. statistically valid filtering criteria (number features per annotation) statistically independent test statistic null hypothesis. independent filtering works filtering criteria correlated test statistic alternative hypothesis. justification discussion independent filtering, see Bourgon, Gentleman, Huber (2010) DESeq2 vignette. code function largely lifted DEseq:::pvalueAdjustment Please cite Bourgon, Gentleman, Huber (2010) using function.","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/add_independent_filtering_padj.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform independent filtering to threshold the over-representation testing on the number of features in each category to limit the multiple testing burden — add_independent_filtering_padj","text":"","code":"add_independent_filtering_padj(   obj,   alpha = 0.1,   theta = seq(0, 1, 0.01),   p_value_col = \"over_represented_pvalue\",   filter_col = \"numInCat\",   plot = TRUE )"},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/add_independent_filtering_padj.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform independent filtering to threshold the over-representation testing on the number of features in each category to limit the multiple testing burden — add_independent_filtering_padj","text":"obj data.frame containing goseq results generated get_enriched_go See example. alpha numeric alpha value use rejection null hypothesis. Note used optimising threshold alternative value alpha can used downstream theta numeric vector thresholds (fractions data remove) p_value_col character Column p-values filter_col character Column filtering criteria values plot logical Plot relationship ","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/add_independent_filtering_padj.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform independent filtering to threshold the over-representation testing on the number of features in each category to limit the multiple testing burden — add_independent_filtering_padj","text":"Returns data.frame added column denoting optimised adjusted p-value ('padj_if')","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/add_peptide_positions.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a column describing the position of the peptide sequence with respect to the protein — add_peptide_positions","title":"Add a column describing the position of the peptide sequence with respect to the protein — add_peptide_positions","text":"Identify position peptide sequence protein. peptide position undefined (NA) : peptide sequence multiple master proteins protein exist proteome fasta peptide repeated protein sequence. peptide_position_info column details peptide positions columns NA","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/add_peptide_positions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a column describing the position of the peptide sequence with respect to the protein — add_peptide_positions","text":"","code":"add_peptide_positions(   obj,   proteome_fasta,   master_protein_col = \"Master.Protein.Accessions\" )"},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/add_peptide_positions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a column describing the position of the peptide sequence with respect to the protein — add_peptide_positions","text":"obj SummarizedExperiment PD output PSM/peptide level proteome_fasta character Filepath proteome fasta master_protein_col character Column name master protein","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/add_peptide_positions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add a column describing the position of the peptide sequence with respect to the protein — add_peptide_positions","text":"SummarizedExperiment extra row columns detailing peptide position","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/biomasslmb-package.html","id":null,"dir":"Reference","previous_headings":"","what":"biomasslmb: BioMass LMB Proteomics Data Analysis Utility Functions — biomasslmb-package","title":"biomasslmb: BioMass LMB Proteomics Data Analysis Utility Functions — biomasslmb-package","text":"Utility functions piping together quantitative proteomics data analysis. Designed projects conducted Biological Mass Spectrometry Proteomics Facility MRC Laboratory Molecular Biology.","code":""},{"path":[]},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/biomasslmb-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"biomasslmb: BioMass LMB Proteomics Data Analysis Utility Functions — biomasslmb-package","text":"Maintainer: Tom Smith tsmith@mrc-lmb.cam.ac.uk (ORCID)","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/check_uniprot_release.html","id":null,"dir":"Reference","previous_headings":"","what":"Check the current UniProt release — check_uniprot_release","title":"Check the current UniProt release — check_uniprot_release","text":"UniProt releases published approximately every 8 weeks. function checks current UniProt release .","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/check_uniprot_release.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check the current UniProt release — check_uniprot_release","text":"","code":"check_uniprot_release()"},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/check_uniprot_release.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check the current UniProt release — check_uniprot_release","text":"Returns character, current release number format YYYY_XX YYYY calendar year XX 2-digit number incremented release given year, e.g. 2010_01, 2010_02, etc.","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/check_uniprot_release.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check the current UniProt release — check_uniprot_release","text":"","code":"# print release number to console check_uniprot_release() #> [1] \"2024_06\"  # save release number and use in e.g. a file name rls <- check_uniprot_release()  paste0(\"folder/filename_\", rls, \".fasta\") #> [1] \"folder/filename_2024_06.fasta\""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/determine_ancestor_function.html","id":null,"dir":"Reference","previous_headings":"","what":"Determine GO ancestor object — determine_ancestor_function","title":"Determine GO ancestor object — determine_ancestor_function","text":"single GO term, get ontology return correct ancestor mapping object ontology.","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/determine_ancestor_function.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Determine GO ancestor object — determine_ancestor_function","text":"","code":"determine_ancestor_function(term, ontology)"},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/determine_ancestor_function.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Determine GO ancestor object — determine_ancestor_function","text":"term string. single GO.ID. ontology string. single ontology, one : BP, MF, CC.","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/determine_ancestor_function.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Determine GO ancestor object — determine_ancestor_function","text":"Returns AnnDbBimap object maps GO terms (BP, MF, CC) ancestor terms. GO term mapped vector ancestor GO terms.","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/determine_offspring_function.html","id":null,"dir":"Reference","previous_headings":"","what":"Determine GO offspring object — determine_offspring_function","title":"Determine GO offspring object — determine_offspring_function","text":"single GO term, get ontology return correct offpsring mapping object ontology.","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/determine_offspring_function.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Determine GO offspring object — determine_offspring_function","text":"","code":"determine_offspring_function(term, ontology)"},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/determine_offspring_function.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Determine GO offspring object — determine_offspring_function","text":"term string. single GO.ID. ontology string. single ontology, one : BP, MF, CC.","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/determine_offspring_function.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Determine GO offspring object — determine_offspring_function","text":"Returns AnnDbBimap object maps GO terms (BP, MF, CC) offspring terms. GO term mapped vector offsrping GO terms.","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/estimate_overrep.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate effect size of over-representation — estimate_overrep","title":"Estimate effect size of over-representation — estimate_overrep","text":"crude function estimate effect size -representation .e. know feature -represented, want estimate effect size/-represented . function typically run get_enriched_go work output goseq, regardless whether functional enrichment tested GO terms.","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/estimate_overrep.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate effect size of over-representation — estimate_overrep","text":"","code":"estimate_overrep(obj, pwf, gene2cat)"},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/estimate_overrep.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate effect size of over-representation — estimate_overrep","text":"obj data.frame containing goseq results generated get_enriched_go goseq. pwf data.frame used get_enriched_go goseq. gene2cat data.frame used get_enriched_go goseq.","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/estimate_overrep.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate effect size of over-representation — estimate_overrep","text":"Returns obj extra column added called adj_overrep. column calculated GO term : numDEInCat / numInCat / (avgTermWeight / avgNonTermWeight) / (totalDEFeatures / totalFeatures) : numDEInCat number differentially expressed genes (aka. proteins) assigned GO term. numInCat total number genes (aka. proteins) annotated GO term. avgTermWeight average pwf$pwf value differentially expressed genes assigned GO term. avgNonTermWeight average pwf$pwf genes supplied pwf. totalDEFeatures total number differentially expressed genes indicated pwf. totalFeatures total number genes indicated pwf, .e. number rows.","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/expand_terms.html","id":null,"dir":"Reference","previous_headings":"","what":"Expand data.frame GO terms — expand_terms","title":"Expand data.frame GO terms — expand_terms","text":"Input data.frame GO terms annotated single protein single column. Output new data.frame GO terms protein (annotated ancestor).","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/expand_terms.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Expand data.frame GO terms — expand_terms","text":"","code":"expand_terms(go_df, go_col, go2Ancestor)"},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/expand_terms.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Expand data.frame GO terms — expand_terms","text":"go_df data.frame single protein single column row single GO term. go_col variable. Name column data.frame contains GO terms. go2Ancestor named list. Returned get_all_mappings. Names == GO terms values == vectors containing ancestor GO terms particular input GO term.","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/expand_terms.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Expand data.frame GO terms — expand_terms","text":"Returns data.frame containing ancestor GO terms single protein.","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/filter_TMT_PSMs.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter a PSM-level summarizedExperiment to remove low quality PSMs — filter_TMT_PSMs","title":"Filter a PSM-level summarizedExperiment to remove low quality PSMs — filter_TMT_PSMs","text":"Filter PSMs TMT quantification remove following: Missing values (NA) tags Interference/co-isolation set value (default=100, e.g filtering) Signal:noise ratio set value (default=0, e.g filtering)","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/filter_TMT_PSMs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter a PSM-level summarizedExperiment to remove low quality PSMs — filter_TMT_PSMs","text":"","code":"filter_TMT_PSMs(   obj,   inter_thresh = 100,   sn_thresh = 0,   master_protein_col = \"Master.Protein.Accessions\",   inter_col = \"Isolation.Interference.in.Percent\",   sn_col = \"Average.Reporter.SN\",   verbose = TRUE )"},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/filter_TMT_PSMs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter a PSM-level summarizedExperiment to remove low quality PSMs — filter_TMT_PSMs","text":"obj summarizedExperiment. contain PSMs-level TMT quantification inter_thresh numeric. Maximum allowed interference/co-isolation sn_thresh numeric. Minimum allowed average signal:noise master_protein_col string. Name column containing master proteins. inter_col string. Name column containing interference value. sn_col string. Name column containing signal:noise value. verbose boolean. Default TRUE, use verbose output messages.","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/filter_TMT_PSMs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter a PSM-level summarizedExperiment to remove low quality PSMs — filter_TMT_PSMs","text":"Returns summarizedExperiment filtered PSMs.","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/filter_by_protein_fdr.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter to remove peptides from proteins failing the protein FDR threshold — filter_by_protein_fdr","title":"Filter to remove peptides from proteins failing the protein FDR threshold — filter_by_protein_fdr","text":"function filters content summarised experiment based separate file detailing proteins passing FDR confidence threshold function used filter peptides retain proteins passing FDR threshold","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/filter_by_protein_fdr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter to remove peptides from proteins failing the protein FDR threshold — filter_by_protein_fdr","text":"","code":"filter_by_protein_fdr(   obj,   protein_fdr_filename,   protein_col_peptide = \"Master.Protein.Accessions\",   protein_col_protein = \"Accession\",   protein_FDR_col = \"Protein.FDR.Confidence.Combined\" )"},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/filter_by_protein_fdr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter to remove peptides from proteins failing the protein FDR threshold — filter_by_protein_fdr","text":"obj SummarisedExperiment containing peptide-level output Proteome Discoverer. protein_fdr_filename string. Filepath protein-level output Proteome Discoverer protein_col_peptide string. Name column containing master proteins peptide-level obj protein_col_protein string. Name column containing master proteins protein-level protein_fdr_filename protein_FDR_col string. Name column containing FDR information protein-level protein_fdr_filename","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/filter_by_protein_fdr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter to remove peptides from proteins failing the protein FDR threshold — filter_by_protein_fdr","text":"Returns SummarisedExperiment filtered Proteome Discoverer output.","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/filter_features_pd_dda.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter Proteome Discoverer DDA output — filter_features_pd_dda","title":"Filter Proteome Discoverer DDA output — filter_features_pd_dda","text":"function filters output .txt files (peptide groups PSMs) Proteome Discoverer DDA, based various criteria: Remove features without master protein (Optional) Remove features without unique master protein  (.e. Number..Protein.Groups == 1) (Optional) Remove features matching cRAP protein (Optional) Remove features matching protein associated cRAP protein (see ) Remove features without quantification values (TMT SILAC TRUE level = \"peptide\".)","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/filter_features_pd_dda.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter Proteome Discoverer DDA output — filter_features_pd_dda","text":"","code":"filter_features_pd_dda(   obj,   master_protein_col = \"Master.Protein.Accessions\",   protein_col = \"Protein.Accessions\",   unique_master = TRUE,   silac = FALSE,   TMT = FALSE,   level = \"peptide\",   filter_crap = TRUE,   crap_proteins = NULL,   filter_associated_crap = TRUE,   remove_no_quant = TRUE )"},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/filter_features_pd_dda.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter Proteome Discoverer DDA output — filter_features_pd_dda","text":"obj SummarisedExperiment containing output Proteome Discoverer. Use readQFeatures read .txt file master_protein_col string. Name column containing master proteins. protein_col string. Name column containing protein matches. unique_master logical. Filter features without unique master protein. silac logical. experiment SILAC experiment? TMT logical. experiment TMT experiment? level string. Type input file, must one either \"peptide\" \"PSM\". filter_crap logical. Filter features match cRAP protein. crap_proteins character vector. protein IDs form cRAP proteins, filter_associated_crap logical. Filter features match cRAP associated protein. remove_no_quant logical. Remove features quantification","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/filter_features_pd_dda.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter Proteome Discoverer DDA output — filter_features_pd_dda","text":"Returns SummarisedExperiment filtered Proteome Discoverer output.","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/filter_features_pd_dda.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Filter Proteome Discoverer DDA output — filter_features_pd_dda","text":"Associated cRAP proteins proteins least one feature shared cRAP protein. observed cRAP fasta files often contain possible cRAP proteins e.g. features can assigned keratin provided cRAP database. example , using filter_associated_crap = TRUE filter f2 f3 addition f1, regardless value Master.Protein.Accession column.","code":"feature  Protein.Accessions         Master.Protein.Accessions f1       protein1, protein2, cRAP,  protein1, f2       protein1, protein3         protein3, f3       protein2                   protein2"},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/filter_features_pd_dda.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Filter Proteome Discoverer DDA output — filter_features_pd_dda","text":"","code":"if (FALSE) { # \\dontrun{  #### PSMs.txt example #### # load PD PSMs.txt output tmt_qf <- readQFeatures(assayData = psm_tmt_total,  quantCols = 36:45,  name = \"psms_raw\")  # extract the UniProt accessions from the cRAP FASTA headers crap_accessions <- get_crap_fasta_accessions(crap_fasta_inf)  # filter thg peptides psm2 <- filter_features_pd_dda(   obj = tmt_qf[['psms_raw']],   master_protein_col = \"Master.Protein.Accessions\",   protein_col = \"Protein.Accessions\",   unique_master = TRUE,   TMT = TRUE,   level = \"PSM\",   filter_crap = TRUE,   crap_proteins = crap_accessions,   filter_associated_crap = TRUE )   } # }"},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/filter_features_per_protein.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove features which are assigned to a protein with too few supporting features in total — filter_features_per_protein","title":"Remove features which are assigned to a protein with too few supporting features in total — filter_features_per_protein","text":"summarisation PSM peptide protein, need minimum number finite values per protein per sample.","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/filter_features_per_protein.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove features which are assigned to a protein with too few supporting features in total — filter_features_per_protein","text":"","code":"filter_features_per_protein(   obj,   min_features,   master_protein_col = \"Master.Protein.Accessions\",   plot = FALSE )"},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/filter_features_per_protein.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove features which are assigned to a protein with too few supporting features in total — filter_features_per_protein","text":"obj SummarizedExperiment PSM peptide-level quantification min_features numeric Threshold minimum features per protein master_protein_col character Column name master protein plot Set TRUE plot histogram features per protein per sample","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/filter_features_per_protein.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove features which are assigned to a protein with too few supporting features in total — filter_features_per_protein","text":"SummarizedExperiment","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/get_all_mappings.html","id":null,"dir":"Reference","previous_headings":"","what":"Get all mappings for GO terms — get_all_mappings","title":"Get all mappings for GO terms — get_all_mappings","text":"vector GO terms, obtain ancestor offspring terms.","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/get_all_mappings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get all mappings for GO terms — get_all_mappings","text":"","code":"get_all_mappings(go_ids, ontologies, verbose = TRUE, direction = \"ancestor\")"},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/get_all_mappings.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get all mappings for GO terms — get_all_mappings","text":"go_ids character vector. GO terms use format GO:1234567. ontologies named character vector. Names = go_ids values = ontologies e.g. BP, CC, MF. verbose logical. direction string Either \"ancestor\" \"offspring\".","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/get_all_mappings.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get all mappings for GO terms — get_all_mappings","text":"Returns named list character vectors. Names == GO terms values == vectors containing ancestor GO terms particular input GO term.","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/get_ancestor_go.html","id":null,"dir":"Reference","previous_headings":"","what":"Get all ancestor GO terms — get_ancestor_go","title":"Get all ancestor GO terms — get_ancestor_go","text":"Given data.frame column containing GO terms, function output data.frame ontologies GO terms, description, ancestor terms.","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/get_ancestor_go.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get all ancestor GO terms — get_ancestor_go","text":"","code":"get_ancestor_go(   go_df,   feature_col = \"UNIPROTKB\",   go_col = \"GO.ID\",   return_early_debug = FALSE,   verbose = TRUE )"},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/get_ancestor_go.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get all ancestor GO terms — get_ancestor_go","text":"go_df data.frame. Contains initial GO terms proteins interest columns == [feature_col, go_col]. feature_col string. Name column features, e.g. \"UNIPROTKB\". go_col string. Name column GO ids, e.g. \"GO.ID\". return_early_debug logical. Stop function early return list GO terms ancestor GO terms debugging purposes. verbose logical.","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/get_ancestor_go.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get all ancestor GO terms — get_ancestor_go","text":"Returns data.frame containing ancestor GO terms proteins plus GO term descriptions ontologies.","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/get_cat_palette.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a colour-blind friendly palette for categorical colour encoding — get_cat_palette","title":"Generate a colour-blind friendly palette for categorical colour encoding — get_cat_palette","text":"given number categories, identify suitable palette colours colour-blind friendly. Palettes derived http://mkweb.bcgsc.ca/colorblind/palettes.mhtml#page-container","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/get_cat_palette.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a colour-blind friendly palette for categorical colour encoding — get_cat_palette","text":"","code":"get_cat_palette(n)"},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/get_cat_palette.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a colour-blind friendly palette for categorical colour encoding — get_cat_palette","text":"n numeric. number colours required.","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/get_cat_palette.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a colour-blind friendly palette for categorical colour encoding — get_cat_palette","text":"Returns character Hex codes colour palette.","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/get_crap_fasta_accessions.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract the cRAP protein accessions from a fasta file — get_crap_fasta_accessions","title":"Extract the cRAP protein accessions from a fasta file — get_crap_fasta_accessions","text":"standard theme use plots generated package.","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/get_crap_fasta_accessions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract the cRAP protein accessions from a fasta file — get_crap_fasta_accessions","text":"","code":"get_crap_fasta_accessions(infile)"},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/get_crap_fasta_accessions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract the cRAP protein accessions from a fasta file — get_crap_fasta_accessions","text":"base_size numeric. Defines overall size plot. base_family string. Fontfamily use, default \"sans\". base_line_size numeric. Defines line size use. base_rect_size numeric. Defines rect size use. aspect_square logical. square aspect ratio used? Default TRUE. border logical. plot square border? Default TRUE.","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/get_crap_fasta_accessions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract the cRAP protein accessions from a fasta file — get_crap_fasta_accessions","text":"Returns theme object.","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/get_crap_fasta_accessions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract the cRAP protein accessions from a fasta file — get_crap_fasta_accessions","text":"","code":"set.seed(11) library(ggplot2)  df <- diamonds[sample(nrow(diamonds), 1000), ]  ggplot(df, aes(x = price, y = carat)) +   geom_point() +   theme_biomasslmb()"},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/get_enriched_go.html","id":null,"dir":"Reference","previous_headings":"","what":"GO term enrichment using goseq — get_enriched_go","title":"GO term enrichment using goseq — get_enriched_go","text":"wrapper function around goseq perform GO term enrichment analysis. See goseq documentation details. pwf can made using nullp. /underrepresented p-values automatically adjusted using method = \"BH\". gene2cat provided function default using Homo sapiens genome hg19 expect Ensembl gene IDs used construct pwf input.","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/get_enriched_go.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"GO term enrichment using goseq — get_enriched_go","text":"","code":"get_enriched_go(   pwf,   gene2cat = NULL,   ...,   shorten_term = TRUE,   shorten_lims = c(1L, 30L) )"},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/get_enriched_go.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"GO term enrichment using goseq — get_enriched_go","text":"pwf data.frame 3 columns (DEgenes = logical, bias.data = numeric/integer, pwf = numeric) row names (usually UniProt accessions, Ensembl gene IDs similar). Typically constructed using nullp. gene2cat data.frame 2 columns containing mapping genes (usually UniProt accessions, Ensembl gene IDs similar) GO terms. Alternatively, named list names genes entry character vector GO terms. ... arguments passed goseq. shorten_term logical. extra column substring output GO terms added output data.frame? Default TRUE. shorten_lims integer vector length 2. start stop coordinates substring.","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/get_enriched_go.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"GO term enrichment using goseq — get_enriched_go","text":"Returns data.frame /underrepresented GO terms.","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/get_n_feature_per_prot.html","id":null,"dir":"Reference","previous_headings":"","what":"Identify how many features (PSMs/Peptides) are quantified for each protein — get_n_feature_per_prot","title":"Identify how many features (PSMs/Peptides) are quantified for each protein — get_n_feature_per_prot","text":"summarisation PSM peptide protein, need minimum number finite values per protein per sample. function simply tallies many .","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/get_n_feature_per_prot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identify how many features (PSMs/Peptides) are quantified for each protein — get_n_feature_per_prot","text":"","code":"get_n_feature_per_prot(obj, master_protein_col = \"Master.Protein.Accessions\")"},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/get_n_feature_per_prot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identify how many features (PSMs/Peptides) are quantified for each protein — get_n_feature_per_prot","text":"obj SummarizedExperiment PSM peptide-level quantification master_protein_col character Column name master protein","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/get_n_feature_per_prot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Identify how many features (PSMs/Peptides) are quantified for each protein — get_n_feature_per_prot","text":"data.frame detailing many features present protein sample","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/get_protein_no_quant_mask.html","id":null,"dir":"Reference","previous_headings":"","what":"Identify proteins which have too few features to quantify protein abundance in each sample — get_protein_no_quant_mask","title":"Identify proteins which have too few features to quantify protein abundance in each sample — get_protein_no_quant_mask","text":"Protein level abundances accurately quantified features (PSMs/peptides) summarise . Usually, performing summarisation matrix (columns=samples, rows=features) associated feature protein ID mapping. Within matrix, values may missing (NA). order correctly identify proteins can quantified, need start feature level object create mask can use replace protein-level quantification values NA. function . can combined mask_protein_quant function replace protein level quantification values NA derived quantification values","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/get_protein_no_quant_mask.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identify proteins which have too few features to quantify protein abundance in each sample — get_protein_no_quant_mask","text":"","code":"get_protein_no_quant_mask(   obj,   min_features,   master_protein_col = \"Master.Protein.Accessions\",   plot = FALSE )"},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/get_protein_no_quant_mask.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identify proteins which have too few features to quantify protein abundance in each sample — get_protein_no_quant_mask","text":"obj SummarizedExperiment PSM peptide-level quantification min_features numeric Threshold minimum features per protein master_protein_col character Column name master protein plot Set TRUE plot many proteins quantified sample. Horizontal line represents total number proteins quantified across samples","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/get_protein_no_quant_mask.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Identify proteins which have too few features to quantify protein abundance in each sample — get_protein_no_quant_mask","text":"Matrix defining whether protein quantified sufficient features","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/make_fasta.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a FASTA using UniProt accessions — make_fasta","title":"Make a FASTA using UniProt accessions — make_fasta","text":"Given vector UniProt accessions, function : Download sequences Print current UniProt release (put FASTA file name) (Optional) add cRAP numbers FASTA headers sequence Save sequences FASTA file","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/make_fasta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a FASTA using UniProt accessions — make_fasta","text":"","code":"make_fasta(   accessions,   file,   is_crap = FALSE,   overwrite = FALSE,   verbose = TRUE )"},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/make_fasta.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a FASTA using UniProt accessions — make_fasta","text":"accessions character vector, UniProt accessions use file character, filepath save fasta e.g. \"crap.fasta\" is_crap logical, output going cRAP database? TRUE cRAP001, cRAP002, etc. appended sequence headers FASTA file. Default FALSE overwrite logical, FASTA file already exists overwritten? Default FALSE verbose logical, function send messages console? Default TRUE","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/make_fasta.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make a FASTA using UniProt accessions — make_fasta","text":"Returns FASTA file saved disk specified file path.","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/make_fasta.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make a FASTA using UniProt accessions — make_fasta","text":"","code":"# specify some UniProt accessions crap <- get_ccp_crap() #> Error in get_ccp_crap(): could not find function \"get_ccp_crap\"  if (FALSE) { # \\dontrun{ make_fasta(crap, \"2021-01_cRAP.fasta\") } # }"},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/mask_protein_level_quant.html","id":null,"dir":"Reference","previous_headings":"","what":"Replace protein-level quantifications with NA if they derive from too few lower feature level quantifications — mask_protein_level_quant","title":"Replace protein-level quantifications with NA if they derive from too few lower feature level quantifications — mask_protein_level_quant","text":"Protein level abundances accurately quantified features (PSMs/peptides) summarise . Usually, performing summarisation matrix (columns=samples, rows=features) associated feature protein ID mapping. Within matrix, values may missing (NA). order correctly identify proteins can quantified, need start feature level object create mask can use replace protein-level quantification values NA. can obtained get_protein_no_quant_mask . can combined function replace protein level quantification values NA derived quantification values","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/mask_protein_level_quant.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Replace protein-level quantifications with NA if they derive from too few lower feature level quantifications — mask_protein_level_quant","text":"","code":"mask_protein_level_quant(obj, retain_mask)"},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/mask_protein_level_quant.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Replace protein-level quantifications with NA if they derive from too few lower feature level quantifications — mask_protein_level_quant","text":"obj SummarizedExperiment PSM peptide-level quantification retain_mask matrix detailing whether protein-level quantification sufficient lower level quantification values sample. Can obtained get_protein_no_quant_mask","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/mask_protein_level_quant.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Replace protein-level quantifications with NA if they derive from too few lower feature level quantifications — mask_protein_level_quant","text":"SummarizedExperiment quantification values replaced NA derive lower feature level quantifications","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/plot_cor_samples.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the correlation between sample — plot_cor_samples","title":"Plot the correlation between sample — plot_cor_samples","text":"correlation feature quantifications sample can useful QC step assess whether experiment worked. function plots correlation values heatmap. Samples clustered ordered axes order SummarizedExperiment","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/plot_cor_samples.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the correlation between sample — plot_cor_samples","text":"","code":"plot_cor_samples(obj, i, order = \"original\", ...)"},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/plot_cor_samples.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the correlation between sample — plot_cor_samples","text":"obj QFeatures. Proteomics dataset string. Index SummarizedExperiment wish plot ... addiional arguments passed onto corrplot::corrplot","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/plot_cor_samples.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the correlation between sample — plot_cor_samples","text":"Returns ggplot object.","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/plot_cor_samples.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot the correlation between sample — plot_cor_samples","text":"","code":"tmt_qf <- QFeatures::readQFeatures(assayData = psm_tmt_total,   quantCols = 36:45,   name = \"psms_raw\") #> Checking arguments. #> Loading data as a 'SummarizedExperiment' object. #> Formatting sample annotations (colData). #> Formatting data as a 'QFeatures' object.  cor_sample(tmt_qf, 'psms_raw') #> Error in cor_sample(tmt_qf, \"psms_raw\"): could not find function \"cor_sample\""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/plot_go.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot selected GO terms — plot_go","title":"Plot selected GO terms — plot_go","text":"function plots set GO terms interest. run get_enriched_go estimate_go_overrep. avoid plotting many terms, may wish use remove_redundant_go first . warning shown try plot 100 GO terms.","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/plot_go.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot selected GO terms — plot_go","text":"","code":"plot_go(   obj,   term_col = \"term_short\",   ontology_col = \"ontology\",   annotate_n = TRUE )"},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/plot_go.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot selected GO terms — plot_go","text":"obj data.frame containing goseq results generated get_enriched_go estimate_go_overrep. See example. term_col character column name GO term description. ontology_col character column name GO term ontology. annotate_n logical Include number features per term (.e. numDEInCat column) plot? (Default TRUE)","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/plot_go.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot selected GO terms — plot_go","text":"Returns ggplot object.","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/plot_go.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot selected GO terms — plot_go","text":"","code":"# Make a data.frame of the correct format df <- data.frame(   \"term_short\" = c(\"A GO term\", \"Another GO term\", \"One more GO term\"),   \"ontology\" = c(\"BP\", \"MF\", \"CC\"),   \"over_represented_adj_pval\" = c(0.0001, 1, 0.01),   \"adj_overrep\" = c(15, 3, 1),   \"numDEInCat\" = c(304, 22, 78) )  # Plot the GO terms plot_go(df) #> Error in theme_camprot(base_size = 15, border = FALSE): could not find function \"theme_camprot\""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/plot_missing_SN.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the missing values vs signal:noise — plot_missing_SN","title":"Plot the missing values vs signal:noise — plot_missing_SN","text":"Missing values frequent low signal:noise (S:N). function visualises relationship aid selection thresholds minimal S:N filtering","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/plot_missing_SN.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the missing values vs signal:noise — plot_missing_SN","text":"","code":"plot_missing_SN(obj, sn_column = \"Average.Reporter.SN\", bins = 20)"},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/plot_missing_SN.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the missing values vs signal:noise — plot_missing_SN","text":"obj SummarizedExperiment containing PSM level TMT intensities sn_column character column name signal:noise values bins numeric Number bins plot","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/plot_missing_SN.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the missing values vs signal:noise — plot_missing_SN","text":"ggplot stacked bar plot show S:N vs # missing values","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/plot_missing_SN_per_sample.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the missing values vs signal:noise for each sample — plot_missing_SN_per_sample","title":"Plot the missing values vs signal:noise for each sample — plot_missing_SN_per_sample","text":"Missing values frequent low signal:noise (S:N). function visualises relationship sample aid selection thresholds minimal S:N filtering.","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/plot_missing_SN_per_sample.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the missing values vs signal:noise for each sample — plot_missing_SN_per_sample","text":"","code":"plot_missing_SN_per_sample(obj, sn_column = \"Average.Reporter.SN\", bins = 20)"},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/plot_missing_SN_per_sample.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the missing values vs signal:noise for each sample — plot_missing_SN_per_sample","text":"obj SummarizedExperiment containing PSM level TMT intensities sn_column character column name Signal:noise values bins numeric Number bins plot","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/plot_missing_SN_per_sample.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the missing values vs signal:noise for each sample — plot_missing_SN_per_sample","text":"ggplot tile plot show S:N vs # missing values sample","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/plot_missing_upset.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the most common missing value patterns — plot_missing_upset","title":"Plot the most common missing value patterns — plot_missing_upset","text":"patterns missing values can informative respect whether experiment worked, particular samples outliers. function uses 'upset' plot show top 50 common missing value patterns across samples","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/plot_missing_upset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the most common missing value patterns — plot_missing_upset","text":"","code":"plot_missing_upset(obj, i)"},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/plot_missing_upset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the most common missing value patterns — plot_missing_upset","text":"obj QFeatures. Proteomics dataset string. Index SummarisedExperiment wish plot","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/plot_missing_upset.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the most common missing value patterns — plot_missing_upset","text":"Returns ggplot object.","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/plot_missing_upset.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot the most common missing value patterns — plot_missing_upset","text":"","code":"set.seed(11) library(ggplot2)  df <- diamonds[sample(nrow(diamonds), 1000), ]  tmt_qf <- QFeatures::readQFeatures(assayData = psm_tmt_total,   quantCols = 36:45,   name = \"psms_raw\") #> Checking arguments. #> Loading data as a 'SummarizedExperiment' object. #> Formatting sample annotations (colData). #> Formatting data as a 'QFeatures' object."},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/plot_pca.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Principle Component plot from the feature quantification — plot_pca","title":"Create a Principle Component plot from the feature quantification — plot_pca","text":"PCA visualisation feature quantifications sample can allow one see experimental conditions relate sources variance (principle components). function plots PCA, option colour /shape points experimental conditions. percentage values indicated axes variance explained PCs.","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/plot_pca.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Principle Component plot from the feature quantification — plot_pca","text":"","code":"plot_pca(obj, i, colour_by = NULL, shape_by = NULL, x = 1, y = 2)"},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/plot_pca.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Principle Component plot from the feature quantification — plot_pca","text":"obj QFeatures. Proteomics dataset string. Index SummarizedExperiment wish plot colour_by string. ColData column colour points shape_by string. ColData column shape points x numeric. Principle component plot x-axis y numeric. Principle component plot x-axis","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/plot_pca.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Principle Component plot from the feature quantification — plot_pca","text":"Returns ggplot object.","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/plot_quant.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot distributions for feature intensities per sample. — plot_quant","title":"Plot distributions for feature intensities per sample. — plot_quant","text":"Given SummarizedExperiment, return plot feature quantifications per sample.","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/plot_quant.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot distributions for feature intensities per sample. — plot_quant","text":"","code":"plot_quant(   obj,   method = c(\"box\", \"density\", \"histogram\"),   log2transform = FALSE,   facet_by_sample = FALSE )"},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/plot_quant.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot distributions for feature intensities per sample. — plot_quant","text":"obj SummarizedExperiment. method string. Plot style. Choice box, density histogram plot. log2transform logical. feature quantifications log-transformed? facet_by_sample logical. Facet plot sample.","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/plot_quant.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot distributions for feature intensities per sample. — plot_quant","text":"ggplot object.","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/plot_rt_dist.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the retention time distribution — plot_rt_dist","title":"Plot the retention time distribution — plot_rt_dist","text":"useful assess retention time distribution quality control step. peptides spread across retention times, without clear 'gaps' clear trend towards one end gradient.","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/plot_rt_dist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the retention time distribution — plot_rt_dist","text":"","code":"plot_rt_dist(obj, rt_col = \"RT.in.min.by.Search.Engine.Sequest.HT\")"},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/plot_rt_dist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the retention time distribution — plot_rt_dist","text":"obj SummarisedExperiment containing peptide-level output Proteome Discoverer. rt_col string. Name column retention time","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/plot_rt_dist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the retention time distribution — plot_rt_dist","text":"Returns ggplot RT vs delta PPM","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/plot_rt_vs_delta.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the retention time vs delta precursor mass — plot_rt_vs_delta","title":"Plot the retention time vs delta precursor mass — plot_rt_vs_delta","text":"useful assess relationship retention time delta precursor mass quality control step. little relationship","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/plot_rt_vs_delta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the retention time vs delta precursor mass — plot_rt_vs_delta","text":"","code":"plot_rt_vs_delta(   obj,   rt_col = \"RT.in.min.by.Search.Engine.Sequest.HT\",   delta_ppm_col = \"Delta.M.in.ppm.by.Search.Engine.Sequest.HT\" )"},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/plot_rt_vs_delta.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the retention time vs delta precursor mass — plot_rt_vs_delta","text":"obj SummarisedExperiment containing peptide-level output Proteome Discoverer. rt_col string. Name column retention time delta_ppm_col string. Name column Delta precursor mass","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/plot_rt_vs_delta.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the retention time vs delta precursor mass — plot_rt_vs_delta","text":"Returns ggplot RT vs delta PPM","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/plot_volcano.html","id":null,"dir":"Reference","previous_headings":"","what":"Volcano plot for differential abundance testing — plot_volcano","title":"Volcano plot for differential abundance testing — plot_volcano","text":"Statistical testing results 'omics' differential abundance frequently displayed 'volcano' plot, x = log fold-change y = -log10(p-value). function generates volcano plot data.frame containing statistical testing results","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/plot_volcano.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Volcano plot for differential abundance testing — plot_volcano","text":"","code":"plot_volcano(   obj,   lf_col = \"logFC\",   p_col = \"adj.P.Val\",   sig_col = NULL,   title = NULL,   xlab = \"log2 Fold Change\" )"},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/plot_volcano.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Volcano plot for differential abundance testing — plot_volcano","text":"obj data.frame. Statistical testing results lf_col string. Column log fold-change p_col string. Column p-value sig_col string. Column significance annotation (optional) title string. Plot title xlab string. Label x axis","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/plot_volcano.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Volcano plot for differential abundance testing — plot_volcano","text":"Returns ggplot object.","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/psm_tmt_total.html","id":null,"dir":"Reference","previous_headings":"","what":"PSM-level PD output for total proteome TMT10-plex data — psm_tmt_total","title":"PSM-level PD output for total proteome TMT10-plex data — psm_tmt_total","text":"Description. column name class. Description.","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/psm_tmt_total.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"PSM-level PD output for total proteome TMT10-plex data — psm_tmt_total","text":"","code":"psm_tmt_total"},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/psm_tmt_total.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"PSM-level PD output for total proteome TMT10-plex data — psm_tmt_total","text":"object class data.frame 5000 rows 50 columns.","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/psm_tmt_total.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"PSM-level PD output for total proteome TMT10-plex data — psm_tmt_total","text":"Insert reference published.","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/remove_dots.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove duplicated full stops — remove_dots","title":"Remove duplicated full stops — remove_dots","text":"convenience function remove duplicated full stops (aka periods) elements vector, e.g. change .. ... .... etc. just . Mainly used fix column names.","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/remove_dots.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove duplicated full stops — remove_dots","text":"","code":"remove_dots(x)"},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/remove_dots.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove duplicated full stops — remove_dots","text":"x character string. Contains duplicate full stops removed.","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/remove_dots.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove duplicated full stops — remove_dots","text":"Returns character string duplicate full stops removed.","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/remove_dots.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove duplicated full stops — remove_dots","text":"","code":"df <- data.frame(   column...name = c(1, 2, 3) )  colnames(df) <- remove_dots(colnames(df))"},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/remove_redundant_go.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove redundant GO terms — remove_redundant_go","title":"Remove redundant GO terms — remove_redundant_go","text":"Given output get_enriched_go goseq, remove redundant GO terms.","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/remove_redundant_go.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove redundant GO terms — remove_redundant_go","text":"","code":"remove_redundant_go(   obj,   go_category_col = \"category\",   p_value_col = \"over_represented_pvalue\" )"},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/remove_redundant_go.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove redundant GO terms — remove_redundant_go","text":"obj data.frame containing goseq results generated `go_category_col` character column name GO terms `p_value_col` character column name p-values get_enriched_go goseq.","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/remove_redundant_go.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove redundant GO terms — remove_redundant_go","text":"Returns obj redundant GO terms filtered .","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/remove_x.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove leading X — remove_x","title":"Remove leading X — remove_x","text":"convenience function remove leading capital X. case sensitive.","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/remove_x.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove leading X — remove_x","text":"","code":"remove_x(x)"},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/remove_x.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove leading X — remove_x","text":"x character string.","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/remove_x.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove leading X — remove_x","text":"Returns character string leading X removed.","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/remove_x.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove leading X — remove_x","text":"","code":"df <- data.frame('X1'=c(1,2))  remove_x(colnames(df)) #> [1] \"1\""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/sub_crap.html","id":null,"dir":"Reference","previous_headings":"","what":"Insert cRAP numbers into a character vector — sub_crap","title":"Insert cRAP numbers into a character vector — sub_crap","text":"function takes character vector element roughly form UniProt header e.g. \"sp|XXXXXX|YYYY_YYYY Text goes \" substitutes cRAP number place first | symbol, e.g. \"sp|cRAP001|XXXXXX|YYYY_YYYY Text goes \".","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/sub_crap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Insert cRAP numbers into a character vector — sub_crap","text":"","code":"sub_crap(x, start = 1, width = 3)"},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/sub_crap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Insert cRAP numbers into a character vector — sub_crap","text":"x character vector, element must two | symbols text e.g. |sometext|. start numeric, number increment , default 1 width numeric, many digits cRAP number , default 3","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/sub_crap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Insert cRAP numbers into a character vector — sub_crap","text":"Returns character vector length x.","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/sub_crap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Insert cRAP numbers into a character vector — sub_crap","text":"","code":"# basic use sub_crap(c(\"|sometext|\", \"|moretext|\")) #> [1] \"|cRAP001|sometext|\" \"|cRAP002|moretext|\"  # start from a different number sub_crap(c(\"|sometext|\", \"|moretext|\"), start = 88) #> [1] \"|cRAP088|sometext|\" \"|cRAP089|moretext|\"  # increase number width sub_crap(c(\"|sometext|\", \"|moretext|\"), start = 1111, width = 4) #> [1] \"|cRAP1111|sometext|\" \"|cRAP1112|moretext|\""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/theme_biomasslmb.html","id":null,"dir":"Reference","previous_headings":"","what":"A ggplot2 theme for the package — theme_biomasslmb","title":"A ggplot2 theme for the package — theme_biomasslmb","text":"standard theme use plots generated package.","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/theme_biomasslmb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A ggplot2 theme for the package — theme_biomasslmb","text":"","code":"theme_biomasslmb(   base_size = 14,   base_family = \"sans\",   base_line_size = base_size/18,   base_rect_size = base_size/9,   aspect_square = TRUE,   border = FALSE )"},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/theme_biomasslmb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A ggplot2 theme for the package — theme_biomasslmb","text":"base_size numeric. Defines overall size plot. base_family string. Fontfamily use, default \"sans\". base_line_size numeric. Defines line size use. base_rect_size numeric. Defines rect size use. aspect_square logical. square aspect ratio used? Default TRUE. border logical. plot square border? Default TRUE.","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/theme_biomasslmb.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A ggplot2 theme for the package — theme_biomasslmb","text":"Returns theme object.","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/theme_biomasslmb.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A ggplot2 theme for the package — theme_biomasslmb","text":"","code":"set.seed(11) library(ggplot2)  df <- diamonds[sample(nrow(diamonds), 1000), ]  ggplot(df, aes(x = price, y = carat)) +   geom_point() +   theme_biomasslmb()"},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/update_average_sn.html","id":null,"dir":"Reference","previous_headings":"","what":"Adds new feature describing the average reporter Signal/Noise ratio. — update_average_sn","title":"Adds new feature describing the average reporter Signal/Noise ratio. — update_average_sn","text":"PD column Average.Reporter.SN NA tags missing values imputes value zero NA tags missing. , 10-plex TMT experiment, single tag SN 10 others NA, PD report average SN 10/10 = 1. function adds average reporter SN column ignores missing values. example , average SN value reported 10. values NA, average SN remain NA. assumption intensity values exprs matrix Signal/Noise ratios, reported PD default","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/update_average_sn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adds new feature describing the average reporter Signal/Noise ratio. — update_average_sn","text":"","code":"update_average_sn(obj, sn_col = \"Average.Reporter.SN\")"},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/update_average_sn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adds new feature describing the average reporter Signal/Noise ratio. — update_average_sn","text":"obj SummarizedExperiment. contain PSMs-level TMT quantification sn_col string. Name output column containing average signal:noise","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/update_average_sn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Adds new feature describing the average reporter Signal/Noise ratio. — update_average_sn","text":"Returns MSnSet average SN included new feature column.","code":""},{"path":[]}]
