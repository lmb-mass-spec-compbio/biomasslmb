[{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 Tom Smith Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/articles/LFQ_DDA_Peptide_QC_Summarisation.html","id":"load-required-packages","dir":"Articles","previous_headings":"","what":"Load required packages","title":"LFQ-DDA QC Peptide-level quantification and summarisation to protein-level abundance","text":"clarify functionality provided package, use package::function. code, need specify package unless want maintain clarity.","code":"library(QFeatures) library(biomasslmb) library(ggplot2) library(tidyr) library(dplyr)"},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/articles/LFQ_DDA_Peptide_QC_Summarisation.html","id":"defining-the-contaminant-proteins","dir":"Articles","previous_headings":"","what":"Defining the contaminant proteins","title":"LFQ-DDA QC Peptide-level quantification and summarisation to protein-level abundance","text":"need remove contaminant proteins. defined using cRAP database. , parse contaminants fasta extract IDs proteins ‘cRAP’ format Uniprot IDs.","code":"crap_fasta_inf <- system.file(   \"extdata\", \"cRAP_20190401.fasta.gz\",    package = \"biomasslmb\" )  # Extract the protein IDs associated with each cRAP protein crap_accessions <- biomasslmb::get_crap_fasta_accessions(crap_fasta_inf)  print(head(crap_accessions)) #> [1] \"cRAP001\" \"P00330\"  \"cRAP002\" \"P02768\"  \"cRAP003\" \"P00883\""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/articles/LFQ_DDA_Peptide_QC_Summarisation.html","id":"read-in-input-data","dir":"Articles","previous_headings":"","what":"Read in input data","title":"LFQ-DDA QC Peptide-level quantification and summarisation to protein-level abundance","text":"start reading quantitative proteomics data QFeatures object, standard Bioconductor object holding quantitative proteomics data. See documentation QFeatures object.case, adding experimental details QFeatures object, ColData empty. ?? data set available biomasslmb package lfq_dda_pd_PeptideGroups.txt file available biomasslmb package containing Peptide-level output Proteome Discoverer (PD) experiment 6 samples. truncated file containing precursors peptides quantification just 500 proteins. Inspecting column names abundances, see names particularly useful. Abundance.FXX.na.Sample. part irrelevant replicate number included , update column names abundance columns read data, also want define experimental conditions sample. can provide Now can read data QFeatures object Adding colData peptide-level data . Extract gene name long-form protein name descriptions. ’s helpful assess retention time (RT) peptides relationship delta mass precursor ion. Everything looks OK .","code":"pep_inf <- system.file(   \"extdata\", \"lfq_dda_pd_PeptideGroups.txt\",    package = \"biomasslmb\" ) infdf <- read.delim(pep_inf)  abundance_cols_ix <-18:23  colnames(infdf)[abundance_cols_ix] #> [1] \"Abundance.F12.na.Sample.A\" \"Abundance.F13.na.Sample.A\" #> [3] \"Abundance.F14.na.Sample.A\" \"Abundance.F15.na.Sample.B\" #> [5] \"Abundance.F16.na.Sample.B\" \"Abundance.F17.na.Sample.B\" # Clean up sample names colnames(infdf)[abundance_cols_ix] <- paste(gsub('Abundance.F\\\\d+.na.Sample.', '',                                         colnames(infdf)[abundance_cols_ix]), rep(1:3, times=2), sep='_')  colnames(infdf)[abundance_cols_ix] #> [1] \"A_1\" \"A_2\" \"A_3\" \"B_1\" \"B_2\" \"B_3\" exp_design <- data.frame(quantCols=colnames(infdf)[abundance_cols_ix]) %>%   separate(quantCols, sep='_', into=c('condition', 'replicate'), remove = FALSE)   knitr::kable(exp_design) # Read in PSM-level quantification from TMT experiment (using QFeatures function) lfq_qf <- readQFeatures(assayData = infdf,                         quantCols = abundance_cols_ix,                          colData = exp_design,                         name = \"peptides_raw\") #> Checking arguments. #> Loading data as a 'SummarizedExperiment' object. #> Formatting sample annotations (colData). #> Formatting data as a 'QFeatures' object. colData(lfq_qf[['peptides_raw']]) <- colData(lfq_qf) tmt_qf[['peptides_raw']] <- add_gene_long_protein_name_pd(tmt_qf[['peptides_raw']]) plot_rt_dist(lfq_qf[['peptides_raw']]) plot_rt_vs_delta(lfq_qf[['peptides_raw']])"},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/articles/LFQ_DDA_Peptide_QC_Summarisation.html","id":"filter-peptides","dir":"Articles","previous_headings":"","what":"Filter peptides","title":"LFQ-DDA QC Peptide-level quantification and summarisation to protein-level abundance","text":"first perform routine filtering remove PSMs : originate contaminants. See ?filter_features details, including removal ‘associated cRAP’. Don’t unique master protein Don’t quantification values also remove peptides rank 1 according search engine normalisation summarisation, need quantification values log-scale, log-transform Next, plot peptide intensities.","code":"# Perform routine raw data filtering. # - Remove PSMs from contaminant proteins # - Remove PSMs where protein ID is empty or not unique  lfq_qf[['peptides_filtered']] <- filter_features_pd_dda(lfq_qf[['peptides_raw']],                                                         protein_col='Master.Protein.Accessions', # UPDATE WHEN RE-EXPORTED                                                  contaminant_proteins=crap_accessions,                                                  filter_contaminant =TRUE,                                                  filter_associated_contaminant=TRUE,                                                  unique_master=FALSE,                                                  remove_no_quant = TRUE) #> Filtering data... #> 3106 features found from 500 master proteins => Input #> 242 contaminant proteins supplied #> 15 proteins identified as 'contaminant associated' #> 3091 features found from 498 master proteins => contaminant features removed #> 3091 features found from 498 master proteins => associated contaminant features removed #> 3091 features found from 498 master proteins => features without a master protein removed #> 2746 features found from 461 master proteins => features without quantification removed lfq_qf <- lfq_qf %>% filterFeatures(~ Search.Engine.Rank.by.Search.Engine.Sequest.HT == 1,                i = \"peptides_filtered\")  #> 'Search.Engine.Rank.by.Search.Engine.Sequest.HT' found in 2 out of 2 assay(s).  biomasslmb:::message_parse(rowData(lfq_qf[['peptides_filtered']]),                            'Master.Protein.Accessions',                            \"Removing peptides that are not rank 1\") #> 2741 features found from 461 master proteins => Removing peptides that are not rank 1 lfq_qf[['peptides_filtered']] <- QFeatures::logTransform(   lfq_qf[['peptides_filtered']], base=2) # Plot the peptide-level quantification distributions per sample plot_quant(lfq_qf[['peptides_filtered']], log2transform=FALSE, method='density') +   scale_colour_manual(values=rep(get_cat_palette(3), each=3)) +   aes(linetype=sample) +   scale_linetype_manual(values=rep(1:3, times=3)) +   xlab('Peptide abundance (log2)')"},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/articles/LFQ_DDA_Peptide_QC_Summarisation.html","id":"normalise","dir":"Articles","previous_headings":"Filter peptides","what":"Normalise","title":"LFQ-DDA QC Peptide-level quantification and summarisation to protein-level abundance","text":"Since amount sample injected sample, want normalise remove differences overall disribution abundances. thus perform ‘diff.median’ normalisation QFeatures::normalize.","code":"lfq_qf[['peptides_norm']] <- QFeatures::normalize(lfq_qf[['peptides_filtered']],                                                   method='diff.median') # Plot the peptide-level quantification distributions per sample plot_quant(lfq_qf[['peptides_norm']], log2transform=FALSE, method='density') +   scale_colour_manual(values=rep(get_cat_palette(3), each=3)) +   aes(linetype=sample) +   scale_linetype_manual(values=rep(1:3, times=3)) +   xlab('Peptide abundance (log2)')"},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/articles/LFQ_DDA_Peptide_QC_Summarisation.html","id":"summarising-to-protein-level-abundances","dir":"Articles","previous_headings":"Filter peptides","what":"Summarising to protein-level abundances","title":"LFQ-DDA QC Peptide-level quantification and summarisation to protein-level abundance","text":"summarisation protein, use robustSummary. need remove peptides missing values. However, still don’t want retain peptides many missing values, since informative estimating protein-level quantification. , inspect common patterns missing values. missingness frequently consigned samples one condition also commonly 2/3 replicates one condition. looks like missingness far missing random (MAR) likely missing due falling detection limits.  Since DDA LFQ typically many missing values exclude peptides missing values, MsCoreUtils::robustSummary method preferred summarisation protein-level abundance. robustSummary, need remove PSMs missing values since summarisation algorithm deals appropriately (Sticker et al. 2020).. However, still don’t want retain PSMs many missing values, since informative estimating protein-level quantification. , retain PSMs 4/6 missing values Next, remove peptides proteins fewer 2 peptides. Now can summarise robustSummary Prior summaristaion, removed PSMs proteins fewer 2 peptides. However, since left peptides missing values, ’s possible protein-level abundances derived just single peptide. can use get_protein_no_quant_mask biomasslmb identify protein abundances derived fewer n features (peptides). can give mask mask_protein_level_quant replace quantification values NA.","code":"plot_missing_upset(lfq_qf, i='peptides_norm') lfq_qf[['peptides_filtered_missing']] <- QFeatures::filterNA(   lfq_qf[['peptides_norm']], 4/6)  biomasslmb:::message_parse(rowData(lfq_qf[['peptides_filtered_missing']]),                            'Master.Protein.Accessions',                            \"Removing peptides with more than 4/6 missing values\") #> 2704 features found from 457 master proteins => Removing peptides with more than 4/6 missing values min_peps <- 2 lfq_qf[['peptides_for_summarisation']] <- filter_features_per_protein(   lfq_qf[['peptides_filtered_missing']], min_features = min_peps)  biomasslmb:::message_parse(rowData(lfq_qf[['peptides_for_summarisation']]),                            'Master.Protein.Accessions',                            \"Removing 'one-hit' wonders\") #> 2586 features found from 339 master proteins => Removing 'one-hit' wonders set.seed(42)  # Aggregate to protein-level abundances (using QFeatures function) lfq_qf <- aggregateFeatures(lfq_qf,                              i = \"peptides_for_summarisation\",                             #i = \"peptides_filtered_missing\",                              fcol = \"Master.Protein.Accessions\",                             name = \"protein\",                             fun = MsCoreUtils::robustSummary,                             maxit=10000) #> Your quantitative and row data contain missing values. Please read the #> relevant section(s) in the aggregateFeatures manual page regarding the #> effects of missing values on data aggregation. # plot = TRUE means we will also get a plot of the number of proteins quantified in each sample protein_retain_mask <- biomasslmb::get_protein_no_quant_mask(   lfq_qf[['peptides_for_summarisation']], min_features=min_peps, plot=TRUE)   lfq_qf[['protein']] <- biomasslmb::mask_protein_level_quant(   lfq_qf[['protein']], protein_retain_mask)"},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/articles/LFQ_DDA_Peptide_QC_Summarisation.html","id":"re-inspecting-missing-values-at-protein-level","dir":"Articles","previous_headings":"Filter peptides","what":"Re-inspecting missing values at protein-level","title":"LFQ-DDA QC Peptide-level quantification and summarisation to protein-level abundance","text":"Now protein-level abundances, like re-inspect missing values. Overall, 5.064 % missing values, 10.565 % missing values given sample. common missingness patterns protein missing 1,2 3 replicates single condition, suggesting quantification missing due detection limits.","code":"plot_missing_upset(lfq_qf, i='protein' )"},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/articles/LFQ_DDA_Peptide_QC_Summarisation.html","id":"inspecting-the-number-of-peptides-and-proteins-through-the-processing-steps","dir":"Articles","previous_headings":"Filter peptides","what":"Inspecting the number of peptides and proteins through the processing steps","title":"LFQ-DDA QC Peptide-level quantification and summarisation to protein-level abundance","text":"Now performed filtering steps summarisation protein-level abundances, ’s helpful visualise many peptides/proteins retained level processing. can use biomasslmb::get_samples_present biomasslmb::plot_samples_present functions . First though, need decide ‘experiments’ want plot define named character vector since QFeatures names sufficiently clear , inspect experiment names. case, don’t want plot peptides_norm, since ’s just normalised quantification present peptides_filtered peptides removed step.","code":"names(lfq_qf) #> [1] \"peptides_raw\"               \"peptides_filtered\"          #> [3] \"peptides_norm\"              \"peptides_filtered_missing\"  #> [5] \"peptides_for_summarisation\" \"protein\""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/articles/LFQ_DDA_Peptide_QC_Summarisation.html","id":"samples-per-peptide","dir":"Articles","previous_headings":"Filter peptides > Inspecting the number of peptides and proteins through the processing steps","what":"Samples per peptide","title":"LFQ-DDA QC Peptide-level quantification and summarisation to protein-level abundance","text":"’ll start inspecting number peptides experiment. therefore define named character vector peptides-level experiments, excluding psms_filtered_norm. set row variables Annotated.Sequence Modifications count number unique peptides. Samples quantified PSM level processing","code":"rename_cols <- c('All peptides' = 'peptides_raw' ,                  'Quantified, contaminants removed' = 'peptides_filtered',                  'No missing values' = 'peptides_filtered_missing',                  '>1 PSM per protein' = 'peptides_for_summarisation')  rowvars <- c('Annotated.Sequence', 'Modifications')  samples_present <- get_samples_present(lfq_qf[,,unname(rename_cols)], rowvars, rename_cols) #> Warning: 'experiments' dropped; see 'drops()' #> harmonizing input: #>   removing 12 sampleMap rows not in names(experiments) #> Warning in lifeCycle(\"longForm\", package = \"MultiAssayExperiment\", title = \"longFormat\"): 'longFormat' is deprecated. #>   Use 'longForm' instead. #>   See help('longFormat-deprecated'). plot_samples_present(samples_present, rowvars, breaks=seq(2,10,2)) + ylab('PSM') #> Scale for fill is already present. #> Adding another scale for fill, which will replace the existing scale."},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/articles/LFQ_DDA_Peptide_QC_Summarisation.html","id":"samples-per-protein","dir":"Articles","previous_headings":"Filter peptides > Inspecting the number of peptides and proteins through the processing steps","what":"Samples per Protein","title":"LFQ-DDA QC Peptide-level quantification and summarisation to protein-level abundance","text":"Next, ’ll use functions inspect number proteins level processing. need supply updated named character vector include protein experiment set row variables just Master.Protein.Accesions column. Samples quantified protein level processing two plots, can see filtering ensure proteins >1 peptides removed peptides, proteins. Whether appropriate depend data hand.","code":"rename_cols_prot <- c(rename_cols, 'Protein'='protein')  rowvars_prot <- c('Master.Protein.Accessions')  samples_present <- get_samples_present(lfq_qf, rowvars_prot, rename_cols_prot) #> Warning in lifeCycle(\"longForm\", package = \"MultiAssayExperiment\", title = \"longFormat\"): 'longFormat' is deprecated. #>   Use 'longForm' instead. #>   See help('longFormat-deprecated'). plot_samples_present(samples_present, rowvars_prot, breaks=seq(2,10,2)) #> Scale for fill is already present. #> Adding another scale for fill, which will replace the existing scale. sessionInfo() #> R version 4.5.1 (2025-06-13) #> Platform: x86_64-pc-linux-gnu #> Running under: Ubuntu 24.04.2 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.26.so;  LAPACK version 3.12.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats4    stats     graphics  grDevices utils     datasets  methods   #> [8] base      #>  #> other attached packages: #>  [1] dplyr_1.1.4                 tidyr_1.3.1                 #>  [3] ggplot2_3.5.2               biomasslmb_0.0.4            #>  [5] QFeatures_1.18.0            MultiAssayExperiment_1.34.0 #>  [7] SummarizedExperiment_1.38.1 Biobase_2.68.0              #>  [9] GenomicRanges_1.60.0        GenomeInfoDb_1.44.0         #> [11] IRanges_2.42.0              S4Vectors_0.46.0            #> [13] BiocGenerics_0.54.0         generics_0.1.4              #> [15] MatrixGenerics_1.20.0       matrixStats_1.5.0           #>  #> loaded via a namespace (and not attached): #>  [1] DBI_1.2.3               gridExtra_2.3           rlang_1.1.6             #>  [4] magrittr_2.0.3          clue_0.3-66             compiler_4.5.1          #>  [7] RSQLite_2.4.1           png_0.1-8               systemfonts_1.2.3       #> [10] vctrs_0.6.5             reshape2_1.4.4          stringr_1.5.1           #> [13] ProtGenerics_1.40.0     pkgconfig_2.0.3         crayon_1.5.3            #> [16] fastmap_1.2.0           backports_1.5.0         XVector_0.48.0          #> [19] labeling_0.4.3          rmarkdown_2.29          UCSC.utils_1.4.0        #> [22] visdat_0.6.0            ragg_1.4.0              UpSetR_1.4.0            #> [25] purrr_1.0.4             bit_4.6.0               xfun_0.52               #> [28] cachem_1.1.0            jsonlite_2.0.0          blob_1.2.4              #> [31] DelayedArray_0.34.1     cluster_2.1.8.1         R6_2.6.1                #> [34] bslib_0.9.0             stringi_1.8.7           RColorBrewer_1.1-3      #> [37] genefilter_1.90.0       jquerylib_0.1.4         Rcpp_1.1.0              #> [40] knitr_1.50              usethis_3.1.0           BiocBaseUtils_1.10.0    #> [43] Matrix_1.7-3            splines_4.5.1           igraph_2.1.4            #> [46] tidyselect_1.2.1        abind_1.4-8             yaml_2.3.10             #> [49] lattice_0.22-7          tibble_3.3.0            plyr_1.8.9              #> [52] withr_3.0.2             KEGGREST_1.48.1         evaluate_1.0.4          #> [55] uniprotREST_1.0.0       desc_1.4.3              survival_3.8-3          #> [58] Biostrings_2.76.0       pillar_1.11.0           corrplot_0.95           #> [61] checkmate_2.3.2         rprojroot_2.0.4         scales_1.4.0            #> [64] xtable_1.8-4            glue_1.8.0              lazyeval_0.2.2          #> [67] tools_4.5.1             robustbase_0.99-4-1     annotate_1.86.1         #> [70] fs_1.6.6                XML_3.99-0.18           grid_4.5.1              #> [73] MsCoreUtils_1.20.0      AnnotationDbi_1.70.0    GenomeInfoDbData_1.2.14 #> [76] naniar_1.1.0            cli_3.6.5               textshaping_1.0.1       #> [79] S4Arrays_1.8.1          AnnotationFilter_1.32.0 gtable_0.3.6            #> [82] DEoptimR_1.1-3-1        sass_0.4.10             digest_0.6.37           #> [85] SparseArray_1.8.0       htmlwidgets_1.6.4       farver_2.1.2            #> [88] memoise_2.0.1           htmltools_0.5.8.1       pkgdown_2.1.3           #> [91] lifecycle_1.0.4         httr_1.4.7              bit64_4.6.0-1           #> [94] MASS_7.3-65"},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/articles/LFQ_DIA_Peptide_QC.html","id":"load-required-packages","dir":"Articles","previous_headings":"","what":"Load required packages","title":"LFQ-DIA QC Peptide-level quantification and summarisation to protein-level abundance","text":"clarify functionality provided package, use package::function. code, need specify package unless want maintain clarity.","code":"library(QFeatures) library(biomasslmb) library(ggplot2) library(tidyr) library(dplyr)"},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/articles/LFQ_DIA_Peptide_QC.html","id":"defining-the-contaminant-proteins","dir":"Articles","previous_headings":"","what":"Defining the contaminant proteins","title":"LFQ-DIA QC Peptide-level quantification and summarisation to protein-level abundance","text":"need remove contaminant proteins. defined using cRAP database. , parse contaminants fasta extract IDs proteins ‘cRAP’ format Uniprot IDs.","code":"crap_fasta_inf <- system.file(   \"extdata\", \"cRAP_20190401.fasta.gz\",    package = \"biomasslmb\" )  # Extract the protein IDs associated with each cRAP protein crap_accessions <- biomasslmb::get_crap_fasta_accessions(crap_fasta_inf)  print(head(crap_accessions)) #> [1] \"cRAP001\" \"P00330\"  \"cRAP002\" \"P02768\"  \"cRAP003\" \"P00883\""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/articles/LFQ_DIA_Peptide_QC.html","id":"read-in-input-data","dir":"Articles","previous_headings":"","what":"Read in input data","title":"LFQ-DIA QC Peptide-level quantification and summarisation to protein-level abundance","text":"start reading quantitative proteomics data QFeatures object, standard Bioconductor object holding quantitative proteomics data. See documentation QFeatures object. , use biomasslmb::readDIANNFilter function, also allows us control FDR thresholds precursor protein (run-specific global). function reads report.tsv file DIA-NN. happy filtering settings DIA-NN, can directly read report.pr_matrix.tsv QFeatures object using QFeatures::readQFeatures function. diann_report.tsv file available biomasslmb package containing output DIA-NN experiment 6 samples. truncated file containing precursors (peptides) just 500 proteins. 0 quantification values exactly zero . exist, replaced NA, since mass spectrometry capable asserting protein zero abundance sample. column names include redundant information (‘HYE_DIA’) , update column names remove redundant information update sample names QFeatures need populate colData, currently empty , can create colData sample names. cases, may need read separate experimental design file. Adding colData peptide-level data . first perform routine filtering remove PSMs : originate contaminants. See ?filter_features_pd_dda details, including removal ‘associated cRAP’. Don’t unique master protein.","code":"diann_report_inf <- system.file(   \"extdata\", \"diann_report.tsv\",    package = \"biomasslmb\" )  dia_qf <- readDIANNFilterQJoin(diann_report_inf,                                global_protein_q=0.01,                                run_protein_q=0.01,                                run_precursor_q=0.01) #> Checking arguments. #> Loading data as a 'SummarizedExperiment' object. #> Splitting data in runs. #> Formatting sample annotations (colData). #> Formatting data as a 'QFeatures' object. #> Setting assay rownames. #> 'Lib.PG.Q.Value' found in 6 out of 6 assay(s). #> 'PG.Q.Value' found in 6 out of 6 assay(s). #> 'Q.Value' found in 6 out of 6 assay(s). #> Warning: 'experiments' dropped; see 'drops()' #> harmonizing input: #>   removing 6 sampleMap rows not in names(experiments) tmt_qf[['peptides_fdr_cntrl']] <- QFeatures::zeroIsNA(dia_qf[['peptides_fdr_cntrl']]) colnames(dia_qf)[[\"peptides_fdr_cntrl\"]] #> [1] \"HYE_DIA_A1\" \"HYE_DIA_A2\" \"HYE_DIA_A3\" \"HYE_DIA_B1\" \"HYE_DIA_B2\" #> [6] \"HYE_DIA_B3\" colnames(dia_qf)[[\"peptides_fdr_cntrl\"]] <- gsub('HYE_DIA_', '', colnames(dia_qf)[[\"peptides_fdr_cntrl\"]]) dia_qf <- renamePrimary(dia_qf, colnames(dia_qf)[[\"peptides_fdr_cntrl\"]]) data.frame(colData(dia_qf)) #> data frame with 0 columns and 6 rows colData(dia_qf) <- data.frame(quantCols=rownames(colData(dia_qf))) %>%   separate(quantCols, sep='', into=c(NA, 'condition', 'replicate'), remove = FALSE) %>%   tibble::column_to_rownames('quantCols')  data.frame(colData(dia_qf)) #>    condition replicate #> A1         A         1 #> A2         A         2 #> A3         A         3 #> B1         B         1 #> B2         B         2 #> B3         B         3 colData(dia_qf[['peptides_fdr_cntrl']]) <- colData(dia_qf) dia_qf[['peptides_filtered']] <- biomasslmb::filter_features_diann(dia_qf[['peptides_fdr_cntrl']], contaminant_proteins=crap_accessions) #> Filtering data... #> 5009 features found from 454 master proteins => Input #> 242 contaminant proteins supplied #> 11 proteins identified as 'contaminant associated' #> 4998 features found from 453 master proteins => contaminant features removed #> 4998 features found from 453 master proteins => associated contaminant features removed #> 4998 features found from 453 master proteins => features without a master protein removed #> 4955 features found from 448 master proteins => features with non-unique master proteins removed #> 4955 features found from 448 master proteins => features without quantification removed"},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/articles/LFQ_DIA_Peptide_QC.html","id":"check-normalisation","dir":"Articles","previous_headings":"","what":"Check normalisation","title":"LFQ-DIA QC Peptide-level quantification and summarisation to protein-level abundance","text":"Next, plot peptide intensity distribution check approximately using biomasslmb::plot_quant. default, DIA-NN performs normalisation. See documentation details underlying assumptions normalisation use cases normalisation approach may appropriate, e.g interactome proteomics.","code":"# Plot the peptide-level quantification distributions per sample biomasslmb::plot_quant(dia_qf[['peptides_filtered']],                        log2transform=TRUE,                        method='density') +   theme_biomasslmb() +   xlab('PSM abundance (log2)')"},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/articles/LFQ_DIA_Peptide_QC.html","id":"missing-values","dir":"Articles","previous_headings":"Check normalisation","what":"Missing values","title":"LFQ-DIA QC Peptide-level quantification and summarisation to protein-level abundance","text":", inspect number missing values per sample , samples 12 - 21 % missing values. fairly typical DIA data precursor level. Next, inspect common patterns missing values. missingness frequently observed 3 replicates single condition, also commonly just single sample.","code":"nNA(dia_qf[['peptides_filtered']])$nNAcols %>%   data.frame() %>% knitr::kable(digits=2) plot_missing_upset(dia_qf, i='peptides_filtered')"},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/articles/LFQ_DIA_Peptide_QC.html","id":"summarising-to-protein-level-abundances","dir":"Articles","previous_headings":"Check normalisation","what":"Summarising to protein-level abundances","title":"LFQ-DIA QC Peptide-level quantification and summarisation to protein-level abundance","text":"Now inspected peptide-level quantification filtered peptides, can summarise peptide-level quantification protein-level abundances. Since DIA typically many missing values exclude peptides missing values, MsCoreUtils::robustSummary method preferred summarisation protein-level abundance. robustSummary, need remove PSMs missing values since summarisation algorithm deals appropriately (Sticker et al. 2020).. However, still don’t want retain PSMs many missing values, since informative estimating protein-level quantification. , retain PSMs 4/6 missing values Next, remove PSMs proteins fewer 2 PSMs. common filter proteomics ensure protein-level quantifications derived least two independent observations. cases, example phosphoproteomics, filter appears stringent, may appropriate skip . Now can summarise robustSummary Prior summaristaion, removed PSMs proteins fewer 2 PSMs. However, since left PSMs missing values, ’s possible protein-level abundances derived just single PSM. can use get_protein_no_quant_mask biomasslmb identify protein abundances derived fewer n features (PSMs). can give mask mask_protein_level_quant replace quantification values NA.","code":"dia_qf[['peptides_filtered_missing']] <- QFeatures::filterNA(   dia_qf[['peptides_filtered']], 4/6)  biomasslmb:::message_parse(rowData(dia_qf[['peptides_filtered_missing']]),                            'Protein.Group',                            \"Removing peptides with > 4/6 missing values\") #> 4863 features found from 441 master proteins => Removing peptides with > 4/6 missing values min_psms <- 2   dia_qf[['peptides_filtered_forRobust']] <- biomasslmb::filter_features_per_protein(   dia_qf[['peptides_filtered_missing']], min_features = min_psms, master_protein_col='Protein.Group')  biomasslmb:::message_parse(rowData(dia_qf[['peptides_filtered_forRobust']]),                            'Protein.Group',                            \"Removing peptides for proteins with < 2 peptides\") #> 4829 features found from 407 master proteins => Removing peptides for proteins with < 2 peptides # Aggregate to protein-level abundances (using QFeatures function) dia_qf <- QFeatures::aggregateFeatures(dia_qf,                                         i = \"peptides_filtered_forRobust\",                                         fcol = \"Protein.Group\",                                        name = \"protein\",                                        fun = MsCoreUtils::robustSummary,                                        maxit=10000) # ensure sufficient iterations for convergance #> Your quantitative data contain missing values. Please read the relevant #> section(s) in the aggregateFeatures manual page regarding the effects #> of missing values on data aggregation.  biomasslmb:::message_parse(rowData(dia_qf[['protein']]),                            'Protein.Group',                            \"Summarised to proteins\") #> 407 features found from 407 master proteins => Summarised to proteins # plot = TRUE means we will also get a plot of the number of proteins quantified in each sample protein_retain_mask <- biomasslmb::get_protein_no_quant_mask(   dia_qf[['peptides_filtered_forRobust']], min_features=2, plot=TRUE, master_protein_col='Protein.Group') dia_qf[['protein']] <- biomasslmb::mask_protein_level_quant(   dia_qf[['protein']], protein_retain_mask)"},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/articles/LFQ_DIA_Peptide_QC.html","id":"re-inspecting-missing-values-at-protein-level","dir":"Articles","previous_headings":"Check normalisation","what":"Re-inspecting missing values at protein-level","title":"LFQ-DIA QC Peptide-level quantification and summarisation to protein-level abundance","text":"Now protein-level abundances, like re-inspect missing values. Overall, 8.722 % missing values, 10.565 % missing values given sample. common missingness pattern protein missing 3 samples single condition.","code":"nNA(dia_qf[['protein']])$nNAcols %>%   data.frame() %>% knitr::kable(digits=2) plot_missing_upset(dia_qf, i='protein')"},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/articles/LFQ_DIA_Peptide_QC.html","id":"inspecting-the-number-of-peptides-and-proteins-through-the-processing-steps","dir":"Articles","previous_headings":"Check normalisation","what":"Inspecting the number of peptides and proteins through the processing steps","title":"LFQ-DIA QC Peptide-level quantification and summarisation to protein-level abundance","text":"Now performed filtering steps summarisation protein-level abundances, ’s helpful visualise many peptides/proteins retained level processing. can use biomasslmb::get_samples_present biomasslmb::plot_samples_present functions . First though, need decide ‘experiments’ want plot define named character vector since QFeatures names sufficiently clear , inspect experiment names. case, want plot experiments.","code":"names(dia_qf) #> [1] \"peptides_fdr_cntrl\"          \"peptides_filtered\"           #> [3] \"peptides_filtered_missing\"   \"peptides_filtered_forRobust\" #> [5] \"protein\""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/articles/LFQ_DIA_Peptide_QC.html","id":"samples-per-psm","dir":"Articles","previous_headings":"Check normalisation > Inspecting the number of peptides and proteins through the processing steps","what":"Samples per PSM","title":"LFQ-DIA QC Peptide-level quantification and summarisation to protein-level abundance","text":"’ll start inspecting number PSMs experiment. therefore define named character vector PSM-level experiments, exlcuding psms_filtered_norm. set row variables Precursor.Id count number unique peptides (precursors). Samples quantified PSM level processing","code":"rename_cols <- c('Peptides passing FDR thresholds' = 'peptides_fdr_cntrl' ,                  'Quantified, contaminants removed' = 'peptides_filtered',                  '<= 4/6 missing values' = 'peptides_filtered_missing',                  '>1 peptides per protein' = 'peptides_filtered_forRobust')  rowvars <- c('Precursor.Id')  samples_present <- get_samples_present(dia_qf[,,unname(rename_cols)], rowvars, rename_cols) #> harmonizing input: #>   removing 6 sampleMap rows not in names(experiments) #> Warning in lifeCycle(\"longForm\", package = \"MultiAssayExperiment\", title = \"longFormat\"): 'longFormat' is deprecated. #>   Use 'longForm' instead. #>   See help('longFormat-deprecated'). plot_samples_present(samples_present, rowvars, breaks=seq(2,10,2)) + ylab('PSM') #> Scale for fill is already present. #> Adding another scale for fill, which will replace the existing scale."},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/articles/LFQ_DIA_Peptide_QC.html","id":"samples-per-protein","dir":"Articles","previous_headings":"Check normalisation > Inspecting the number of peptides and proteins through the processing steps","what":"Samples per Protein","title":"LFQ-DIA QC Peptide-level quantification and summarisation to protein-level abundance","text":"Next, ’ll use functions inspect number proteins level processing. need supply updated named character vector include protein experiment set row variables just Master.Protein.Accesions column. Samples quantified protein level processing two plots, can see filtering ensure proteins >1 peptides removed peptides, proteins. Whether appropriate depend data hand.","code":"rename_cols_prot <- c(rename_cols, 'Protein'='protein')  rowvars_prot <- c('Protein.Group')  samples_present <- get_samples_present(dia_qf, rowvars_prot, rename_cols_prot) #> Warning in lifeCycle(\"longForm\", package = \"MultiAssayExperiment\", title = \"longFormat\"): 'longFormat' is deprecated. #>   Use 'longForm' instead. #>   See help('longFormat-deprecated'). plot_samples_present(samples_present, rowvars_prot, breaks=seq(2,10,2)) #> Scale for fill is already present. #> Adding another scale for fill, which will replace the existing scale. sessionInfo() #> R version 4.5.1 (2025-06-13) #> Platform: x86_64-pc-linux-gnu #> Running under: Ubuntu 24.04.2 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.26.so;  LAPACK version 3.12.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats4    stats     graphics  grDevices utils     datasets  methods   #> [8] base      #>  #> other attached packages: #>  [1] dplyr_1.1.4                 tidyr_1.3.1                 #>  [3] ggplot2_3.5.2               biomasslmb_0.0.4            #>  [5] QFeatures_1.18.0            MultiAssayExperiment_1.34.0 #>  [7] SummarizedExperiment_1.38.1 Biobase_2.68.0              #>  [9] GenomicRanges_1.60.0        GenomeInfoDb_1.44.0         #> [11] IRanges_2.42.0              S4Vectors_0.46.0            #> [13] BiocGenerics_0.54.0         generics_0.1.4              #> [15] MatrixGenerics_1.20.0       matrixStats_1.5.0           #>  #> loaded via a namespace (and not attached): #>  [1] DBI_1.2.3               gridExtra_2.3           rlang_1.1.6             #>  [4] magrittr_2.0.3          clue_0.3-66             compiler_4.5.1          #>  [7] RSQLite_2.4.1           png_0.1-8               systemfonts_1.2.3       #> [10] vctrs_0.6.5             reshape2_1.4.4          stringr_1.5.1           #> [13] ProtGenerics_1.40.0     pkgconfig_2.0.3         crayon_1.5.3            #> [16] fastmap_1.2.0           backports_1.5.0         XVector_0.48.0          #> [19] labeling_0.4.3          rmarkdown_2.29          UCSC.utils_1.4.0        #> [22] visdat_0.6.0            ragg_1.4.0              UpSetR_1.4.0            #> [25] purrr_1.0.4             bit_4.6.0               xfun_0.52               #> [28] cachem_1.1.0            jsonlite_2.0.0          blob_1.2.4              #> [31] DelayedArray_0.34.1     cluster_2.1.8.1         R6_2.6.1                #> [34] bslib_0.9.0             stringi_1.8.7           RColorBrewer_1.1-3      #> [37] genefilter_1.90.0       jquerylib_0.1.4         Rcpp_1.1.0              #> [40] knitr_1.50              usethis_3.1.0           BiocBaseUtils_1.10.0    #> [43] Matrix_1.7-3            splines_4.5.1           igraph_2.1.4            #> [46] tidyselect_1.2.1        abind_1.4-8             yaml_2.3.10             #> [49] lattice_0.22-7          tibble_3.3.0            plyr_1.8.9              #> [52] withr_3.0.2             KEGGREST_1.48.1         evaluate_1.0.4          #> [55] uniprotREST_1.0.0       desc_1.4.3              survival_3.8-3          #> [58] Biostrings_2.76.0       pillar_1.11.0           corrplot_0.95           #> [61] checkmate_2.3.2         rprojroot_2.0.4         scales_1.4.0            #> [64] xtable_1.8-4            glue_1.8.0              lazyeval_0.2.2          #> [67] tools_4.5.1             robustbase_0.99-4-1     annotate_1.86.1         #> [70] fs_1.6.6                XML_3.99-0.18           grid_4.5.1              #> [73] MsCoreUtils_1.20.0      AnnotationDbi_1.70.0    GenomeInfoDbData_1.2.14 #> [76] naniar_1.1.0            cli_3.6.5               textshaping_1.0.1       #> [79] S4Arrays_1.8.1          AnnotationFilter_1.32.0 gtable_0.3.6            #> [82] DEoptimR_1.1-3-1        sass_0.4.10             digest_0.6.37           #> [85] SparseArray_1.8.0       htmlwidgets_1.6.4       farver_2.1.2            #> [88] memoise_2.0.1           htmltools_0.5.8.1       pkgdown_2.1.3           #> [91] lifecycle_1.0.4         httr_1.4.7              bit64_4.6.0-1           #> [94] MASS_7.3-65"},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/articles/TMT_PSM_QC_Summarisation.html","id":"load-required-packages","dir":"Articles","previous_headings":"","what":"Load required packages","title":"TMT QC PSM-level quantification and summarisation to protein-level abundance","text":"clarify functionality provided package, use package::function. code, need specify package unless want maintain clarity.","code":"library(QFeatures) library(biomasslmb) library(ggplot2) library(tidyr) library(dplyr)"},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/articles/TMT_PSM_QC_Summarisation.html","id":"defining-the-contaminant-proteins","dir":"Articles","previous_headings":"","what":"Defining the contaminant proteins","title":"TMT QC PSM-level quantification and summarisation to protein-level abundance","text":"need remove contaminant proteins. defined using cRAP database. , parse contaminants fasta extract IDs proteins ‘cRAP’ format Uniprot IDs.","code":"crap_fasta_inf <- system.file(   \"extdata\", \"cRAP_20190401.fasta.gz\",    package = \"biomasslmb\" )  # Extract the protein IDs associated with each cRAP protein crap_accessions <- biomasslmb::get_crap_fasta_accessions(crap_fasta_inf)  print(head(crap_accessions)) #> [1] \"cRAP001\" \"P00330\"  \"cRAP002\" \"P02768\"  \"cRAP003\" \"P00883\""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/articles/TMT_PSM_QC_Summarisation.html","id":"read-in-input-data","dir":"Articles","previous_headings":"","what":"Read in input data","title":"TMT QC PSM-level quantification and summarisation to protein-level abundance","text":"start reading quantitative proteomics data QFeatures object, standard Bioconductor object holding quantitative proteomics data. See documentation QFeatures object.case, adding experimental details QFeatures object, ColData empty. psm_tmt_total data set available biomasslmb package containing PSM-level output Proteome Discoverer (PD) experiment 10 samples (one separate TMT tags). truncated file containing first 5,000 PSMs . , include details experimental design. Usually, included providing data.frame colData argument. See ?readQFeatures full details read quantification data QFeatures object. 2 quantification values exactly zero. replaced NA, since mass spectrometry capable asserting protein zero abundance sample. first perform routine filtering remove PSMs : originate contaminants. See ?filter_features_pd_dda details, including removal ‘associated cRAP’. Don’t unique master protein.","code":"tmt_qf <- QFeatures::readQFeatures(assayData = psm_tmt_total,                                    quantCols = 36:45,                                     name = \"psms_raw\") #> Checking arguments. #> Loading data as a 'SummarizedExperiment' object. #> Formatting sample annotations (colData). #> Formatting data as a 'QFeatures' object. tmt_qf[['psms_raw']] <- QFeatures::zeroIsNA(tmt_qf[['psms_raw']]) # Perform routine raw data filtering. # - Remove PSMs from contaminant proteins # - Remove PSMs where protein ID is empty or not unique tmt_qf[['psms_filtered']] <- filter_features_pd_dda(tmt_qf[['psms_raw']],                                              contaminant_proteins=crap_accessions,                                              filter_contaminant=TRUE,                                              filter_associated_contaminant=TRUE,                                              unique_master=TRUE, ) #> Filtering data... #> 5000 features found from 2364 master proteins => Input #> 242 contaminant proteins supplied #> 55 proteins identified as 'contaminant associated' #> 4937 features found from 2347 master proteins => contaminant features removed #> 4931 features found from 2342 master proteins => associated contaminant features removed #> 4929 features found from 2341 master proteins => features without a master protein removed #> 4754 features found from 2243 master proteins => features with non-unique master proteins removed #> 4753 features found from 2243 master proteins => features without quantification removed"},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/articles/TMT_PSM_QC_Summarisation.html","id":"normalise","dir":"Articles","previous_headings":"","what":"Normalise","title":"TMT QC PSM-level quantification and summarisation to protein-level abundance","text":"Next, plot peptide intensities check approximately using biomasslmb::plot_quant.  Since amount sample labelled case, ’s reasonable use ‘diff.median’ normalisation QFeatures::normalize. First though, need log-transform abundances normalisation works expected. exponentiate quantification values back original scale (reverse log-transformation) afterwards, since downstream steps including summarisation protein require non-transformed values","code":"# Plot the peptide-level quantification distributions per sample biomasslmb::plot_quant(tmt_qf[['psms_filtered']],                        log2transform=TRUE,                        method='density') +   theme_biomasslmb() +   xlab('PSM abundance (log2)') # Normalise the log2-transformed abundances using diff.median tmt_qf[['psms_filtered_norm']] <- QFeatures::normalize(   logTransform(tmt_qf[['psms_filtered']], base=2), method='diff.median')   # Exponentiate the quantification values back to the initial scale. assay(tmt_qf[['psms_filtered_norm']]) <- 2^assay(tmt_qf[['psms_filtered_norm']])  # Plot the peptide-level quantification distributions per sample biomasslmb::plot_quant(tmt_qf[['psms_filtered_norm']],                        log2transform=TRUE,                        method='density') +   theme_biomasslmb() +   xlab('PSM abundance (log2)')"},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/articles/TMT_PSM_QC_Summarisation.html","id":"removing-low-quality-psms","dir":"Articles","previous_headings":"","what":"Removing low quality PSMs","title":"TMT QC PSM-level quantification and summarisation to protein-level abundance","text":"want remove low Signal:Noise (S:N) PSMs, since quantification values less accurate missing values. can inspect relationship S:N missing values using plot_missing_SN function. Note signal:noise > 10, far fewer missing values. Missing values per PSM, relation signal:noise ratio can also look relationship tag level using plot_missing_SN_per_sample inspect whether labeling issue particular tag. case, tag appears high proportion missing values signal:noise > 10. Missing values per tag, relation signal:noise ratio Based , filter PSMs retain S:N > 10 using filter_TMT_PSMs since PSMs clearly much closer limit detection MS therefore likely contain less accurate quantification data. Note necessitates removing ~ 1/20 PSMs case. Using function, also remove PSMs interference/co-isolation >50% since also likely contain less accurate quantification data. also remove peptides rank 1 according search engine","code":"# Add a more accurate average S:N ratio value. # The one calculated by PD doesn't treat NA values appropriately! tmt_qf[['psms_filtered_norm']] <- update_average_sn(tmt_qf[['psms_filtered_norm']])  plot_missing_SN(tmt_qf[['psms_filtered_norm']], bins = 20) plot_missing_SN_per_sample(tmt_qf[['psms_filtered_norm']], bins = 20) # Then filter PSMs to remove low S:N and/or high interference tmt_qf[['psms_filtered_sn']] <- filter_TMT_PSMs(tmt_qf[['psms_filtered_norm']],                                                 inter_thresh=50, sn_thresh=10) #> Filtering PSMs... #> 4753 features found from 2243 master proteins => Initial PSMs #> 4753 features found from 2243 master proteins => PSMs with Quan.Info removed #> 4753 features found from 2243 master proteins => PSMs which are not selected or unambiguous removed #> 4753 features found from 2243 master proteins => Removing PSMs without quantification values #> 4633 features found from 2207 master proteins => Removing PSMs with high Co-isolation/interference #> 4455 features found from 2173 master proteins => Removing PSMs with low average S:N ratio tmt_qf[['psms_filtered_rank']] <- tmt_qf[['psms_filtered_sn']]  tmt_qf <- tmt_qf %>%   filterFeatures(~ Rank == 1, i = 'psms_filtered_rank') #> 'Rank' found in 5 out of 5 assay(s).  biomasslmb:::message_parse(rowData(tmt_qf[['psms_filtered_rank']]),                          'Master.Protein.Accessions',                          \"Removing peptides that are not rank 1\") #> 4455 features found from 2173 master proteins => Removing peptides that are not rank 1"},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/articles/TMT_PSM_QC_Summarisation.html","id":"summarising-to-protein-level-abundances","dir":"Articles","previous_headings":"","what":"Summarising to protein-level abundances","title":"TMT QC PSM-level quantification and summarisation to protein-level abundance","text":"Now inspected PSM-level quantification filtered PSMs, can summarise PSMs protein-level abundances. PSM protein summarisation TMT quantification, simply summing together PSM-level abundances provides accurate estimates, long missing values. many missing values present, MsCoreUtils::robustSummary method may preferred, since able summarise accurately, even presence missing values (Sticker et al. 2020). comparison two summarisation approaches, see TMT - comparing protein summarisation approaches vignette. , use simple sum summarisation. First, need consider missing values. leave missing values , either need allow protein quantifications NA, else ignore missing values summarisation. latter potentially mean different PSMs summed given protein across samples, making given protein’s summarised abundances across samples less accurately estimated. , therefore remove PSMs missing values. Next, remove PSMs proteins fewer 2 PSMs. common filter proteomics ensure protein-level quantifications derived least two independent observations. cases, example phosphoproteomics, filter appears stringent, may appropriate skip . Finally, perform summarisation.","code":"tmt_qf[['psms_filtered_missing']] <- QFeatures::filterNA(   tmt_qf[['psms_filtered_rank']], 0) min_psms <- 2 tmt_qf[['psms_filtered_forSum']] <- biomasslmb::filter_features_per_protein(   tmt_qf[['psms_filtered_missing']], min_features = min_psms) # Aggregate to protein-level abundances (using QFeatures function) tmt_qf <- QFeatures::aggregateFeatures(tmt_qf,                                         i = \"psms_filtered_forSum\",                                         fcol = \"Master.Protein.Accessions\",                                        name = \"protein\",                                        fun = base::colSums) tmt_qf[['protein']] <- QFeatures::logTransform(   tmt_qf[['protein']], base=2)"},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/articles/TMT_PSM_QC_Summarisation.html","id":"inspecting-the-number-of-psms-and-proteins-through-the-processing-steps","dir":"Articles","previous_headings":"Summarising to protein-level abundances","what":"Inspecting the number of PSMs and proteins through the processing steps","title":"TMT QC PSM-level quantification and summarisation to protein-level abundance","text":"Now performed filtering steps summarisation protein-level abundances, ’s helpful visualise many PSMs/proteins retained level processing. can use biomasslmb::get_samples_present biomasslmb::plot_samples_present functions . First though, need decide ‘experiments’ want plot define named character vector since QFeatures names sufficiently clear , inspect experiment names. case, don’t want plot psms_filterered_norm, since ’s just normalised quantification present psms_filtered PSMs removed step.","code":"names(tmt_qf) #> [1] \"psms_raw\"              \"psms_filtered\"         \"psms_filtered_norm\"    #> [4] \"psms_filtered_sn\"      \"psms_filtered_rank\"    \"psms_filtered_missing\" #> [7] \"psms_filtered_forSum\"  \"protein\""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/articles/TMT_PSM_QC_Summarisation.html","id":"samples-per-psm","dir":"Articles","previous_headings":"Summarising to protein-level abundances > Inspecting the number of PSMs and proteins through the processing steps","what":"Samples per PSM","title":"TMT QC PSM-level quantification and summarisation to protein-level abundance","text":"’ll start inspecting number PSMs experiment. therefore define named character vector PSM-level experiments, excluding psms_filtered_norm. set row variables Sequence, Modifications RT..min count number unique PSMs. Samples quantified PSM level processing","code":"rename_cols <- c('All PSMs' = 'psms_raw' ,                  'Quantified, contaminants removed' = 'psms_filtered',                  'Signal:Noise > 10' = 'psms_filtered_sn',                  'PSMs - filtered (Rank1)' = 'psms_filtered_rank',                  'No missing values' = 'psms_filtered_missing',                  '>1 PSM per protein' = 'psms_filtered_forSum')  rowvars <- c('Sequence', 'Modifications', 'RT.in.min')  samples_present <- get_samples_present(tmt_qf[,,unname(rename_cols)], rowvars, rename_cols) #> Warning: 'experiments' dropped; see 'drops()' #> harmonizing input: #>   removing 20 sampleMap rows not in names(experiments) #> Warning in lifeCycle(\"longForm\", package = \"MultiAssayExperiment\", title = \"longFormat\"): 'longFormat' is deprecated. #>   Use 'longForm' instead. #>   See help('longFormat-deprecated'). plot_samples_present(samples_present, rowvars, breaks=seq(2,10,2)) + ylab('PSM') #> Scale for fill is already present. #> Adding another scale for fill, which will replace the existing scale."},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/articles/TMT_PSM_QC_Summarisation.html","id":"samples-per-protein","dir":"Articles","previous_headings":"Summarising to protein-level abundances > Inspecting the number of PSMs and proteins through the processing steps","what":"Samples per Protein","title":"TMT QC PSM-level quantification and summarisation to protein-level abundance","text":"Next, ’ll use functions inspect number proteins level processing. need supply updated named character vector include protein experiment set row variables just Master.Protein.Accesions column. Samples quantified protein level processing case, removed missing values, last two experiments identical counts number samples protein. two plots, can see filtering ensure proteins >1 PSM removed PSMs, many proteins. Whether appropriate depend data hand.","code":"rename_cols_prot <- c(rename_cols, 'Protein'='protein')  rowvars_prot <- c('Master.Protein.Accessions')  samples_present <- get_samples_present(tmt_qf, rowvars_prot, rename_cols_prot) #> Warning in lifeCycle(\"longForm\", package = \"MultiAssayExperiment\", title = \"longFormat\"): 'longFormat' is deprecated. #>   Use 'longForm' instead. #>   See help('longFormat-deprecated'). plot_samples_present(samples_present, rowvars_prot, breaks=seq(2,10,2)) #> Scale for fill is already present. #> Adding another scale for fill, which will replace the existing scale."},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/articles/TMT_PSM_QC_Summarisation.html","id":"summary","dir":"Articles","previous_headings":"Summarising to protein-level abundances","what":"Summary","title":"TMT QC PSM-level quantification and summarisation to protein-level abundance","text":", QCed PSMs filtered following steps: Remove PSMs likely contaminants Remove PSMs without unique ‘master protein’ Remove PSMs without quantification values Normalise abundance values median value samples Remove PSMs low signal:noise Remove PSMs high interference summarised PSM level abundances two approaches, sum robustSummary, comparing protein-level abundances obtained . robustSummary handles missing values therefore enables proteins quantified. sum sensitive outliers high abundance, robust sensitive outliers low abundance.","code":"sessionInfo() #> R version 4.5.1 (2025-06-13) #> Platform: x86_64-pc-linux-gnu #> Running under: Ubuntu 24.04.2 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.26.so;  LAPACK version 3.12.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats4    stats     graphics  grDevices utils     datasets  methods   #> [8] base      #>  #> other attached packages: #>  [1] dplyr_1.1.4                 tidyr_1.3.1                 #>  [3] ggplot2_3.5.2               biomasslmb_0.0.4            #>  [5] QFeatures_1.18.0            MultiAssayExperiment_1.34.0 #>  [7] SummarizedExperiment_1.38.1 Biobase_2.68.0              #>  [9] GenomicRanges_1.60.0        GenomeInfoDb_1.44.0         #> [11] IRanges_2.42.0              S4Vectors_0.46.0            #> [13] BiocGenerics_0.54.0         generics_0.1.4              #> [15] MatrixGenerics_1.20.0       matrixStats_1.5.0           #>  #> loaded via a namespace (and not attached): #>   [1] DBI_1.2.3               gridExtra_2.3           rlang_1.1.6             #>   [4] magrittr_2.0.3          clue_0.3-66             compiler_4.5.1          #>   [7] RSQLite_2.4.1           png_0.1-8               systemfonts_1.2.3       #>  [10] vctrs_0.6.5             reshape2_1.4.4          stringr_1.5.1           #>  [13] ProtGenerics_1.40.0     pkgconfig_2.0.3         crayon_1.5.3            #>  [16] fastmap_1.2.0           backports_1.5.0         XVector_0.48.0          #>  [19] labeling_0.4.3          rmarkdown_2.29          UCSC.utils_1.4.0        #>  [22] visdat_0.6.0            ragg_1.4.0              purrr_1.0.4             #>  [25] bit_4.6.0               xfun_0.52               cachem_1.1.0            #>  [28] jsonlite_2.0.0          blob_1.2.4              DelayedArray_0.34.1     #>  [31] cluster_2.1.8.1         R6_2.6.1                bslib_0.9.0             #>  [34] stringi_1.8.7           RColorBrewer_1.1-3      genefilter_1.90.0       #>  [37] rpart_4.1.24            jquerylib_0.1.4         Rcpp_1.1.0              #>  [40] knitr_1.50              usethis_3.1.0           base64enc_0.1-3         #>  [43] BiocBaseUtils_1.10.0    nnet_7.3-20             Matrix_1.7-3            #>  [46] splines_4.5.1           igraph_2.1.4            tidyselect_1.2.1        #>  [49] rstudioapi_0.17.1       abind_1.4-8             yaml_2.3.10             #>  [52] lattice_0.22-7          tibble_3.3.0            plyr_1.8.9              #>  [55] withr_3.0.2             KEGGREST_1.48.1         evaluate_1.0.4          #>  [58] uniprotREST_1.0.0       foreign_0.8-90          desc_1.4.3              #>  [61] survival_3.8-3          Biostrings_2.76.0       pillar_1.11.0           #>  [64] corrplot_0.95           checkmate_2.3.2         rprojroot_2.0.4         #>  [67] scales_1.4.0            xtable_1.8-4            glue_1.8.0              #>  [70] Hmisc_5.2-3             lazyeval_0.2.2          tools_4.5.1             #>  [73] data.table_1.17.6       robustbase_0.99-4-1     annotate_1.86.1         #>  [76] fs_1.6.6                XML_3.99-0.18           grid_4.5.1              #>  [79] cutr_0.0.0.9000         colorspace_2.1-1        MsCoreUtils_1.20.0      #>  [82] AnnotationDbi_1.70.0    GenomeInfoDbData_1.2.14 htmlTable_2.4.3         #>  [85] Formula_1.2-5           naniar_1.1.0            cli_3.6.5               #>  [88] textshaping_1.0.1       S4Arrays_1.8.1          AnnotationFilter_1.32.0 #>  [91] gtable_0.3.6            DEoptimR_1.1-3-1        sass_0.4.10             #>  [94] digest_0.6.37           SparseArray_1.8.0       htmlwidgets_1.6.4       #>  [97] farver_2.1.2            memoise_2.0.1           htmltools_0.5.8.1       #> [100] pkgdown_2.1.3           lifecycle_1.0.4         httr_1.4.7              #> [103] bit64_4.6.0-1           MASS_7.3-65"},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/articles/TMT_summarisation_methods.html","id":"load-required-packages","dir":"Articles","previous_headings":"","what":"Load required packages","title":"TMT - comparing protein summarisation approaches","text":"clarify functionality provided package, use package::function. code, need specify package unless want maintain clarity. tmt_qf QFeatures object available biomasslmb package generated TMT QC PSM-level quantification summarisation protein-level abundance vignette. already contains protein-level quantification simple ‘sum’ summarisation, missing values removed proteins single PSM removed. , compare ‘robust’ summaristion, requires additional steps ensure performed appropriately.","code":"library(QFeatures) library(biomasslmb) library(ggplot2) library(tidyr) library(dplyr)"},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/articles/TMT_summarisation_methods.html","id":"summarisation-with-robustsummary","dir":"Articles","previous_headings":"Load required packages","what":"Summarisation with robustSummary","title":"TMT - comparing protein summarisation approaches","text":"robustSummary, need remove PSMs missing values since summarisation algorithm deals appropriately. However, still don’t want retain PSMs many missing values, since informative estimating protein-level quantification. , retain PSMs 5/10 missing values Next, remove PSMs proteins fewer 2 PSMs. robustSummary summarisation, need quantification values approximately Gaussian distributed. Hence, log transform . Now can summarise robustSummary Prior summaristaion, removed PSMs proteins fewer 2 PSMs. However, since left PSMs missing values, ’s possible protein-level abundances derived just single PSM. can use get_protein_no_quant_mask biomasslmb identify protein abundances derived fewer n features (PSMs). can give mask mask_protein_level_quant replace quantification values NA.","code":"tmt_qf[['psms_filtered_forRobust']] <- QFeatures::filterNA(   tmt_qf[['psms_filtered_rank']], 5/10) min_psms <- 2   tmt_qf[['psms_filtered_forRobust']] <- biomasslmb::filter_features_per_protein(   tmt_qf[['psms_filtered_forRobust']], min_features = min_psms) tmt_qf[['psms_filtered_forRobust']] <- QFeatures::logTransform(   tmt_qf[['psms_filtered_forRobust']], base=2) # Aggregate to protein-level abundances (using QFeatures function) tmt_qf <- QFeatures::aggregateFeatures(tmt_qf,                                         i = \"psms_filtered_forRobust\",                                         fcol = \"Master.Protein.Accessions\",                                        name = \"protein_robust\",                                        fun = MsCoreUtils::robustSummary,                                        maxit=1000) #> Your quantitative data contain missing values. Please read the relevant #> section(s) in the aggregateFeatures manual page regarding the effects #> of missing values on data aggregation. # plot = TRUE means we will also get a plot of the number of proteins quantified in each sample protein_retain_mask <- biomasslmb::get_protein_no_quant_mask(   tmt_qf[['psms_filtered_forRobust']], min_features=2, plot=TRUE) tmt_qf[['protein_robust']] <- biomasslmb::mask_protein_level_quant(   tmt_qf[['protein_robust']], protein_retain_mask)"},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/articles/TMT_summarisation_methods.html","id":"summarisation-with-median-or-mean","dir":"Articles","previous_headings":"Load required packages","what":"Summarisation with median or mean","title":"TMT - comparing protein summarisation approaches","text":"also include summarisation mean median, since typical approaches summarising across observations aid interpretation compare summasiation approaches. use PSMs missing values filtered, even though mean median can handle missing values na.rm=TRUE, since ignoring missing values inappropriate summarisation PSMs proteins methods.","code":"tmt_qf <- QFeatures::aggregateFeatures(tmt_qf,                                         i = \"psms_filtered_forSum\",                                         fcol = \"Master.Protein.Accessions\",                                        name = \"protein_mean\",                                        fun = base::colMeans, na.rm=TRUE)  tmt_qf <- QFeatures::aggregateFeatures(tmt_qf,                                         i = \"psms_filtered_forSum\",                                         fcol = \"Master.Protein.Accessions\",                                        name = \"protein_median\",                                        fun = matrixStats::colMedians, na.rm=TRUE)  tmt_qf[['protein_mean']] <- QFeatures::logTransform(   tmt_qf[['protein_mean']], base=2)  tmt_qf[['protein_median']] <- QFeatures::logTransform(   tmt_qf[['protein_median']], base=2)"},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/articles/TMT_summarisation_methods.html","id":"comparing-the-summarisation-approaches","dir":"Articles","previous_headings":"Load required packages","what":"Comparing the summarisation approaches","title":"TMT - comparing protein summarisation approaches","text":"can see performing robust summarisation allows us retain proteins, since can still use PSMs low number missing values. However, sum summarisation, complete quantification data (missing values), whereas robustSummary, proteins missing values samples. case, protein-level data 99.48 % complete, impact missing values downstream analysis minimal. can inspect missing values using QFeatures::nNA function, just .na quantitative data matrix. better understand difference two summarisation methods use available data, can inspect single protein missing values robustSummary, summarised sum. inspect PSM level abundances protein, see 3 PSMs, first two contain missing values single sample. Thus, one complete PSM, insufficient confident summarisation using sum. However, 3 PSMs sufficiently missing values used robustSummary method samples least two non missing values across 3 PSMs, protein quantified samples robustSummary. can directly compare protein-level abundance estimates explore two summarisation methods differ estimates. want identify proteins lowest correlation abundances across samples summarisation methods can inspect difference . , define function plot PSM protein level abundances single protein. plots , PSM level quantifications grey summarised protein-level abundances colours. can disregard y-axis scale comparing methods, protein peptide level abundances. important thing focus abundance profile tags one summarisation method PSM.  cases, protein-level quantification values relatively similar tags, differences approach typically restricted one two tags PSMs disagree relative abundances samples. Since sum simply adds together abundance values across PSMs given tag abundance values may across multiple orders magnitude, protein-level abundance pattern across tags weighted towards abundant PSMs. likely positive attribute, since abundant PSMs accurately quantified. However, summarisation also sensitive high abundance outliers. hand, robustSummary less sensitive outliers, treats PSMs equally. forth example (Q9NUQ9) can see can lead potential inaccuracies 2 PSMs one low intensity. example, tag 129C mid-range intensity compared tags abundant PSM, low less abundant PSM. almost impact sum summarise protein abundance, large impact use robustSummary. Note mean identical sum respect relative abundance across samples, just difference scale, since mean sum/n(PSMs). median less sensitive outliers mean, ignores much quantitative data since ’s affected ‘middle’ PSMs. extreme instances, median just simplifies PSM level abundances single representative ‘middle’ PSM.","code":"nrow(tmt_qf[['protein']]) #> [1] 891 nrow(tmt_qf[['protein_robust']]) #> [1] 921 QFeatures::nNA(tmt_qf[['protein']])$nNAcols #> DataFrame with 10 rows and 3 columns #>             name       nNA       pNA #>      <character> <integer> <numeric> #> 1  Abundance....         0         0 #> 2  Abundance....         0         0 #> 3  Abundance....         0         0 #> 4  Abundance....         0         0 #> 5  Abundance....         0         0 #> 6  Abundance....         0         0 #> 7  Abundance....         0         0 #> 8  Abundance....         0         0 #> 9  Abundance....         0         0 #> 10 Abundance....         0         0 QFeatures::nNA(tmt_qf[['protein_robust']])$nNAcols #> DataFrame with 10 rows and 3 columns #>             name       nNA        pNA #>      <character> <integer>  <numeric> #> 1  Abundance....         0 0.00000000 #> 2  Abundance....         0 0.00000000 #> 3  Abundance....         1 0.00108578 #> 4  Abundance....         5 0.00542888 #> 5  Abundance....         2 0.00217155 #> 6  Abundance....         5 0.00542888 #> 7  Abundance....         2 0.00217155 #> 8  Abundance....         7 0.00760043 #> 9  Abundance....        11 0.01194354 #> 10 Abundance....        15 0.01628664   message(sprintf('%.2f %% missing values', 100*mean(   is.na(assay(tmt_qf[['protein_robust']]))))) #> 0.52 % missing values # Identify the proteins with no missing values present only following robustSummary protein_robust_proteins <- rownames(filterNA(tmt_qf[['protein_robust']])) protein_sum_proteins <- rownames(filterNA(tmt_qf[['protein']]))  no_missing_robustSummary_only <- setdiff(protein_robust_proteins, protein_sum_proteins) print(no_missing_robustSummary_only) #> [1] \"P22695\" retain_psms <- rowData(   tmt_qf[['psms_filtered_sn']])$Master.Protein.Accessions==no_missing_robustSummary_only  assay(tmt_qf[['psms_filtered_sn']][retain_psms,]) #>      Abundance.126 Abundance.127N Abundance.127C Abundance.128N Abundance.128C #> 517      114.68442       158.3876       286.2073       438.4889       173.5508 #> 1686     587.11851       412.4273       322.2673       232.8183      1419.0267 #> 3597      89.15436       134.6058       212.5193       336.5223       139.6542 #>      Abundance.129N Abundance.129C Abundance.130N Abundance.130C Abundance.131 #> 517        41.27858       15.23801       10.07546             NA            NA #> 1686      494.28845             NA       23.85513      33.802622     58.042540 #> 3597       31.63687       24.65788       17.03938       4.101573      8.346825 # Define a function to extract the protein abundances in long form and # add a column annotating the method get_long_form_prot_exp <- function(obj, method_name) {   assay(obj) %>%     data.frame() %>%     tibble::rownames_to_column('protein') %>%     pivot_longer(cols=-protein) %>%     mutate(method = method_name) }  # Single object with protein inference from both methods  compare_protein_abundances <- rbind(   mutate(longFormat(tmt_qf[['protein']]), method='Sum'),   mutate(longFormat(tmt_qf[['protein_robust']]), method='Robust'),   mutate(longFormat(tmt_qf[['protein_median']]), method='Median'),   mutate(longFormat(tmt_qf[['protein_mean']]), method='Mean') )   print(head(compare_protein_abundances)) #>   rowname       colname     value method #> 1  A1L0T0 Abundance.126  8.340996    Sum #> 2  A4D1E9 Abundance.126  9.674770    Sum #> 3  A6NHR9 Abundance.126 10.319013    Sum #> 4  O00116 Abundance.126  6.884527    Sum #> 5  O00154 Abundance.126  5.597842    Sum #> 6  O00159 Abundance.126 10.410898    Sum proteins_of_interest <- compare_protein_abundances %>%   pivot_wider(names_from = method, values_from = value) %>%   group_by(rowname) %>%   summarise(cor_sum_median=cor(Sum, Median),             cor_sum_robust=cor(Sum, Robust)) %>%   pivot_longer(cols=-rowname) %>%   group_by(rowname) %>%   summarise(min_cor=min(value)) %>%   slice_min(min_cor, n=5) %>%   pull(rowname) plot_pep_and_protein <- function(protein_of_interest) {      to_plot_compare <- compare_protein_abundances %>%      filter(rowname == protein_of_interest)      QFeatures::filterFeatures(     tmt_qf,     VariableFilter(\"Master.Protein.Accessions\",                    protein_of_interest,                    condition = \"==\"))[['psms_filtered_sn']] %>%     longFormat() %>%     ggplot(aes(x = colname, y = log2(value))) +     geom_line(aes(group = rowname), colour = 'grey') +     geom_point(colour = 'grey') +     geom_line(data = to_plot_compare,               aes(x = colname, y = value, colour = method, group = method)) +     #geom_point(data = to_plot_compare,  position=position_dodge(width=0.5),     #           aes(x = colname, y = value, colour = method)) +     scale_colour_manual(values = get_cat_palette(4),                         name = 'Protein summarisation method') +     theme_biomasslmb(base_size = 15, border = FALSE, base_family = 'sans') +     theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1)) +     labs(       title = protein_of_interest,       x = '',       y = 'PSM/Protein abundance (log2)'     ) +     guides(color = guide_legend(override.aes = list(linewidth = 2) ) ) } for(poi in proteins_of_interest) print(plot_pep_and_protein(poi))"},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/articles/TMT_summarisation_methods.html","id":"summary","dir":"Articles","previous_headings":"Load required packages","what":"Summary","title":"TMT - comparing protein summarisation approaches","text":"sum/mean sensitive abundances highest intensity PSMs, likely accurately quantified. However, therefore also sensitive outlier values high abundance. robustSummary handles missing values therefore enables proteins quantified sensitive low intensity PSMs, may less accurately quantified. typical TMT datasets low missing values, sum/mean likely best approach. missing values, consider using robust instead.","code":"sessionInfo() #> R version 4.5.1 (2025-06-13) #> Platform: x86_64-pc-linux-gnu #> Running under: Ubuntu 24.04.2 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.26.so;  LAPACK version 3.12.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats4    stats     graphics  grDevices utils     datasets  methods   #> [8] base      #>  #> other attached packages: #>  [1] dplyr_1.1.4                 tidyr_1.3.1                 #>  [3] ggplot2_3.5.2               biomasslmb_0.0.4            #>  [5] QFeatures_1.18.0            MultiAssayExperiment_1.34.0 #>  [7] SummarizedExperiment_1.38.1 Biobase_2.68.0              #>  [9] GenomicRanges_1.60.0        GenomeInfoDb_1.44.0         #> [11] IRanges_2.42.0              S4Vectors_0.46.0            #> [13] BiocGenerics_0.54.0         generics_0.1.4              #> [15] MatrixGenerics_1.20.0       matrixStats_1.5.0           #>  #> loaded via a namespace (and not attached): #>  [1] tidyselect_1.2.1        farver_2.1.2            blob_1.2.4              #>  [4] Biostrings_2.76.0       fastmap_1.2.0           lazyeval_0.2.2          #>  [7] XML_3.99-0.18           digest_0.6.37           lifecycle_1.0.4         #> [10] cluster_2.1.8.1         ProtGenerics_1.40.0     survival_3.8-3          #> [13] KEGGREST_1.48.1         RSQLite_2.4.1           magrittr_2.0.3          #> [16] genefilter_1.90.0       compiler_4.5.1          rlang_1.1.6             #> [19] sass_0.4.10             tools_4.5.1             igraph_2.1.4            #> [22] yaml_2.3.10             corrplot_0.95           knitr_1.50              #> [25] labeling_0.4.3          S4Arrays_1.8.1          htmlwidgets_1.6.4       #> [28] bit_4.6.0               DelayedArray_0.34.1     plyr_1.8.9              #> [31] RColorBrewer_1.1-3      abind_1.4-8             withr_3.0.2             #> [34] purrr_1.0.4             desc_1.4.3              grid_4.5.1              #> [37] xtable_1.8-4            scales_1.4.0            MASS_7.3-65             #> [40] cli_3.6.5               rmarkdown_2.29          crayon_1.5.3            #> [43] ragg_1.4.0              robustbase_0.99-4-1     httr_1.4.7              #> [46] reshape2_1.4.4          BiocBaseUtils_1.10.0    DBI_1.2.3               #> [49] cachem_1.1.0            stringr_1.5.1           splines_4.5.1           #> [52] AnnotationDbi_1.70.0    AnnotationFilter_1.32.0 XVector_0.48.0          #> [55] vctrs_0.6.5             Matrix_1.7-3            jsonlite_2.0.0          #> [58] naniar_1.1.0            visdat_0.6.0            bit64_4.6.0-1           #> [61] clue_0.3-66             systemfonts_1.2.3       jquerylib_0.1.4         #> [64] annotate_1.86.1         glue_1.8.0              DEoptimR_1.1-3-1        #> [67] pkgdown_2.1.3           uniprotREST_1.0.0       stringi_1.8.7           #> [70] gtable_0.3.6            UCSC.utils_1.4.0        tibble_3.3.0            #> [73] pillar_1.11.0           htmltools_0.5.8.1       GenomeInfoDbData_1.2.14 #> [76] R6_2.6.1                textshaping_1.0.1       evaluate_1.0.4          #> [79] lattice_0.22-7          backports_1.5.0         png_0.1-8               #> [82] memoise_2.0.1           bslib_0.9.0             Rcpp_1.1.0              #> [85] checkmate_2.3.2         SparseArray_1.8.0       xfun_0.52               #> [88] MsCoreUtils_1.20.0      fs_1.6.6                pkgconfig_2.0.3"},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Tom Smith. Author, maintainer.","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Smith T (2025). biomasslmb: BioMass LMB Proteomics Data Analysis Utility Functions. R package version 0.0.4, https://lmb-mass-spec-compbio.github.io/biomasslmb/.","code":"@Manual{,   title = {biomasslmb: BioMass LMB Proteomics Data Analysis Utility Functions},   author = {Tom Smith},   year = {2025},   note = {R package version 0.0.4},   url = {https://lmb-mass-spec-compbio.github.io/biomasslmb/}, }"},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/index.html","id":"biomasslmb","dir":"","previous_headings":"","what":"BioMass LMB Proteomics Data Analysis Utility Functions","title":"BioMass LMB Proteomics Data Analysis Utility Functions","text":"biomasslmb R package provide functions pipe together proteomics data analysis pipelines using QFeatures data generated Biological Mass Spectrometry Proteomics Facility MRC Laboratory Molecular Biology. Alongside general purpose functions routine proteomics data analyses, package also provides esoteric /opinionated functionality bespoke proteomics data analysis. Much initial code re-working camprotR co-developed Charlotte Dawson (https://github.com/csdaw) (https://github.com/tomsmithCGAT) designed work MSnbase. Hence ’ve reworked code separate package work QFeatures simplify issues backward compatibility. Thank Charlotte code lifted camprotR part writing!","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"BioMass LMB Proteomics Data Analysis Utility Functions","text":"can install development version biomasslmb like :","code":"remotes::install_github(\"lmb-mass-spec-compbio/biomasslmb\", dependencies = TRUE)"},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/index.html","id":"examples","dir":"","previous_headings":"","what":"Examples","title":"BioMass LMB Proteomics Data Analysis Utility Functions","text":"See vignettes examples use package. vignettes also available via ‘articles’ tab .","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/add_filter_ptm_pos_rowdata_mq.html","id":null,"dir":"Reference","previous_headings":"","what":"Add rowData columns with positions of PTMs with respect to peptide sequence — add_filter_ptm_pos_rowdata_mq","title":"Add rowData columns with positions of PTMs with respect to peptide sequence — add_filter_ptm_pos_rowdata_mq","text":"function takes SummarizedExperiment object evidence.txt output MaxQuant adds rowData columns describe PTMs present peptide positions within peptide' '","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/add_filter_ptm_pos_rowdata_mq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add rowData columns with positions of PTMs with respect to peptide sequence — add_filter_ptm_pos_rowdata_mq","text":"","code":"add_filter_ptm_pos_rowdata_mq(   obj,   ptms_to_retain = c(\"Phospho (STY)\"),   prob_col = \"Phospho..STY..Probabilities\",   min_prob = 0.501,   filter_pep_by_prob = TRUE,   verbose = TRUE )"},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/add_filter_ptm_pos_rowdata_mq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add rowData columns with positions of PTMs with respect to peptide sequence — add_filter_ptm_pos_rowdata_mq","text":"obj SummarizedExperiment. Proteomics dataset ptms_to_retain character vector PTMs retain. Inspect values rowData(obj)$Modified.sequence get correct PTM name ptm_encoding_pos character name vector describing whether modifification comes (-1) (1) amino acid Modified.sequence column values.","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/add_filter_ptm_pos_rowdata_mq.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add rowData columns with positions of PTMs with respect to peptide sequence — add_filter_ptm_pos_rowdata_mq","text":"Returns SummarizedExperiment additional column RowData describing position PTMs respect peptide sequence","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/add_gene_long_protein_name_pd.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract the gene name and long-form protein name from the master protein descriptions column — add_gene_long_protein_name_pd","title":"Extract the gene name and long-form protein name from the master protein descriptions column — add_gene_long_protein_name_pd","text":"function extracts gene name long-form protein name master protein descriptions column output Proteome Discoverer DDA. assumes master protein description column format (.) . GN=(.) PE., first group long format protein name second group gene name. gene name included, empty string returned example expected input column : Serum albumin OS=Bos taurus GN=ALB PE=1 SV=4","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/add_gene_long_protein_name_pd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract the gene name and long-form protein name from the master protein descriptions column — add_gene_long_protein_name_pd","text":"","code":"add_gene_long_protein_name_pd(   obj,   master_protein_desc_col = \"Master.Protein.Descriptions\",   gene_name_out_col = \"Master.Protein.gene.name\",   long_protein_name_out_col = \"Master.Protein.long.name\" )"},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/add_gene_long_protein_name_pd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract the gene name and long-form protein name from the master protein descriptions column — add_gene_long_protein_name_pd","text":"obj SummarisedExperiment containing output Proteome Discoverer master_protein_desc_col string. Name column containing master proteins descriptions. gene_name_out_col string. Name output column containing gene names long_protein_name_out_col string. Name output column containing long format protein names","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/add_gene_long_protein_name_pd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract the gene name and long-form protein name from the master protein descriptions column — add_gene_long_protein_name_pd","text":"Returns QFeatures filtered Proteome Discoverer output.","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/add_independent_filtering_padj.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform independent filtering to threshold the over-representation testing on the number of features in each category to limit the multiple testing burden — add_independent_filtering_padj","title":"Perform independent filtering to threshold the over-representation testing on the number of features in each category to limit the multiple testing burden — add_independent_filtering_padj","text":"testing enrichment feature annotations, frequently test thousands annotations simultaneously, increases multiple testing burden considerably. Given many annotations annotated features, little power detect -representation. Inspired DESeq2, turn inspired Bourgon, Gentleman, Huber (2010), function applies principle 'independent filtering' threshold minimum number features per annotation (background) optimally limit multiple testing burden. statistically valid filtering criteria (number features per annotation) statistically independent test statistic null hypothesis. independent filtering works filtering criteria correlated test statistic alternative hypothesis. justification discussion independent filtering, see Bourgon, Gentleman, Huber (2010) DESeq2 vignette. code function largely lifted DEseq:::pvalueAdjustment Please cite Bourgon, Gentleman, Huber (2010) using function.","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/add_independent_filtering_padj.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform independent filtering to threshold the over-representation testing on the number of features in each category to limit the multiple testing burden — add_independent_filtering_padj","text":"","code":"add_independent_filtering_padj(   obj,   alpha = 0.1,   theta = seq(0, 1, 0.01),   p_value_col = \"over_represented_pvalue\",   filter_col = \"numInCat\",   plot = TRUE )"},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/add_independent_filtering_padj.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform independent filtering to threshold the over-representation testing on the number of features in each category to limit the multiple testing burden — add_independent_filtering_padj","text":"obj data.frame containing goseq results generated get_enriched_go See example. alpha numeric alpha value use rejection null hypothesis. Note used optimising threshold alternative value alpha can used downstream theta numeric vector thresholds (fractions data remove) p_value_col character Column p-values filter_col character Column filtering criteria values plot logical Plot relationship ","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/add_independent_filtering_padj.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform independent filtering to threshold the over-representation testing on the number of features in each category to limit the multiple testing burden — add_independent_filtering_padj","text":"Returns data.frame added column denoting optimised adjusted p-value ('padj_if')","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/add_peptide_positions.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a column describing the position of the peptide sequence with respect to the protein — add_peptide_positions","title":"Add a column describing the position of the peptide sequence with respect to the protein — add_peptide_positions","text":"Identify position peptide sequence protein. peptide position undefined (NA) : peptide sequence multiple master proteins protein exist proteome fasta peptide repeated protein sequence. peptide_position_info column details peptide positions columns NA","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/add_peptide_positions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a column describing the position of the peptide sequence with respect to the protein — add_peptide_positions","text":"","code":"add_peptide_positions(   obj,   proteome_fasta,   master_protein_col = \"Master.Protein.Accessions\",   protein_col_split = \"; \",   sequence_col = \"Sequence\" )"},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/add_peptide_positions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a column describing the position of the peptide sequence with respect to the protein — add_peptide_positions","text":"obj SummarizedExperiment PD output PSM/peptide level proteome_fasta character Filepath proteome fasta master_protein_col character Column name master protein protein_col_split character Delimiter multiple proteins master_protein_col sequence_col character Column name peptide sequence","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/add_peptide_positions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add a column describing the position of the peptide sequence with respect to the protein — add_peptide_positions","text":"SummarizedExperiment extra row columns detailing peptide position","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/add_peptide_positions_from_cleavage.html","id":null,"dir":"Reference","previous_headings":"","what":"Add peptide positions with respect to the protein — add_peptide_positions_from_cleavage","title":"Add peptide positions with respect to the protein — add_peptide_positions_from_cleavage","text":"function takes SummarizedExperiment object adds rowData columns describe positions peptides within proteins', taking account possible peptides according digestion enzyme used.","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/add_peptide_positions_from_cleavage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add peptide positions with respect to the protein — add_peptide_positions_from_cleavage","text":"","code":"add_peptide_positions_from_cleavage(   obj,   proteome_fasta,   digest_enzyme = \"trypsin-simple\",   missed_cleavages = c(0, 1, 2),   master_protein_col = \"Leading.razor.protein\",   sequence_col = \"Sequence\" )"},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/add_peptide_positions_from_cleavage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add peptide positions with respect to the protein — add_peptide_positions_from_cleavage","text":"obj SummarizedExperiment. Proteomics dataset proteome_fasta character filepath fasta protein sequences digest_enzyme = \"trypsin-simple\", digest_enzyme character. Enzyme used. See ?cleaver::cleave missed_cleavages numeric. Vector allowed number missed cleavages master_protein_col character. Name column containing master proteins sequence_col character. Name column containing peptide sequences","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/add_peptide_positions_from_cleavage.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add peptide positions with respect to the protein — add_peptide_positions_from_cleavage","text":"Returns SummarizedExperiment additional column RowData describing position PTMs respect protein","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/add_ptm_pos_rowdata_mq.html","id":null,"dir":"Reference","previous_headings":"","what":"Add rowData columns with positions of PTMs with respect to peptide sequence — add_ptm_pos_rowdata_mq","title":"Add rowData columns with positions of PTMs with respect to peptide sequence — add_ptm_pos_rowdata_mq","text":"function takes SummarizedExperiment object evidence.txt output MaxQuant adds rowData columns describe PTMs present peptide positions within peptide' '","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/add_ptm_pos_rowdata_mq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add rowData columns with positions of PTMs with respect to peptide sequence — add_ptm_pos_rowdata_mq","text":"","code":"add_ptm_pos_rowdata_mq(   obj,   ptms_to_retain = c(\"p\", \"(ph)\", \"(ac)p\"),   ptm_encoding_pos = c(p = -1, `(ph)` = 1, `(ac)p` = -1, `(ox)` = 1),   verbose = TRUE )"},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/add_ptm_pos_rowdata_mq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add rowData columns with positions of PTMs with respect to peptide sequence — add_ptm_pos_rowdata_mq","text":"obj SummarizedExperiment. Proteomics dataset ptms_to_retain character vector PTMs retain. Inspect values rowData(obj)$Modified.sequence get correct PTM name ptm_encoding_pos character name vector describing whether modifification comes (-1) (1) amino acid Modified.sequence column values.","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/add_ptm_pos_rowdata_mq.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add rowData columns with positions of PTMs with respect to peptide sequence — add_ptm_pos_rowdata_mq","text":"Returns SummarizedExperiment additional column RowData describing position PTMs respect peptide sequence","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/add_ptm_positions.html","id":null,"dir":"Reference","previous_headings":"","what":"Add rowData columns with details of PTMs positions — add_ptm_positions","title":"Add rowData columns with details of PTMs positions — add_ptm_positions","text":"function takes SummarizedExperiment object ...","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/add_ptm_positions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add rowData columns with details of PTMs positions — add_ptm_positions","text":"","code":"add_ptm_positions(   obj,   proteome_fasta,   digest_enzyme = \"trypsin-simple\",   missed_cleavages = c(0, 1, 2),   master_protein_col = \"Leading.razor.protein\",   sequence_col = \"Sequence\" )"},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/add_ptm_positions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add rowData columns with details of PTMs positions — add_ptm_positions","text":"obj SummarizedExperiment. Proteomics dataset proteome_fasta character filepath fasta protein sequences digest_enzyme = \"trypsin-simple\", digest_enzyme character. Enzyme used. See ?cleaver::cleave missed_cleavages numeric. Vector allowed number missed cleavages master_protein_col character. Name column containing master proteins sequence_col character. Name column containing peptide sequences","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/add_ptm_positions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add rowData columns with details of PTMs positions — add_ptm_positions","text":"Returns SummarizedExperiment additional column RowData describing position PTMs respect protein","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/add_tm_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Add transmembrane domain details — add_tm_info","title":"Add transmembrane domain details — add_tm_info","text":"Parse Transmembrane column output query_protein_tm_topology add columns decscribing transmembrane domains.","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/add_tm_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add transmembrane domain details — add_tm_info","text":"","code":"add_tm_info(query_result)"},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/add_tm_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add transmembrane domain details — add_tm_info","text":"query_resul data.frame output query_protein_tm_topology","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/add_tm_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add transmembrane domain details — add_tm_info","text":"data.frame object.","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/add_tm_info.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add transmembrane domain details — add_tm_info","text":"","code":"uniprotIDs <- c('O76024', 'Q03135', 'Q96T23') query_result <- query_protein_tm_topology(uniprotIDs) query_result_parsed <- add_tm_info(query_result)"},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/add_topology_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Add topology details — add_topology_info","title":"Add topology details — add_topology_info","text":"Parse Topological.domain column output query_protein_tm_topology add columns decscribing topology","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/add_topology_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add topology details — add_topology_info","text":"","code":"add_topology_info(result)"},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/add_topology_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add topology details — add_topology_info","text":"query_resul data.frame output query_protein_tm_topology","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/add_topology_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add topology details — add_topology_info","text":"data.frame object.","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/add_topology_info.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add topology details — add_topology_info","text":"","code":"uniprotIDs <- c('O76024', 'Q03135', 'Q96T23') query_result <- query_protein_tm_topology(uniprotIDs) query_result_parsed <- add_topology_info(query_result)"},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/append_fasta.html","id":null,"dir":"Reference","previous_headings":"","what":"Append sequences to end of a FASTA — append_fasta","title":"Append sequences to end of a FASTA — append_fasta","text":"function used add sequences FASTA file (file1) onto end another FASTA file (file2). file2 cRAP database, can optionally add cRAP numbers headers file1, starting desired number e.g. cRAP127.","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/append_fasta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Append sequences to end of a FASTA — append_fasta","text":"","code":"append_fasta(file1, file2, is_crap = FALSE, crap_start = 1)"},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/append_fasta.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Append sequences to end of a FASTA — append_fasta","text":"file1 character, file path FASTA append file2 character, file path FASTA append is_crap logical, cRAP numbers e.g. cRAP001, cRAP002, etc. added sequence headers file1? Default FALSE crap_start numeric, number cRAP00x start ? Default 1.","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/append_fasta.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Append sequences to end of a FASTA — append_fasta","text":"Overwrites FASTA file2 sequences added end.","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/append_fasta.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Append sequences to end of a FASTA — append_fasta","text":"","code":"# Add some commercial protease sequences onto the end of CCP cRAP FASTA if (FALSE) { # \\dontrun{ append_fasta(   file1 = \"commercial-proteases.fasta\",   file2 = \"2021-01_CCP_cRAP.fasta\",   is_crap = TRUE,   crap_start = 128 ) } # }"},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/biomasslmb-package.html","id":null,"dir":"Reference","previous_headings":"","what":"biomasslmb: BioMass LMB Proteomics Data Analysis Utility Functions — biomasslmb-package","title":"biomasslmb: BioMass LMB Proteomics Data Analysis Utility Functions — biomasslmb-package","text":"Utility functions piping together quantitative proteomics data analysis. Designed projects conducted Biological Mass Spectrometry Proteomics Facility MRC Laboratory Molecular Biology.","code":""},{"path":[]},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/biomasslmb-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"biomasslmb: BioMass LMB Proteomics Data Analysis Utility Functions — biomasslmb-package","text":"Maintainer: Tom Smith tsmith@mrc-lmb.cam.ac.uk (ORCID)","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/center_normalise_to_ref.html","id":null,"dir":"Reference","previous_headings":"","what":"Center-median normalise the expression matrix in an MSnSet using medians from a reference dataset — center_normalise_to_ref","title":"Center-median normalise the expression matrix in an MSnSet using medians from a reference dataset — center_normalise_to_ref","text":"Center-median normalisation simple normalisation method appropriate relative abundance proteomics isobaric tagging. can achieved QFeatures::normalize(method='diff.median'). However, experimental designs, normalisation medians another dataset. example, PTM studies, one may wish isobaric tag samples, pool, PTM-enriched, enriched sample quantified separate run non-enriched (total) sample. case, may make sense center-median normalise PTM-enriched samples using median total samaples.","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/center_normalise_to_ref.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Center-median normalise the expression matrix in an MSnSet using medians from a reference dataset — center_normalise_to_ref","text":"","code":"center_normalise_to_ref(   obj,   medians,   center_to_zero = FALSE,   on_log_scale = FALSE )"},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/center_normalise_to_ref.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Center-median normalise the expression matrix in an MSnSet using medians from a reference dataset — center_normalise_to_ref","text":"obj SummarisedExperiment medians vector, numeric. Sample medians reference dataset center_to_zero logical. Centre data range zero. FALSE, normalisation retains original data range. on_log_scale logical. Input data log-transformed","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/center_normalise_to_ref.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Center-median normalise the expression matrix in an MSnSet using medians from a reference dataset — center_normalise_to_ref","text":"Returns SummarisedExperiment assay data column center-median normalised","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/check_uniprot_release.html","id":null,"dir":"Reference","previous_headings":"","what":"Check the current UniProt release — check_uniprot_release","title":"Check the current UniProt release — check_uniprot_release","text":"UniProt releases published approximately every 8 weeks. function checks current UniProt release .","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/check_uniprot_release.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check the current UniProt release — check_uniprot_release","text":"","code":"check_uniprot_release()"},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/check_uniprot_release.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check the current UniProt release — check_uniprot_release","text":"Returns character, current release number format YYYY_XX YYYY calendar year XX 2-digit number incremented release given year, e.g. 2010_01, 2010_02, etc.","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/check_uniprot_release.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check the current UniProt release — check_uniprot_release","text":"","code":"# print release number to console check_uniprot_release() #> [1] \"2025_03\"  # save release number and use in e.g. a file name rls <- check_uniprot_release()  paste0(\"folder/filename_\", rls, \".fasta\") #> [1] \"folder/filename_2025_03.fasta\""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/create_long_form_imputed_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Create long format data with column defining if quantification value is imputed — create_long_form_imputed_data","title":"Create long format data with column defining if quantification value is imputed — create_long_form_imputed_data","text":"function takes Qfeatures object unimputed data imputed data separate assays creates long format data.frame column called .imputed describes whether quantification value imputed","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/create_long_form_imputed_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create long format data with column defining if quantification value is imputed — create_long_form_imputed_data","text":"","code":"create_long_form_imputed_data(   obj,   i_unimputed,   i_imputed,   column_variables,   row_variables )"},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/create_long_form_imputed_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create long format data with column defining if quantification value is imputed — create_long_form_imputed_data","text":"obj QFeatures. Proteomics dataset i_unimputed string. Index SummarizedExperiment data without imputation i_imputed string. Index SummarizedExperiment data imputation column_variables character vector. Variables colData(obj) include row_variables character vector. Variables rowData(obj) include","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/create_long_form_imputed_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create long format data with column defining if quantification value is imputed — create_long_form_imputed_data","text":"Returns data.frame quantification data long form including .imputed column","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/determine_ancestor_function.html","id":null,"dir":"Reference","previous_headings":"","what":"Determine GO ancestor object — determine_ancestor_function","title":"Determine GO ancestor object — determine_ancestor_function","text":"single GO term, get ontology return correct ancestor mapping object ontology.","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/determine_ancestor_function.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Determine GO ancestor object — determine_ancestor_function","text":"","code":"determine_ancestor_function(term, ontology)"},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/determine_ancestor_function.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Determine GO ancestor object — determine_ancestor_function","text":"term string. single GO.ID. ontology string. single ontology, one : BP, MF, CC.","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/determine_ancestor_function.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Determine GO ancestor object — determine_ancestor_function","text":"Returns AnnDbBimap object maps GO terms (BP, MF, CC) ancestor terms. GO term mapped vector ancestor GO terms.","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/determine_offspring_function.html","id":null,"dir":"Reference","previous_headings":"","what":"Determine GO offspring object — determine_offspring_function","title":"Determine GO offspring object — determine_offspring_function","text":"single GO term, get ontology return correct offpsring mapping object ontology.","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/determine_offspring_function.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Determine GO offspring object — determine_offspring_function","text":"","code":"determine_offspring_function(term, ontology)"},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/determine_offspring_function.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Determine GO offspring object — determine_offspring_function","text":"term string. single GO.ID. ontology string. single ontology, one : BP, MF, CC.","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/determine_offspring_function.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Determine GO offspring object — determine_offspring_function","text":"Returns AnnDbBimap object maps GO terms (BP, MF, CC) offspring terms. GO term mapped vector offsrping GO terms.","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/dia_qf.html","id":null,"dir":"Reference","previous_headings":"","what":"DIA data — dia_qf","title":"DIA data — dia_qf","text":"Qfeature containing DIA data processed LFQ-DIA QC Peptide-level quantification summarisation protein-level abundance vignette","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/dia_qf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DIA data — dia_qf","text":"","code":"dia_qf"},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/dia_qf.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"DIA data — dia_qf","text":"object class QFeatures length 5.","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/estimate_overrep.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate effect size of over-representation — estimate_overrep","title":"Estimate effect size of over-representation — estimate_overrep","text":"crude function estimate effect size -representation .e. know feature -represented, want estimate effect size/-represented . function typically run get_enriched_go work output goseq, regardless whether functional enrichment tested GO terms.","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/estimate_overrep.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate effect size of over-representation — estimate_overrep","text":"","code":"estimate_overrep(obj, pwf, gene2cat)"},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/estimate_overrep.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate effect size of over-representation — estimate_overrep","text":"obj data.frame containing goseq results generated get_enriched_go goseq. pwf data.frame used get_enriched_go goseq. gene2cat data.frame used get_enriched_go goseq.","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/estimate_overrep.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate effect size of over-representation — estimate_overrep","text":"Returns obj extra column added called adj_overrep. column calculated GO term : numDEInCat / numInCat / (avgTermWeight / avgNonTermWeight) / (totalDEFeatures / totalFeatures) : numDEInCat number differentially expressed genes (aka. proteins) assigned GO term. numInCat total number genes (aka. proteins) annotated GO term. avgTermWeight average pwf$pwf value differentially expressed genes assigned GO term. avgNonTermWeight average pwf$pwf genes supplied pwf. totalDEFeatures total number differentially expressed genes indicated pwf. totalFeatures total number genes indicated pwf, .e. number rows.","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/expand_terms.html","id":null,"dir":"Reference","previous_headings":"","what":"Expand data.frame GO terms — expand_terms","title":"Expand data.frame GO terms — expand_terms","text":"Input data.frame GO terms annotated single protein single column. Output new data.frame GO terms protein (annotated ancestor).","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/expand_terms.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Expand data.frame GO terms — expand_terms","text":"","code":"expand_terms(go_df, go_col, go2Ancestor)"},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/expand_terms.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Expand data.frame GO terms — expand_terms","text":"go_df data.frame single protein single column row single GO term. go_col variable. Name column data.frame contains GO terms. go2Ancestor named list. Returned get_all_mappings. Names == GO terms values == vectors containing ancestor GO terms particular input GO term.","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/expand_terms.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Expand data.frame GO terms — expand_terms","text":"Returns data.frame containing ancestor GO terms single protein.","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/filter_TMT_PSMs.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter a PSM-level summarizedExperiment to remove low quality PSMs — filter_TMT_PSMs","title":"Filter a PSM-level summarizedExperiment to remove low quality PSMs — filter_TMT_PSMs","text":"Filter PSMs TMT quantification remove following: Missing values (NA) tags Interference/co-isolation set value (default=100, e.g filtering) Signal:noise ratio set value (default=0, e.g filtering) Quan.Info empty (”) PSM.Ambiguity 'Selected' 'Unambiguous'","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/filter_TMT_PSMs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter a PSM-level summarizedExperiment to remove low quality PSMs — filter_TMT_PSMs","text":"","code":"filter_TMT_PSMs(   obj,   inter_thresh = 100,   sn_thresh = 0,   master_protein_col = \"Master.Protein.Accessions\",   inter_col = \"Isolation.Interference.in.Percent\",   sn_col = \"Average.Reporter.SN\",   from_PD = TRUE,   verbose = TRUE )"},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/filter_TMT_PSMs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter a PSM-level summarizedExperiment to remove low quality PSMs — filter_TMT_PSMs","text":"obj summarizedExperiment. contain PSMs-level TMT quantification inter_thresh numeric. Maximum allowed interference/co-isolation sn_thresh numeric. Minimum allowed average signal:noise master_protein_col string. Name column containing master proteins. inter_col string. Name column containing interference value. sn_col string. Name column containing signal:noise value. from_PD logical. Input ProteomeDiscover. set, filter using Quan.Info PSM.Ambiguity columns. Default TRUE verbose logical. Default TRUE, use verbose output messages.","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/filter_TMT_PSMs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter a PSM-level summarizedExperiment to remove low quality PSMs — filter_TMT_PSMs","text":"Returns summarizedExperiment filtered PSMs.","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/filter_by_protein_fdr.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter to remove peptides from proteins failing the protein FDR threshold — filter_by_protein_fdr","title":"Filter to remove peptides from proteins failing the protein FDR threshold — filter_by_protein_fdr","text":"function filters content summarised experiment based separate file detailing proteins passing FDR confidence threshold function used filter peptides retain proteins passing FDR threshold","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/filter_by_protein_fdr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter to remove peptides from proteins failing the protein FDR threshold — filter_by_protein_fdr","text":"","code":"filter_by_protein_fdr(   obj,   protein_fdr_filename,   protein_col_peptide = \"Master.Protein.Accessions\",   protein_col_protein = \"Accession\",   protein_FDR_col = \"Protein.FDR.Confidence.Combined\" )"},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/filter_by_protein_fdr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter to remove peptides from proteins failing the protein FDR threshold — filter_by_protein_fdr","text":"obj SummarisedExperiment containing peptide-level output Proteome Discoverer. protein_fdr_filename string. Filepath protein-level output Proteome Discoverer protein_col_peptide string. Name column containing master proteins peptide-level obj protein_col_protein string. Name column containing master proteins protein-level protein_fdr_filename protein_FDR_col string. Name column containing FDR information protein-level protein_fdr_filename","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/filter_by_protein_fdr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter to remove peptides from proteins failing the protein FDR threshold — filter_by_protein_fdr","text":"Returns SummarisedExperiment filtered Proteome Discoverer output.","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/filter_features_diann.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter DIA-NN output — filter_features_diann","title":"Filter DIA-NN output — filter_features_diann","text":"function filters precursor .txt file DIA-NN, based various criteria: Remove features without master protein (Protein.Group column) Remove features without unique master protein Remove features matching contaminant protein Remove features matching protein associated contaminant protein (see ) Remove features without quantification values","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/filter_features_diann.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter DIA-NN output — filter_features_diann","text":"","code":"filter_features_diann(   obj,   master_protein_col = \"Protein.Group\",   protein_col = \"Protein.Ids\",   unique_master = TRUE,   filter_contaminant = TRUE,   contaminant_proteins = NULL,   filter_associated_contaminant = TRUE,   remove_no_quant = TRUE,   cont_string = \"Cont_\" )"},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/filter_features_diann.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter DIA-NN output — filter_features_diann","text":"obj SummarisedExperiment containing output Proteome Discoverer. Use readQFeatures read .txt file master_protein_col string. Name column containing master proteins. protein_col string. Name column containing protein matches. unique_master logical. Filter features without unique master protein. filter_contaminant logical. Filter features match contaminant protein. contaminant_proteins character vector. protein IDs form contaminant proteins filter_associated_contaminant logical. Filter features match contaminant associated protein. remove_no_quant logical. Remove features quantification cont_string string. string search contaminants","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/filter_features_diann.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter DIA-NN output — filter_features_diann","text":"Returns SummarisedExperiment filtered Proteome Discoverer output.","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/filter_features_diann.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Filter DIA-NN output — filter_features_diann","text":"Associated contaminant proteins proteins least one feature shared contaminant protein. observed contaminant fasta files often contain possible contaminant proteins e.g. features can assigned keratin provided contaminant database. example , using filter_associated_contaminant = TRUE filter f2 f3 addition f1, regardless value Master.Protein.Accession column.","code":"feature  Protein.Accessions         Master.Protein.Accessions f1       protein1, protein2, contaminant,  protein1, f2       protein1, protein3         protein3, f3       protein2                   protein2"},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/filter_features_mq_dda.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter MaxQuant DDA output — filter_features_mq_dda","title":"Filter MaxQuant DDA output — filter_features_mq_dda","text":"function filters output .txt files (peptide groups PSMs) Proteome Discoverer DDA, based various criteria: Remove features without master protein Remove features without unique master protein  (.e. Number..Protein.Groups == 1) Remove features matching contaminant protein Remove features matching protein associated contaminant protein (see ) Remove features without quantification values","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/filter_features_mq_dda.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter MaxQuant DDA output — filter_features_mq_dda","text":"","code":"filter_features_mq_dda(   obj,   master_protein_col = \"Leading.razor.protein\",   protein_col = \"Proteins\",   unique_master = TRUE,   filter_contaminant = TRUE,   contaminant_proteins = NULL,   filter_associated_contaminant = TRUE,   remove_no_quant = TRUE )"},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/filter_features_mq_dda.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter MaxQuant DDA output — filter_features_mq_dda","text":"obj SummarisedExperiment containing output MaxQuant. Use readQFeatures read .txt file master_protein_col string. Name column containing master proteins. protein_col string. Name column containing protein matches. unique_master logical. Filter features without unique master protein. filter_contaminant logical. Filter features match contaminant protein. contaminant_proteins character vector. protein IDs form contaminant proteins filter_associated_contaminant logical. Filter features match contaminant associated protein. remove_no_quant logical. Remove features quantification","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/filter_features_mq_dda.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter MaxQuant DDA output — filter_features_mq_dda","text":"Returns SummarisedExperiment filtered MaxQuant output.","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/filter_features_mq_dda.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Filter MaxQuant DDA output — filter_features_mq_dda","text":"Associated contaminant proteins proteins least one feature shared contaminant protein. observed contaminant fasta files often contain possible contaminant proteins e.g. features can assigned keratin provided contaminant database. example , using filter_associated_contaminant = TRUE filter f2 f3 addition f1, regardless value Leading.razor.protein column.","code":"feature  Proteins                          Leading.razor.protein f1       protein1, protein2, contaminant,  protein1 f2       protein1, protein3                protein3 f3       protein2                          protein2"},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/filter_features_pd_dda.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter Proteome Discoverer DDA output — filter_features_pd_dda","title":"Filter Proteome Discoverer DDA output — filter_features_pd_dda","text":"function filters output .txt files (peptide groups PSMs) Proteome Discoverer DDA, based various criteria: Remove features without master protein Remove features without unique master protein  (.e. Number..Protein.Groups == 1) Remove features matching contaminant protein Remove features matching protein associated contaminant protein (see ) Remove features without quantification values","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/filter_features_pd_dda.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter Proteome Discoverer DDA output — filter_features_pd_dda","text":"","code":"filter_features_pd_dda(   obj,   master_protein_col = \"Master.Protein.Accessions\",   protein_col = \"Protein.Accessions\",   unique_master = TRUE,   filter_contaminant = TRUE,   contaminant_proteins = NULL,   crap_proteins = NULL,   filter_associated_contaminant = TRUE,   remove_no_quant = TRUE,   cont_string = \"Cont_\" )"},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/filter_features_pd_dda.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter Proteome Discoverer DDA output — filter_features_pd_dda","text":"obj SummarisedExperiment containing output Proteome Discoverer. Use readQFeatures read .txt file master_protein_col string. Name column containing master proteins. protein_col string. Name column containing protein matches. unique_master logical. Filter features without unique master protein. filter_contaminant logical. Filter features match contaminant protein. contaminant_proteins character vector. protein IDs form contaminant proteins crap_proteins character vector. contaminant_proteins. Available backwards compatibility. Default NULL. contaminant_proteins crap_proteins set, error thrown. filter_associated_contaminant logical. Filter features match contaminant associated protein. remove_no_quant logical. Remove features quantification cont_string string. string search contaminants","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/filter_features_pd_dda.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter Proteome Discoverer DDA output — filter_features_pd_dda","text":"Returns SummarisedExperiment filtered Proteome Discoverer output.","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/filter_features_pd_dda.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Filter Proteome Discoverer DDA output — filter_features_pd_dda","text":"Associated contaminant proteins proteins least one feature shared contaminant protein. observed contaminant fasta files often contain possible contaminant proteins e.g. features can assigned keratin provided contaminant database. example , using filter_associated_contaminant = TRUE filter f2 f3 addition f1, regardless value Master.Protein.Accession column.","code":"feature  Protein.Accessions         Master.Protein.Accessions f1       protein1, protein2, contaminant,  protein1, f2       protein1, protein3         protein3, f3       protein2                   protein2"},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/filter_features_pd_dda.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Filter Proteome Discoverer DDA output — filter_features_pd_dda","text":"","code":"if (FALSE) { # \\dontrun{  #### PSMs.txt example #### # load PD PSMs.txt output tmt_qf <- readQFeatures(assayData = psm_tmt_total,  quantCols = 36:45,  name = \"psms_raw\")  # extract the UniProt accessions from the contaminant FASTA headers contaminant_accessions <- get_contaminant_fasta_accessions(contaminant_fasta_inf)  # filter the PSMs psm2 <- filter_features_pd_dda(   obj = tmt_qf[['psms_raw']],   master_protein_col = \"Master.Protein.Accessions\",   protein_col = \"Protein.Accessions\",   unique_master = TRUE,   TMT = TRUE,   filter_contaminant = TRUE,   contaminant_proteins = contaminant_accessions,   filter_associated_contaminant = TRUE )   } # }"},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/filter_features_per_protein.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove features which are assigned to a protein with too few supporting features in total — filter_features_per_protein","title":"Remove features which are assigned to a protein with too few supporting features in total — filter_features_per_protein","text":"summarisation PSM peptide protein, need minimum number finite values per protein per sample.","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/filter_features_per_protein.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove features which are assigned to a protein with too few supporting features in total — filter_features_per_protein","text":"","code":"filter_features_per_protein(   obj,   min_features,   master_protein_col = \"Master.Protein.Accessions\",   plot = FALSE )"},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/filter_features_per_protein.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove features which are assigned to a protein with too few supporting features in total — filter_features_per_protein","text":"obj SummarizedExperiment PSM peptide-level quantification min_features numeric Threshold minimum features per protein master_protein_col character Column name master protein plot Set TRUE plot histogram features per protein per sample","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/filter_features_per_protein.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove features which are assigned to a protein with too few supporting features in total — filter_features_per_protein","text":"SummarizedExperiment","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/filter_features_sn.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter Spectronaut output — filter_features_sn","title":"Filter Spectronaut output — filter_features_sn","text":"function filters precursor .txt file Spectronaut, based various criteria: Remove features without master protein (PG.ProteinAccessions column) Remove features without unique master protein Remove features matching contaminant protein Remove features without quantification values","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/filter_features_sn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter Spectronaut output — filter_features_sn","text":"","code":"filter_features_sn(   obj,   master_protein_col = \"PG.ProteinAccessions\",   unique_master = TRUE,   filter_contaminant = TRUE,   contaminant_proteins = NULL,   remove_no_quant = TRUE,   cont_string = \"Cont_\" )"},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/filter_features_sn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter Spectronaut output — filter_features_sn","text":"obj SummarisedExperiment containing output Proteome Discoverer. Use readQFeatures read .txt file master_protein_col string. Name column containing master proteins. unique_master logical. Filter features without unique master protein. filter_contaminant logical. Filter features match contaminant protein. contaminant_proteins character vector. protein IDs form contaminant proteins remove_no_quant logical. Remove features quantification cont_string string. string search contaminants","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/filter_features_sn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter Spectronaut output — filter_features_sn","text":"Returns SummarisedExperiment filtered Proteome Discoverer output.","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/filter_maxquant_ptm.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter PTM data from MaxQuant to retain those with a given PTM — filter_maxquant_ptm","title":"Filter PTM data from MaxQuant to retain those with a given PTM — filter_maxquant_ptm","text":"function takes Qfeatures object evidence.txt output MaxQuant filters retain peptides given PTM.","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/filter_maxquant_ptm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter PTM data from MaxQuant to retain those with a given PTM — filter_maxquant_ptm","text":"","code":"filter_maxquant_ptm(obj, i, ptm_prob_col = \"Phospho..STY..Probabilities\")"},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/filter_maxquant_ptm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter PTM data from MaxQuant to retain those with a given PTM — filter_maxquant_ptm","text":"obj QFeatures. Proteomics dataset string. Index SummarizedExperiment data without imputation ptm_prob_col character column name PTMs.","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/filter_maxquant_ptm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter PTM data from MaxQuant to retain those with a given PTM — filter_maxquant_ptm","text":"Returns SummarizedExperiment value PTM probability column empty","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/get_all_mappings.html","id":null,"dir":"Reference","previous_headings":"","what":"Get all mappings for GO terms — get_all_mappings","title":"Get all mappings for GO terms — get_all_mappings","text":"vector GO terms, obtain ancestor offspring terms.","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/get_all_mappings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get all mappings for GO terms — get_all_mappings","text":"","code":"get_all_mappings(go_ids, ontologies, verbose = TRUE, direction = \"ancestor\")"},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/get_all_mappings.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get all mappings for GO terms — get_all_mappings","text":"go_ids character vector. GO terms use format GO:1234567. ontologies named character vector. Names = go_ids values = ontologies e.g. BP, CC, MF. verbose logical. direction string Either \"ancestor\" \"offspring\".","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/get_all_mappings.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get all mappings for GO terms — get_all_mappings","text":"Returns named list character vectors. Names == GO terms values == vectors containing ancestor GO terms particular input GO term.","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/get_ancestor_go.html","id":null,"dir":"Reference","previous_headings":"","what":"Get all ancestor GO terms — get_ancestor_go","title":"Get all ancestor GO terms — get_ancestor_go","text":"Given data.frame column containing GO terms, function output data.frame ontologies GO terms, description, ancestor terms.","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/get_ancestor_go.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get all ancestor GO terms — get_ancestor_go","text":"","code":"get_ancestor_go(   go_df,   feature_col = \"UNIPROTKB\",   go_col = \"GO.ID\",   return_early_debug = FALSE,   verbose = TRUE )"},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/get_ancestor_go.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get all ancestor GO terms — get_ancestor_go","text":"go_df data.frame. Contains initial GO terms proteins interest columns == [feature_col, go_col]. feature_col string. Name column features, e.g. \"UNIPROTKB\". go_col string. Name column GO ids, e.g. \"GO.ID\". return_early_debug logical. Stop function early return list GO terms ancestor GO terms debugging purposes. verbose logical.","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/get_ancestor_go.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get all ancestor GO terms — get_ancestor_go","text":"Returns data.frame containing ancestor GO terms proteins plus GO term descriptions ontologies.","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/get_cat_palette.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a colour-blind friendly palette for categorical colour encoding — get_cat_palette","title":"Generate a colour-blind friendly palette for categorical colour encoding — get_cat_palette","text":"given number categories, identify suitable palette colours colour-blind friendly. Palettes derived http://mkweb.bcgsc.ca/colorblind/palettes.mhtml#page-container","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/get_cat_palette.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a colour-blind friendly palette for categorical colour encoding — get_cat_palette","text":"","code":"get_cat_palette(n)"},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/get_cat_palette.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a colour-blind friendly palette for categorical colour encoding — get_cat_palette","text":"n numeric. number colours required.","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/get_cat_palette.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a colour-blind friendly palette for categorical colour encoding — get_cat_palette","text":"Returns character Hex codes colour palette.","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/get_crap_fasta_accessions.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract the contaminants protein accessions from a cRAP fasta file — get_crap_fasta_accessions","title":"Extract the contaminants protein accessions from a cRAP fasta file — get_crap_fasta_accessions","text":"Extract contaminants protein accessions cRAP fasta file","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/get_crap_fasta_accessions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract the contaminants protein accessions from a cRAP fasta file — get_crap_fasta_accessions","text":"","code":"get_crap_fasta_accessions(cont_fasta_inf)"},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/get_crap_fasta_accessions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract the contaminants protein accessions from a cRAP fasta file — get_crap_fasta_accessions","text":"cont_fasta_inf character Filepath contaminants fasta","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/get_crap_fasta_accessions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract the contaminants protein accessions from a cRAP fasta file — get_crap_fasta_accessions","text":"Returns list contaminant IDs","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/get_enriched_go.html","id":null,"dir":"Reference","previous_headings":"","what":"GO term enrichment using goseq — get_enriched_go","title":"GO term enrichment using goseq — get_enriched_go","text":"wrapper function around goseq perform GO term enrichment analysis. See goseq documentation details. pwf can made using nullp. /underrepresented p-values automatically adjusted using method = \"BH\". gene2cat provided function default using Homo sapiens genome hg19 expect Ensembl gene IDs used construct pwf input.","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/get_enriched_go.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"GO term enrichment using goseq — get_enriched_go","text":"","code":"get_enriched_go(   pwf,   gene2cat = NULL,   ...,   shorten_term = TRUE,   shorten_lims = c(1L, 30L) )"},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/get_enriched_go.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"GO term enrichment using goseq — get_enriched_go","text":"pwf data.frame 3 columns (DEgenes = logical, bias.data = numeric/integer, pwf = numeric) row names (usually UniProt accessions, Ensembl gene IDs similar). Typically constructed using nullp. gene2cat data.frame 2 columns containing mapping genes (usually UniProt accessions, Ensembl gene IDs similar) GO terms. Alternatively, named list names genes entry character vector GO terms. ... arguments passed goseq. shorten_term logical. extra column substring output GO terms added output data.frame? Default TRUE. shorten_lims integer vector length 2. start stop coordinates substring.","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/get_enriched_go.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"GO term enrichment using goseq — get_enriched_go","text":"Returns data.frame /underrepresented GO terms.","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/get_go_terms.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain GO term annotations for proteins — get_go_terms","title":"Obtain GO term annotations for proteins — get_go_terms","text":"Given set UniProt IDs, function queries UniProt obtain annotated GO terms. Optionally, GO terms can expanded include ancestors , can helpful using GO -representation/enrichment tools consider GO term heirarchy. Note expansion significantly increase run-time","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/get_go_terms.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain GO term annotations for proteins — get_go_terms","text":"","code":"get_go_terms(UniprotID, expand_terms = FALSE, verbosity = 0)"},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/get_go_terms.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain GO term annotations for proteins — get_go_terms","text":"expand_terms logical GO terms expanded include ancestors verbosity integer Verbosity level uniprotREST::uniprot_map uniprotIDs character vector Uniprot IDs","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/get_go_terms.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain GO term annotations for proteins — get_go_terms","text":"data.frame object.","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/get_go_terms.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Obtain GO term annotations for proteins — get_go_terms","text":"","code":"uniprotIDs <- c('O76024', 'Q03135', 'Q96T23') get_go_terms(uniprotIDs, expand_terms=TRUE) #> Error in (function (cond) .Internal(C_tryCatchHelper(addr, 1L, cond)))(structure(list(message = \"there is no package called ‘GO.db’\",     call = loadNamespace(x), package = \"GO.db\", lib.loc = NULL), class = c(\"packageNotFoundError\", \"error\", \"condition\"))): error in evaluating the argument 'x' in selecting a method for function 'select': there is no package called ‘GO.db’"},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/get_maxquant_cont_accessions.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract the contaminants protein accessions from a MaxQuant contaminants fasta file — get_maxquant_cont_accessions","title":"Extract the contaminants protein accessions from a MaxQuant contaminants fasta file — get_maxquant_cont_accessions","text":"Extract contaminants protein accessions MaxQuant contaminants fasta file","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/get_maxquant_cont_accessions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract the contaminants protein accessions from a MaxQuant contaminants fasta file — get_maxquant_cont_accessions","text":"","code":"get_maxquant_cont_accessions(cont_fasta_inf = NULL)"},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/get_maxquant_cont_accessions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract the contaminants protein accessions from a MaxQuant contaminants fasta file — get_maxquant_cont_accessions","text":"cont_fasta_inf character Filepath contaminants fasta. Defaults NULL case, contaminants.fasta.gz package used","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/get_maxquant_cont_accessions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract the contaminants protein accessions from a MaxQuant contaminants fasta file — get_maxquant_cont_accessions","text":"Returns list contaminant IDs","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/get_medians.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract the assay column medians from an MSnSet — get_medians","title":"Extract the assay column medians from an MSnSet — get_medians","text":"Extract assay column medians MSnSet","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/get_medians.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract the assay column medians from an MSnSet — get_medians","text":"","code":"get_medians(obj)"},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/get_medians.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract the assay column medians from an MSnSet — get_medians","text":"obj SummarisedExperiment","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/get_medians.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract the assay column medians from an MSnSet — get_medians","text":"vector assay column medians colnames order","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/get_n_feature_per_prot.html","id":null,"dir":"Reference","previous_headings":"","what":"Identify how many features (PSMs/Peptides) are quantified for each protein — get_n_feature_per_prot","title":"Identify how many features (PSMs/Peptides) are quantified for each protein — get_n_feature_per_prot","text":"summarisation PSM peptide protein, need minimum number finite values per protein per sample. function simply tallies many .","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/get_n_feature_per_prot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identify how many features (PSMs/Peptides) are quantified for each protein — get_n_feature_per_prot","text":"","code":"get_n_feature_per_prot(obj, master_protein_col = \"Master.Protein.Accessions\")"},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/get_n_feature_per_prot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identify how many features (PSMs/Peptides) are quantified for each protein — get_n_feature_per_prot","text":"obj SummarizedExperiment PSM peptide-level quantification master_protein_col character Column name master protein","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/get_n_feature_per_prot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Identify how many features (PSMs/Peptides) are quantified for each protein — get_n_feature_per_prot","text":"data.frame detailing many features present protein sample","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/get_protein_no_quant_mask.html","id":null,"dir":"Reference","previous_headings":"","what":"Identify proteins which have too few features to quantify protein abundance in each sample — get_protein_no_quant_mask","title":"Identify proteins which have too few features to quantify protein abundance in each sample — get_protein_no_quant_mask","text":"Protein level abundances accurately quantified features (PSMs/peptides) summarise . Usually, performing summarisation matrix (columns=samples, rows=features) associated feature protein ID mapping. Within matrix, values may missing (NA). order correctly identify proteins can quantified, need start feature level object create mask can use replace protein-level quantification values NA. function . can combined mask_protein_quant function replace protein level quantification values NA derived quantification values","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/get_protein_no_quant_mask.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identify proteins which have too few features to quantify protein abundance in each sample — get_protein_no_quant_mask","text":"","code":"get_protein_no_quant_mask(   obj,   min_features,   master_protein_col = \"Master.Protein.Accessions\",   plot = FALSE )"},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/get_protein_no_quant_mask.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identify proteins which have too few features to quantify protein abundance in each sample — get_protein_no_quant_mask","text":"obj SummarizedExperiment PSM peptide-level quantification min_features numeric Threshold minimum features per protein master_protein_col character Column name master protein plot Set TRUE plot many proteins quantified sample. Horizontal line represents total number proteins quantified across samples","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/get_protein_no_quant_mask.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Identify proteins which have too few features to quantify protein abundance in each sample — get_protein_no_quant_mask","text":"Matrix defining whether protein quantified sufficient features","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/get_protein_tm_topology.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain protein transmembrane-domains and topology information — get_protein_tm_topology","title":"Obtain protein transmembrane-domains and topology information — get_protein_tm_topology","text":"Given set UniProt IDs, function queries UniProt obtain information regarding transmembrane domains (TMDs) topology parses information define additional columns describining TMDs topology","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/get_protein_tm_topology.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain protein transmembrane-domains and topology information — get_protein_tm_topology","text":"","code":"get_protein_tm_topology(uniprotIDs, verbosity = 0)"},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/get_protein_tm_topology.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain protein transmembrane-domains and topology information — get_protein_tm_topology","text":"uniprotIDs character vector Uniprot IDs verbosity integer Verbosity level uniprotREST::uniprot_map","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/get_protein_tm_topology.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain protein transmembrane-domains and topology information — get_protein_tm_topology","text":"data.frame object.","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/get_protein_tm_topology.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Obtain protein transmembrane-domains and topology information — get_protein_tm_topology","text":"","code":"uniprotIDs <- c('O76024', 'Q03135', 'Q96T23') get_protein_tm_topology(uniprotIDs) #>   UniprotID Length                                           Intramembrane #> 1    O76024    890                                                         #> 2    Q03135    178 INTRAMEM 105..125; /note=Helical; /evidence=ECO:0000255 #> 3    Q96T23   1441                                                         #>                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       Transmembrane #> 1 TRANSMEM 314..334; /note=Helical; /evidence=ECO:0000255; TRANSMEM 340..360; /note=Helical; /evidence=ECO:0000255; TRANSMEM 402..422; /note=Helical; /evidence=ECO:0000255; TRANSMEM 427..447; /note=Helical; /evidence=ECO:0000255; TRANSMEM 465..485; /note=Helical; /evidence=ECO:0000255; TRANSMEM 496..516; /note=Helical; /evidence=ECO:0000255; TRANSMEM 529..549; /note=Helical; /evidence=ECO:0000255; TRANSMEM 563..583; /note=Helical; /evidence=ECO:0000255; TRANSMEM 589..609; /note=Helical; /evidence=ECO:0000255; TRANSMEM 632..652; /note=Helical; /evidence=ECO:0000255; TRANSMEM 870..890; /note=Helical; /evidenceopological.domain #> 1                                                                TOPO_DOM 653..869; /note=Lumenal; /evidence=ECO:0000255 #> 2 TOPO_DOM 2..104; /note=Cytoplasmic; /evidence=ECO:0000255; TOPO_DOM 126..178; /note=Cytoplasmic; /evidence=ECO:0000255 #> 3                                                                                                                        #>   n_tms                                    tm_start #> 1    11 314;340;402;427;465;496;529;563;589;632;870 #> 2     0                                        <NA> #> 3     0                                        <NA> #>                                        tm_end                        tm_length #> 1 334;360;422;447;485;516;549;583;609;652;890 20;20;20;20;20;20;20;20;20;20;20 #> 2                                        <NA>                             <NA> #> 3                                        <NA>                             <NA> #>                                                                                  tm_types #> 1 Helical;Helical;Helical;Helical;Helical;Helical;Helical;Helical;Helical;Helical;Helical #> 2                                                                                    <NA> #> 3                                                                                    <NA> #>   tm_types_set                topology      n_term      c_term topology_start #> 1      Helical                 Lumenal     Lumenal     Lumenal            653 #> 2         <NA> Cytoplasmic;Cytoplasmic Cytoplasmic Cytoplasmic          2;126 #> 3         <NA>                    <NA>        <NA>        <NA>           <NA> #>   topology_end topology_length #> 1          869             216 #> 2      104;178          102;52 #> 3         <NA>            <NA>"},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/get_samples_present.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract the number of samples each feature was detected in for each experiment in a Qfeatures object — get_samples_present","title":"Extract the number of samples each feature was detected in for each experiment in a Qfeatures object — get_samples_present","text":"exploring proteome coverage, instructive consider many samples protein present level filtering. function takes Qfeatures object tallies many samples variable rowData present . row variables protein names, tally thus number samples protein present .","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/get_samples_present.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract the number of samples each feature was detected in for each experiment in a Qfeatures object — get_samples_present","text":"","code":"get_samples_present(obj, rowVars, rename_cols = NULL)"},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/get_samples_present.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract the number of samples each feature was detected in for each experiment in a Qfeatures object — get_samples_present","text":"obj QFeatures object rowVars character vector row variables group , e.g 'Master.Protein.Accessions' rename_cols named character vector optional named list rename experiments. List values current experiment names list names updated experiment names","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/get_samples_present.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract the number of samples each feature was detected in for each experiment in a Qfeatures object — get_samples_present","text":"data.frame object.","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/make_fasta.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a FASTA using UniProt accessions — make_fasta","title":"Make a FASTA using UniProt accessions — make_fasta","text":"Given vector UniProt accessions, function : Download sequences Print current UniProt release (put FASTA file name) (Optional) add cRAP numbers FASTA headers sequence Save sequences FASTA file","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/make_fasta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a FASTA using UniProt accessions — make_fasta","text":"","code":"make_fasta(   accessions,   file,   is_crap = FALSE,   overwrite = FALSE,   verbose = TRUE )"},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/make_fasta.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a FASTA using UniProt accessions — make_fasta","text":"accessions character vector, UniProt accessions use file character, filepath save fasta e.g. \"crap.fasta\" is_crap logical, output going cRAP database? TRUE cRAP001, cRAP002, etc. appended sequence headers FASTA file. Default FALSE overwrite logical, FASTA file already exists overwritten? Default FALSE verbose logical, function send messages console? Default TRUE","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/make_fasta.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make a FASTA using UniProt accessions — make_fasta","text":"Returns FASTA file saved disk specified file path.","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/make_fasta.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make a FASTA using UniProt accessions — make_fasta","text":"","code":"# specify some UniProt accessions crap <- get_ccp_crap() #> Error in get_ccp_crap(): could not find function \"get_ccp_crap\"  if (FALSE) { # \\dontrun{ make_fasta(crap, \"2021-01_cRAP.fasta\") } # }"},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/mask_protein_level_quant.html","id":null,"dir":"Reference","previous_headings":"","what":"Replace protein-level quantifications with NA if they derive from too few lower feature level quantifications — mask_protein_level_quant","title":"Replace protein-level quantifications with NA if they derive from too few lower feature level quantifications — mask_protein_level_quant","text":"Protein level abundances accurately quantified features (PSMs/peptides) summarise . Usually, performing summarisation matrix (columns=samples, rows=features) associated feature protein ID mapping. Within matrix, values may missing (NA). order correctly identify proteins can quantified, need start feature level object create mask can use replace protein-level quantification values NA. can obtained get_protein_no_quant_mask . can combined function replace protein level quantification values NA derived quantification values","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/mask_protein_level_quant.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Replace protein-level quantifications with NA if they derive from too few lower feature level quantifications — mask_protein_level_quant","text":"","code":"mask_protein_level_quant(obj, retain_mask)"},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/mask_protein_level_quant.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Replace protein-level quantifications with NA if they derive from too few lower feature level quantifications — mask_protein_level_quant","text":"obj SummarizedExperiment PSM peptide-level quantification retain_mask matrix detailing whether protein-level quantification sufficient lower level quantification values sample. Can obtained get_protein_no_quant_mask","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/mask_protein_level_quant.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Replace protein-level quantifications with NA if they derive from too few lower feature level quantifications — mask_protein_level_quant","text":"SummarizedExperiment quantification values replaced NA derive lower feature level quantifications","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/parse_PTM_scores_pd.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse the PTM probabilities from Proteome Discoverer and add new columns with PTM information — parse_PTM_scores_pd","title":"Parse the PTM probabilities from Proteome Discoverer and add new columns with PTM information — parse_PTM_scores_pd","text":"Extract PTM information PTM probabilities column output PD add new columns information. Also optionally prints summary many features (PSMs/peptides) pass given probability threshold","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/parse_PTM_scores_pd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse the PTM probabilities from Proteome Discoverer and add new columns with PTM information — parse_PTM_scores_pd","text":"","code":"parse_PTM_scores_pd(   obj,   threshold = 95,   ptm_col = \"ptmRS.Best.Site.Probabilities\",   prob_split = \"; |: \",   collapse_delimiter = \"; \",   verbose = TRUE )"},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/parse_PTM_scores_pd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parse the PTM probabilities from Proteome Discoverer and add new columns with PTM information — parse_PTM_scores_pd","text":"obj SummarizedExperiment. Proteomics dataset threshold numeric score set threshold, disregard putative PTM sites ptm_col character Columm name PTM probabilities prob_split character regex split PTM probabilities collapse_delimiter character delimiter multiple values output columns verbose Set TRUE print log events console","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/parse_PTM_scores_pd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parse the PTM probabilities from Proteome Discoverer and add new columns with PTM information — parse_PTM_scores_pd","text":"SummarizedExperiment","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/plot_cor_samples.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the correlation between sample — plot_cor_samples","title":"Plot the correlation between sample — plot_cor_samples","text":"correlation feature quantifications sample can useful QC step assess whether experiment worked. function plots correlation values heatmap. Samples clustered ordered axes order SummarizedExperiment","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/plot_cor_samples.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the correlation between sample — plot_cor_samples","text":"","code":"plot_cor_samples(obj, i, order = \"original\", ...)"},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/plot_cor_samples.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the correlation between sample — plot_cor_samples","text":"obj QFeatures. Proteomics dataset string. Index SummarizedExperiment wish plot ... addiional arguments passed onto corrplot::corrplot","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/plot_cor_samples.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the correlation between sample — plot_cor_samples","text":"Returns ggplot object.","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/plot_cor_samples.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot the correlation between sample — plot_cor_samples","text":"","code":"tmt_qf <- QFeatures::readQFeatures(assayData = psm_tmt_total,   quantCols = 36:45,   name = \"psms_raw\") #> Checking arguments. #> Loading data as a 'SummarizedExperiment' object. #> Formatting sample annotations (colData). #> Formatting data as a 'QFeatures' object.  cor_sample(tmt_qf, 'psms_raw') #> Error in cor_sample(tmt_qf, \"psms_raw\"): could not find function \"cor_sample\""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/plot_go.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot selected GO terms — plot_go","title":"Plot selected GO terms — plot_go","text":"function plots set GO terms interest. run get_enriched_go estimate_go_overrep. avoid plotting many terms, may wish use remove_redundant_go first . warning shown try plot 100 GO terms.","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/plot_go.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot selected GO terms — plot_go","text":"","code":"plot_go(   obj,   term_col = \"term_short\",   ontology_col = \"ontology\",   annotate_n = TRUE,   make_terms_unique = TRUE )"},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/plot_go.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot selected GO terms — plot_go","text":"obj data.frame containing goseq results generated get_enriched_go estimate_go_overrep. See example. term_col character column name GO term description. ontology_col character column name GO term ontology. annotate_n logical Include number features per term make_terms_unique logical Make GO terms unique. Useful truncated GO terms plotted (.e. numDEInCat column) plot? (Default TRUE)","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/plot_go.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot selected GO terms — plot_go","text":"Returns ggplot object.","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/plot_go.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot selected GO terms — plot_go","text":"","code":"# Make a data.frame of the correct format df <- data.frame(   \"term_short\" = c(\"A GO term\", \"Another GO term\", \"One more GO term\"),   \"ontology\" = c(\"BP\", \"MF\", \"CC\"),   \"over_represented_adj_pval\" = c(0.0001, 1, 0.01),   \"adj_overrep\" = c(15, 3, 1),   \"numDEInCat\" = c(304, 22, 78) )  # Plot the GO terms plot_go(df)"},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/plot_go_terms_upset.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot selected GO terms — plot_go_terms_upset","title":"Plot selected GO terms — plot_go_terms_upset","text":"function plots set GO terms interest. run get_enriched_go estimate_go_overrep. avoid plotting many terms, may wish use remove_redundant_go first . warning shown try plot 100 GO terms.","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/plot_go_terms_upset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot selected GO terms — plot_go_terms_upset","text":"","code":"plot_go_terms_upset(   goi,   foi,   gene2cat,   term_col = \"TERM\",   gene_col = \"UNIPROTKB\" )"},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/plot_go_terms_upset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot selected GO terms — plot_go_terms_upset","text":"goi character GO terms interest foi character features (genes/proteins etc) interest gene2cat data.frame 2 columns containing mapping genes (usually UniProt accessions, Ensembl gene IDs similar) GO terms. term_col character column name GO term description. gene_col character column name genes (protein etc).","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/plot_go_terms_upset.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot selected GO terms — plot_go_terms_upset","text":"Returns ggplot object.","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/plot_missing_SN.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the missing values vs signal:noise — plot_missing_SN","title":"Plot the missing values vs signal:noise — plot_missing_SN","text":"Missing values frequent low signal:noise (S:N). function visualises relationship aid selection thresholds minimal S:N filtering","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/plot_missing_SN.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the missing values vs signal:noise — plot_missing_SN","text":"","code":"plot_missing_SN(obj, sn_column = \"Average.Reporter.SN\", bins = 20)"},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/plot_missing_SN.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the missing values vs signal:noise — plot_missing_SN","text":"obj SummarizedExperiment containing PSM level TMT intensities sn_column character column name signal:noise values bins numeric Number bins plot","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/plot_missing_SN.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the missing values vs signal:noise — plot_missing_SN","text":"ggplot stacked bar plot show S:N vs # missing values","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/plot_missing_SN_per_sample.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the missing values vs signal:noise for each sample — plot_missing_SN_per_sample","title":"Plot the missing values vs signal:noise for each sample — plot_missing_SN_per_sample","text":"Missing values frequent low signal:noise (S:N). function visualises relationship sample aid selection thresholds minimal S:N filtering.","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/plot_missing_SN_per_sample.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the missing values vs signal:noise for each sample — plot_missing_SN_per_sample","text":"","code":"plot_missing_SN_per_sample(obj, sn_column = \"Average.Reporter.SN\", bins = 20)"},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/plot_missing_SN_per_sample.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the missing values vs signal:noise for each sample — plot_missing_SN_per_sample","text":"obj SummarizedExperiment containing PSM level TMT intensities sn_column character column name Signal:noise values bins numeric Number bins plot","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/plot_missing_SN_per_sample.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the missing values vs signal:noise for each sample — plot_missing_SN_per_sample","text":"ggplot tile plot show S:N vs # missing values sample","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/plot_missing_upset.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the most common missing value patterns — plot_missing_upset","title":"Plot the most common missing value patterns — plot_missing_upset","text":"patterns missing values can informative respect whether experiment worked, particular samples outliers. function uses 'upset' plot show top 50 common missing value patterns across samples","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/plot_missing_upset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the most common missing value patterns — plot_missing_upset","text":"","code":"plot_missing_upset(obj, i)"},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/plot_missing_upset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the most common missing value patterns — plot_missing_upset","text":"obj QFeatures. Proteomics dataset string. Index SummarisedExperiment wish plot","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/plot_missing_upset.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the most common missing value patterns — plot_missing_upset","text":"Returns ggplot object.","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/plot_missing_upset.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot the most common missing value patterns — plot_missing_upset","text":"","code":"set.seed(11) library(ggplot2)  df <- diamonds[sample(nrow(diamonds), 1000), ]  tmt_qf <- QFeatures::readQFeatures(assayData = psm_tmt_total,   quantCols = 36:45,   name = \"psms_raw\") #> Checking arguments. #> Loading data as a 'SummarizedExperiment' object. #> Formatting sample annotations (colData). #> Formatting data as a 'QFeatures' object."},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/plot_pca.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Principle Component plot from the feature quantification — plot_pca","title":"Create a Principle Component plot from the feature quantification — plot_pca","text":"PCA visualisation feature quantifications sample can allow one see experimental conditions relate sources variance (principle components). function plots PCA, option colour /shape points experimental conditions. percentage values indicated axes variance explained PCs.","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/plot_pca.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Principle Component plot from the feature quantification — plot_pca","text":"","code":"plot_pca(obj, i, colour_by = NULL, shape_by = NULL, x = 1, y = 2, ...)"},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/plot_pca.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Principle Component plot from the feature quantification — plot_pca","text":"obj QFeatures. Proteomics dataset string. Index SummarizedExperiment wish plot colour_by string. ColData column colour points shape_by string. ColData column shape points x numeric. Principle component plot x-axis y numeric. Principle component plot x-axis","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/plot_pca.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Principle Component plot from the feature quantification — plot_pca","text":"Returns ggplot object.","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/plot_protein_assays.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot quantification at multiple levels — plot_protein_assays","title":"Plot quantification at multiple levels — plot_protein_assays","text":"exploration specific proteins, often useful visualise quantification multiple levels, e.g PSM, peptide, filtered peptides protein. function plots quantitative data multiple levels (assays) given list proteins interest.","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/plot_protein_assays.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot quantification at multiple levels — plot_protein_assays","text":"","code":"plot_protein_assays(   obj,   poi,   experiments_to_plot = NULL,   protein_id_col = \"Master.Protein.Accessions\",   label_col = \"Master.Protein.Accessions\",   rename_labels = NULL,   log2transform_cols = \"\",   norm_quant = FALSE,   add_mean_summary = FALSE,   colour_assays = FALSE,   alpha_assays = TRUE )"},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/plot_protein_assays.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot quantification at multiple levels — plot_protein_assays","text":"obj QFeatures object poi list. Proteins interest experiments_to_plot list. experiments (assays) plot. Defaults assays protein_id_col string. Column protein ids search poi values label_col string. Column labels use proteins plot rename_labels named list. Mapping labels renamed labels log2transform_cols list. Assays need log2-transforms (values ultimately transformed) norm_quant logical. quantifications normalised fold-change vs mean abundance add_mean_summary logical. Add line summarising mean value features assay (recommended norm_quant=FALSE) colour_assays logical. Column assay alpha_assays logical. Set sensible alpha value assay","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/plot_protein_assays.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot quantification at multiple levels — plot_protein_assays","text":"ggplot object.","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/plot_quant.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot distributions for feature intensities per sample. — plot_quant","title":"Plot distributions for feature intensities per sample. — plot_quant","text":"Given SummarizedExperiment, return plot feature quantifications per sample.","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/plot_quant.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot distributions for feature intensities per sample. — plot_quant","text":"","code":"plot_quant(   obj,   method = c(\"box\", \"density\", \"histogram\"),   log2transform = FALSE,   facet_by_sample = FALSE )"},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/plot_quant.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot distributions for feature intensities per sample. — plot_quant","text":"obj SummarizedExperiment. method string. Plot style. Choice box, density histogram plot. log2transform logical. feature quantifications log-transformed? facet_by_sample logical. Facet plot sample.","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/plot_quant.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot distributions for feature intensities per sample. — plot_quant","text":"ggplot object.","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/plot_rt_dist.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the retention time distribution — plot_rt_dist","title":"Plot the retention time distribution — plot_rt_dist","text":"useful assess retention time distribution quality control step. peptides spread across retention times, without clear 'gaps' clear trend towards one end gradient.","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/plot_rt_dist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the retention time distribution — plot_rt_dist","text":"","code":"plot_rt_dist(obj, rt_col = \"RT.in.min.by.Search.Engine.Sequest.HT\")"},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/plot_rt_dist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the retention time distribution — plot_rt_dist","text":"obj SummarisedExperiment containing peptide-level output Proteome Discoverer. rt_col string. Name column retention time","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/plot_rt_dist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the retention time distribution — plot_rt_dist","text":"Returns ggplot RT vs delta PPM","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/plot_rt_vs_delta.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the retention time vs delta precursor mass — plot_rt_vs_delta","title":"Plot the retention time vs delta precursor mass — plot_rt_vs_delta","text":"useful assess relationship retention time delta precursor mass quality control step. little relationship","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/plot_rt_vs_delta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the retention time vs delta precursor mass — plot_rt_vs_delta","text":"","code":"plot_rt_vs_delta(   obj,   rt_col = \"RT.in.min.by.Search.Engine.Sequest.HT\",   delta_ppm_col = \"Delta.M.in.ppm.by.Search.Engine.Sequest.HT\" )"},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/plot_rt_vs_delta.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the retention time vs delta precursor mass — plot_rt_vs_delta","text":"obj SummarisedExperiment containing peptide-level output Proteome Discoverer. rt_col string. Name column retention time delta_ppm_col string. Name column Delta precursor mass","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/plot_rt_vs_delta.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the retention time vs delta precursor mass — plot_rt_vs_delta","text":"Returns ggplot RT vs delta PPM","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/plot_samples_present.html","id":null,"dir":"Reference","previous_headings":"","what":"Plots the number of samples each feature was detected in for each experiment in a Qfeatures object — plot_samples_present","title":"Plots the number of samples each feature was detected in for each experiment in a Qfeatures object — plot_samples_present","text":"exploring proteome coverage, instructive consider many samples protein present level filtering. function plots output get_samples_present","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/plot_samples_present.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plots the number of samples each feature was detected in for each experiment in a Qfeatures object — plot_samples_present","text":"","code":"plot_samples_present(samples_present, rowvars, breaks = NULL)"},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/plot_samples_present.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plots the number of samples each feature was detected in for each experiment in a Qfeatures object — plot_samples_present","text":"samples_present data.frame output get_samples_present rowVars character vector row variables tallying grouped ","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/plot_samples_present.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plots the number of samples each feature was detected in for each experiment in a Qfeatures object — plot_samples_present","text":"ggplot object.","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/plot_volcano.html","id":null,"dir":"Reference","previous_headings":"","what":"Volcano plot for differential abundance testing — plot_volcano","title":"Volcano plot for differential abundance testing — plot_volcano","text":"Statistical testing results 'omics' differential abundance frequently displayed 'volcano' plot, x = log fold-change y = -log10(p-value). function generates volcano plot data.frame containing statistical testing results","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/plot_volcano.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Volcano plot for differential abundance testing — plot_volcano","text":"","code":"plot_volcano(   obj,   lf_col = \"logFC\",   p_col = \"adj.P.Val\",   sig_col = NULL,   title = NULL,   xlab = \"log2 Fold Change\" )"},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/plot_volcano.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Volcano plot for differential abundance testing — plot_volcano","text":"obj data.frame. Statistical testing results lf_col string. Column log fold-change p_col string. Column p-value sig_col string. Column significance annotation (optional) title string. Plot title xlab string. Label x axis","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/plot_volcano.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Volcano plot for differential abundance testing — plot_volcano","text":"Returns ggplot object.","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/psm_tmt_total.html","id":null,"dir":"Reference","previous_headings":"","what":"PSM-level PD output for total proteome TMT10-plex data — psm_tmt_total","title":"PSM-level PD output for total proteome TMT10-plex data — psm_tmt_total","text":"x Qfeature containing TMT data processed TMT QC PSM-level quantification summarisation protein-level abundance vignette","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/psm_tmt_total.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"PSM-level PD output for total proteome TMT10-plex data — psm_tmt_total","text":"","code":"psm_tmt_total  psm_tmt_total"},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/psm_tmt_total.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"PSM-level PD output for total proteome TMT10-plex data — psm_tmt_total","text":"object class data.frame 5000 rows 50 columns. object class data.frame 5000 rows 50 columns.","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/query_protein_tm_topology.html","id":null,"dir":"Reference","previous_headings":"","what":"Query UniProt to determine protein transmembrane-domains and topology — query_protein_tm_topology","title":"Query UniProt to determine protein transmembrane-domains and topology — query_protein_tm_topology","text":"Given set UniProt IDs, function returns information regarding transmembrane domains topology.","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/query_protein_tm_topology.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Query UniProt to determine protein transmembrane-domains and topology — query_protein_tm_topology","text":"","code":"query_protein_tm_topology(uniprotIDs, verbosity = 0)"},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/query_protein_tm_topology.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Query UniProt to determine protein transmembrane-domains and topology — query_protein_tm_topology","text":"uniprotIDs character vector Uniprot IDs verbosity integer Verbosity level uniprotREST::uniprot_map","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/query_protein_tm_topology.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Query UniProt to determine protein transmembrane-domains and topology — query_protein_tm_topology","text":"data.frame object.","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/query_protein_tm_topology.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Query UniProt to determine protein transmembrane-domains and topology — query_protein_tm_topology","text":"","code":"uniprotIDs <- c('O76024', 'Q03135', 'Q96T23') query_protein_tm_topology(uniprotIDs) #>   UniprotID Length                                           Intramembrane #> 1    O76024    890                                                         #> 2    Q03135    178 INTRAMEM 105..125; /note=Helical; /evidence=ECO:0000255 #> 3    Q96T23   1441                                                         #>                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       Transmembrane #> 1 TRANSMEM 314..334; /note=Helical; /evidence=ECO:0000255; TRANSMEM 340..360; /note=Helical; /evidence=ECO:0000255; TRANSMEM 402..422; /note=Helical; /evidence=ECO:0000255; TRANSMEM 427..447; /note=Helical; /evidence=ECO:0000255; TRANSMEM 465..485; /note=Helical; /evidence=ECO:0000255; TRANSMEM 496..516; /note=Helical; /evidence=ECO:0000255; TRANSMEM 529..549; /note=Helical; /evidence=ECO:0000255; TRANSMEM 563..583; /note=Helical; /evidence=ECO:0000255; TRANSMEM 589..609; /note=Helical; /evidence=ECO:0000255; TRANSMEM 632..652; /note=Helical; /evidence=ECO:0000255; TRANSMEM 870..890; /note=Helical; /evidenceopological.domain #> 1                                                                TOPO_DOM 653..869; /note=Lumenal; /evidence=ECO:0000255 #> 2 TOPO_DOM 2..104; /note=Cytoplasmic; /evidence=ECO:0000255; TOPO_DOM 126..178; /note=Cytoplasmic; /evidence=ECO:0000255 #> 3"},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/readDIANNFilterQJoin.html","id":null,"dir":"Reference","previous_headings":"","what":"Read in data from DIA-NN — readDIANNFilterQJoin","title":"Read in data from DIA-NN — readDIANNFilterQJoin","text":"function reads report.tsv file DIA-NN, performs filtering using Q-Value columns joins together quantification individual samples","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/readDIANNFilterQJoin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read in data from DIA-NN — readDIANNFilterQJoin","text":"","code":"readDIANNFilterQJoin(   diann_report_infile,   global_protein_q = 0.01,   run_protein_q = 0.01,   run_precursor_q = 0.01,   return_sep_quant = FALSE )"},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/readDIANNFilterQJoin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read in data from DIA-NN — readDIANNFilterQJoin","text":"diann_report_infile character. Filepath DIA-NN report.tsv file global_protein_q numeric. Threshold global protein FDR run_protein_q numeric. Threshold run-specific protein FDR run_precursor_q numeric. Threshold run-specific precursor FDR return_sep_quant logical. Return individual sample-level quantification well","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/remove_dots.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove duplicated full stops — remove_dots","title":"Remove duplicated full stops — remove_dots","text":"convenience function remove duplicated full stops (aka periods) elements vector, e.g. change .. ... .... etc. just . Mainly used fix column names.","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/remove_dots.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove duplicated full stops — remove_dots","text":"","code":"remove_dots(x)"},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/remove_dots.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove duplicated full stops — remove_dots","text":"x character string. Contains duplicate full stops removed.","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/remove_dots.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove duplicated full stops — remove_dots","text":"Returns character string duplicate full stops removed.","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/remove_dots.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove duplicated full stops — remove_dots","text":"","code":"df <- data.frame(   column...name = c(1, 2, 3) )  colnames(df) <- remove_dots(colnames(df))"},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/remove_redundant_go.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove redundant GO terms — remove_redundant_go","title":"Remove redundant GO terms — remove_redundant_go","text":"Given output get_enriched_go goseq, remove redundant GO terms.","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/remove_redundant_go.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove redundant GO terms — remove_redundant_go","text":"","code":"remove_redundant_go(   obj,   go_category_col = \"category\",   p_value_col = \"over_represented_pvalue\" )"},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/remove_redundant_go.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove redundant GO terms — remove_redundant_go","text":"obj data.frame containing goseq results generated `go_category_col` character column name GO terms `p_value_col` character column name p-values get_enriched_go goseq.","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/remove_redundant_go.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove redundant GO terms — remove_redundant_go","text":"Returns obj redundant GO terms filtered .","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/remove_redundant_psm_quant.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove redundant Peptide Spectrum Matches — remove_redundant_psm_quant","title":"Remove redundant Peptide Spectrum Matches — remove_redundant_psm_quant","text":"multiple search engines used Proteome Discoverer TMT proteomics, PSM-level quantification contains duplicate rows search engine match spectrum. can use scan number columns quantitative data identify duplicate rows exclude . removal duplicate quantification performed following initial filtering 1) remove rejected PSMs (see filter_TMT_PSMs) 2) retain rank 1 matches (Filter Rank Search.Engine.Rank columns)","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/remove_redundant_psm_quant.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove redundant Peptide Spectrum Matches — remove_redundant_psm_quant","text":"","code":"remove_redundant_psm_quant(   obj,   verbose = FALSE,   master_protein_col = \"Master.Protein.Accessions\",   validate = TRUE )"},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/remove_redundant_psm_quant.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove redundant Peptide Spectrum Matches — remove_redundant_psm_quant","text":"obj SummarisedExperiment containing PSM-level output Proteome Discoverer. verbose boolean. output tallies PSMs/proteins; Default=FALSE master_protein_col string. Name column containing master validate logical. Check sequence protein assignments consistent. Default=TRUE proteins. (used verbose=TRUE)","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/remove_redundant_psm_quant.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove redundant Peptide Spectrum Matches — remove_redundant_psm_quant","text":"Returns SummarisedExperiment redundant quantification removed","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/remove_x.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove leading X — remove_x","title":"Remove leading X — remove_x","text":"convenience function remove leading capital X. case sensitive.","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/remove_x.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove leading X — remove_x","text":"","code":"remove_x(x)"},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/remove_x.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove leading X — remove_x","text":"x character string.","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/remove_x.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove leading X — remove_x","text":"Returns character string leading X removed.","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/remove_x.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove leading X — remove_x","text":"","code":"df <- data.frame('X1'=c(1,2))  remove_x(colnames(df)) #> [1] \"1\""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/restrict_imputation.html","id":null,"dir":"Reference","previous_headings":"","what":"Restrict imputed values to specific conditions — restrict_imputation","title":"Restrict imputed values to specific conditions — restrict_imputation","text":"function takes Qfeatures object unimputed data imputed data separate assays creates new assay imputed values used specified circumstances. Note restriction occurs post imputation, may suitable imputation methods imputed values independently derived","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/restrict_imputation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Restrict imputed values to specific conditions — restrict_imputation","text":"","code":"restrict_imputation(   obj,   i_unimputed,   i_imputed,   i_restricted_imputed,   use_imputed_df,   verbose = TRUE )"},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/restrict_imputation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Restrict imputed values to specific conditions — restrict_imputation","text":"obj QFeatures. Proteomics dataset i_unimputed string. Index SummarizedExperiment data without imputation i_imputed string. Index SummarizedExperiment data imputation i_restricted_imputed string. Index output assay restricted imputation use_imputed_df data.frame conditions imputation used. see @details information verbose logical Describe many missing values input output assays","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/restrict_imputation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Restrict imputed values to specific conditions — restrict_imputation","text":"Returns QFeatures restricted imputation specified assay name","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/restrict_imputation.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Restrict imputed values to specific conditions — restrict_imputation","text":"data.frame provided use_imputed_df specify conditions imputation performed, respect experimental conditions number missing values. data.frame must contain column called n_finite columns must columns colData(obj) example, enrichment vs control experiment, input control samples zero one replicate quantified, specified thusly condition  n_finite control  0 control  1","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/sub_crap.html","id":null,"dir":"Reference","previous_headings":"","what":"Insert cRAP numbers into a character vector — sub_crap","title":"Insert cRAP numbers into a character vector — sub_crap","text":"function takes character vector element roughly form UniProt header e.g. \"sp|XXXXXX|YYYY_YYYY Text goes \" substitutes cRAP number place first | symbol, e.g. \"sp|cRAP001|XXXXXX|YYYY_YYYY Text goes \".","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/sub_crap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Insert cRAP numbers into a character vector — sub_crap","text":"","code":"sub_crap(x, start = 1, width = 3)"},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/sub_crap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Insert cRAP numbers into a character vector — sub_crap","text":"x character vector, element must two | symbols text e.g. |sometext|. start numeric, number increment , default 1 width numeric, many digits cRAP number , default 3","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/sub_crap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Insert cRAP numbers into a character vector — sub_crap","text":"Returns character vector length x.","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/sub_crap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Insert cRAP numbers into a character vector — sub_crap","text":"","code":"# basic use sub_crap(c(\"|sometext|\", \"|moretext|\")) #> [1] \"|cRAP001|sometext|\" \"|cRAP002|moretext|\"  # start from a different number sub_crap(c(\"|sometext|\", \"|moretext|\"), start = 88) #> [1] \"|cRAP088|sometext|\" \"|cRAP089|moretext|\"  # increase number width sub_crap(c(\"|sometext|\", \"|moretext|\"), start = 1111, width = 4) #> [1] \"|cRAP1111|sometext|\" \"|cRAP1112|moretext|\""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/theme_biomasslmb.html","id":null,"dir":"Reference","previous_headings":"","what":"A ggplot2 theme for the package — theme_biomasslmb","title":"A ggplot2 theme for the package — theme_biomasslmb","text":"standard theme use plots generated package.","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/theme_biomasslmb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A ggplot2 theme for the package — theme_biomasslmb","text":"","code":"theme_biomasslmb(   base_size = 14,   base_family = \"sans\",   base_line_size = base_size/18,   base_rect_size = base_size/9,   aspect_square = TRUE,   border = FALSE )"},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/theme_biomasslmb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A ggplot2 theme for the package — theme_biomasslmb","text":"base_size numeric. Defines overall size plot. base_family string. Fontfamily use, default \"sans\". base_line_size numeric. Defines line size use. base_rect_size numeric. Defines rect size use. aspect_square logical. square aspect ratio used? Default TRUE. border logical. plot square border? Default TRUE.","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/theme_biomasslmb.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A ggplot2 theme for the package — theme_biomasslmb","text":"Returns theme object.","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/theme_biomasslmb.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A ggplot2 theme for the package — theme_biomasslmb","text":"","code":"set.seed(11) library(ggplot2)  df <- diamonds[sample(nrow(diamonds), 1000), ]  ggplot(df, aes(x = price, y = carat)) +   geom_point() +   theme_biomasslmb()"},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/tmt_qf.html","id":null,"dir":"Reference","previous_headings":"","what":"TMT data — tmt_qf","title":"TMT data — tmt_qf","text":"Qfeature containing TMT data processed TMT QC PSM-level quantification summarisation protein-level abundance vignette","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/tmt_qf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"TMT data — tmt_qf","text":"","code":"tmt_qf"},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/tmt_qf.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"TMT data — tmt_qf","text":"object class QFeatures length 8.","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/update_average_sn.html","id":null,"dir":"Reference","previous_headings":"","what":"Adds new feature describing the average reporter Signal/Noise ratio. — update_average_sn","title":"Adds new feature describing the average reporter Signal/Noise ratio. — update_average_sn","text":"PD column Average.Reporter.SN NA tags missing values imputes value zero NA tags missing. , 10-plex TMT experiment, single tag SN 10 others NA, PD report average SN 10/10 = 1. function adds average reporter SN column ignores missing values. example , average SN value reported 10. values NA, average SN remain NA. assumption intensity values exprs matrix Signal/Noise ratios, reported PD default","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/update_average_sn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adds new feature describing the average reporter Signal/Noise ratio. — update_average_sn","text":"","code":"update_average_sn(obj, sn_col = \"Average.Reporter.SN\")"},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/update_average_sn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adds new feature describing the average reporter Signal/Noise ratio. — update_average_sn","text":"obj SummarizedExperiment. contain PSMs-level TMT quantification sn_col string. Name output column containing average signal:noise","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/update_average_sn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Adds new feature describing the average reporter Signal/Noise ratio. — update_average_sn","text":"Returns MSnSet average SN included new feature column.","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/update_peptide_assignments.html","id":null,"dir":"Reference","previous_headings":"","what":"Update PSM level protein/master protein assignments using peptide-level assignments — update_peptide_assignments","title":"Update PSM level protein/master protein assignments using peptide-level assignments — update_peptide_assignments","text":"multiple search engines used Proteome Discoverer TMT proteomics PSM protein master protein assignments may consistent search engines. can resolve using peptide level output Proteome Discoverer, consistent assignments","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/update_peptide_assignments.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update PSM level protein/master protein assignments using peptide-level assignments — update_peptide_assignments","text":"","code":"update_peptide_assignments(   obj,   pep_inf,   verbose = FALSE,   master_protein_col = \"Master.Protein.Accessions\" )"},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/update_peptide_assignments.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update PSM level protein/master protein assignments using peptide-level assignments — update_peptide_assignments","text":"obj SummarisedExperiment containing PSM-level output Proteome Discoverer. pep_inf string. Filepath Peptide-level output verbose boolean. Default FALSE; output tallies PSMs/proteins. master_protein_col string. Name column containing master proteins. (used verbose=TRUE)","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/update_peptide_assignments.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update PSM level protein/master protein assignments using peptide-level assignments — update_peptide_assignments","text":"Returns SummarisedExperiment standardised assignments","code":""},{"path":"https://lmb-mass-spec-compbio.github.io/biomasslmb/reference/update_peptide_assignments.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Update PSM level protein/master protein assignments using peptide-level assignments — update_peptide_assignments","text":"Leucine/Isoleucine Leucine/Isoleucine isobaric generate distinct fragments higher collision energies typically used proteomics analysis. Thus, L usually indistinguishable. spectrum search engines deal differently terms report multiple possible sequence matches assignments. peptide level Proteome Discoverer output selects one possible sequence uses union reported assignments PSM level peptide level assignments. Thus, use peptide level assignments, lose PSM level data redundant sequences selected. issue result function output shorter input.","code":""},{"path":[]}]
